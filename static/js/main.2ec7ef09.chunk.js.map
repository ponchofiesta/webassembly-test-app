{"version":3,"sources":["lib/benchmarks/Benchmark.js","lib/benchmarks/fibonacci/FibonacciJS.js","lib/benchmarks/hanoi/HanoiJS.js","lib/benchmarks/sort/SortJS.js","lib/benchmarks/prime/SieveOfAtkinPrimeJS.js","lib/benchmarks/aes/AesJS.js","lib/benchmarks/deflate/DeflateJS.js","lib/benchmarks/convolve/ConvolveJS.js","lib/benchmarks/convolve/ConvolveRust.js","lib/benchmarks/convolve/ConvolveGo.js","lib/benchmarks/DefaultBenchmark.js","lib/benchmarks/iterate/IterateJS.js","lib/benchmarks/strings/StringsDynamicJS.js","lib/benchmarks/RepeatingDefaultBenchmark.js","lib/benchmarks/strings/StringsStaticJS.js","lib/benchmarks/sum/SumJS.js","lib/benchmarks/VideoBenchmark.js","lib/benchmarks/convolve_video/ConvolveVideoJS.js","lib/benchmarks/convolve_video/ConvolveVideoRust.js","lib/benchmarks/convolve_video/ConvolveVideoGo.js","lib/Config.js","components/Benchmark.js","components/Benchmarks.js","lib/mediaLoader.js","lib/benchmarkRunner.js","components/BenchmarksPage.js","components/WebassemblyTestApp.js","serviceWorker.js","index.js"],"names":["Benchmark","constructor","this","result","startTime","stopTime","prepareTestData","url","console","warn","constuctor","name","resetTestData","run","start","performance","now","stop","results","createCanvas","image","canvas","document","createElement","width","height","getContext","drawImage","updateCanvas","domCanvas","calcCanvas","putImageData","getImageData","FibonacciJS","fibonacci","n","t","a","b","benchmark","debug","super","parameters","HanoiJS","moves","hanoi","from","via","to","SortJS","sort","data","firstEl","secondEl","JSON","parse","stringify","externalData","SieveOfAtkinPrimeJS","prime","max","primes","push","sieve","Array","fill","x","y","r","i","AesJS","aes_encrypt","key","iv","aesjs","cbc","encrypt","aes_decrypt","decrypt","dataBytes","utf8","toBytes","DeflateJS","deflate","pako","raw","ConvolveJS","convoluteFilter","matrix","factor","side","Math","round","sqrt","length","halfSide","floor","context","source","sourceData","imageWidth","imageHeight","output","createImageData","outputData","outputIndex","g","cy","cx","scy","scx","sourceIndex","modify","convolve","ConvolveRust","window","wasm","rust","ConvolveGo","imageData","set","go","convolve_mem","DefaultBenchmark","method","type","Error","IterateJS","iterate","res","StringsDynamicJS","strings_dynamic","includes","params","slice","RepeatingDefaultBenchmark","repeat","newBenchmark","StringsStaticJS","SumJS","sum","numbers","reduce","VideoBenchmark","video","frameCount","onDraw","onEnd","resolveOrReject","getVideoFrame","videoWidth","videoHeight","renderVideo","paused","requestAnimationFrame","bind","count","half","index","cpx","onLoad","promise","Promise","resolve","reject","addEventListener","play","ConvolveVideoJS","ConvolveVideoRust","convolve_video","ConvolveVideoGo","roundFormatter","value","fpsFormatter","toFixed","barChartOptions","chart","animations","enabled","markers","size","dataLabels","formatter","xaxis","title","text","categories","yaxis","labels","legend","show","align","tooltip","areaChartOptions","config","players","js","logo","color","benchmarks","description","runners","factory","component","Chart","options","error","strings_static","path","aes","showCanvas","Component","props","onRun","fitToParent","element","ratio","parentElement","clientWidth","style","render","Segment","Header","as","floated","Subheader","Button","circular","basic","icon","content","onClick","disabled","someRunning","loading","running","clear","List","horizontal","divided","map","runner","Item","avatar","src","alt","Content","Fragment","ref","div","innerHTML","appendChild","series","Message","header","WebAssembly","RuntimeError","stack","Benchmarks","loadExternalData","async","Image","HTMLImageElement","event","HTMLVideoElement","load","errorEvent","mediaLoader","response","fetch","clone","json","e","flat","String","runBenchmark","colors","some","prepare_test_data","prepareExternalData","reset_test_data","instance","BenchmarksPage","setStatePromise","state","setState","setTimeout","onRunAll","progress","progressTotal","onRunBenchmark","onBenchmarkLoad","entry","filter","benchEntry","Object","assign","Container","Divider","hidden","bench","Progress","total","WebassemblyTestApp","componentDidMount","Go","all","instantiateStreaming","importObject","then","module","catch","message","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ec7ef09.chunk.js","sourcesContent":["class Benchmark {\n\n    constructor() {\n        this.result = null;\n        this.startTime = null;\n        this.stopTime = null;\n    }\n\n    prepareTestData(url) {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    resetTestData(url) {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    run() {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    start() {\n        this.startTime = performance.now();\n    }\n\n    stop() {\n        this.stopTime = performance.now();\n        this.result = this.stopTime - this.startTime;\n    }\n\n    results() {\n        return this.result;\n    }\n\n    createCanvas(image) {\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        return canvas;\n    }\n\n    updateCanvas(domCanvas, calcCanvas) {\n        domCanvas.width = calcCanvas.width;\n        domCanvas.height = calcCanvas.height;\n        domCanvas.getContext(\"2d\").putImageData(calcCanvas.getContext(\"2d\").getImageData(0, 0, calcCanvas.width, calcCanvas.height), 0, 0);\n    }\n\n\n\n}\nexport default Benchmark;\n","import Benchmark from \"../Benchmark\";\n\nclass FibonacciJS extends Benchmark {\n\n    fibonacci(n) {\n        let a = 0\n        let b = 1\n        let t;\n        while (n-- > 0) {\n            t = a;\n            a = b;\n            b += t;\n        }\n        return a;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.fibonacci(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciJS;\n","import Benchmark from \"../Benchmark\";\n\nclass HanoiJS extends Benchmark {\n\n    constructor() {\n        super();\n        this.moves = \"\";\n    }\n\n    hanoi(n, from, via, to) {\n        if (n > 0) {\n            this.hanoi(n - 1, from, to, via);\n            this.moves += from + \"->\" + to + \"\\n\";\n            this.hanoi(n - 1, via, from, to);\n        }\n        return this.moves;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.hanoi(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiJS;\n","import Benchmark from \"../Benchmark\";\n\nclass SortJS extends Benchmark {\n\n    sort(data) {\n        return data.sort((firstEl, secondEl) => {\n            if (firstEl.name < secondEl.name) {\n                return -1;\n            } else if (firstEl.name > secondEl.name) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        let data = JSON.parse(JSON.stringify(benchmark.externalData.data));\n        super.start();\n        this.sort(data);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortJS;\n","import Benchmark from \"../Benchmark\";\n\nclass SieveOfAtkinPrimeJS extends Benchmark {\n\n    prime(max) {\n        let primes = [];\n\n        if (max > 2)\n            primes.push(2);\n        if (max > 3)\n            primes.push(3);\n\n        // Initialise the sieve array with false values\n        let sieve = Array(max).fill(false);\n\n        /* Mark siev[n] is true if one\n           of the following is true:\n        a) n = (4*x*x)+(y*y) has odd number of\n           solutions, i.e., there exist\n           odd number of distinct pairs (x, y)\n           that satisfy the equation and\n            n % 12 = 1 or n % 12 = 5.\n        b) n = (3*x*x)+(y*y) has odd number of\n           solutions and n % 12 = 7\n        c) n = (3*x*x)-(y*y) has odd number of\n           solutions, x > y and n % 12 = 11 */\n        for (let x = 1; x * x < max; x++) {\n            for (let y = 1; y * y < max; y++) {\n\n                // Main part of Sieve of Atkin\n                let n = (4 * x * x) + (y * y);\n                if (n <= max && (n % 12 === 1 || n % 12 === 5))\n                    sieve[n] ^= true;\n\n                n = (3 * x * x) + (y * y);\n                if (n <= max && n % 12 === 7)\n                    sieve[n] ^= true;\n\n                n = (3 * x * x) - (y * y);\n                if (x > y && n <= max && n % 12 === 11)\n                    sieve[n] ^= true;\n            }\n        }\n\n        // Mark all multiples of squares as non-prime\n        for (let r = 5; r * r < max; r++) {\n            if (sieve[r]) {\n                for (let i = r * r; i < max; i += r * r)\n                    sieve[i] = false;\n            }\n        }\n\n        // Print primes using sieve[]\n        for (let a = 5; a < max; a++)\n            if (sieve[a])\n                primes.push(a);\n\n        return primes;\n    }\n\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        this.prime(...benchmark.parameters);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SieveOfAtkinPrimeJS;\n","import Benchmark from \"../Benchmark\";\nimport * as aesjs from \"aes-js\";\n\nclass AesJS extends Benchmark {\n\n    aes_encrypt(key, iv, data) {\n        let aesCtr = new aesjs.ModeOfOperation.cbc(key, iv);\n        return aesCtr.encrypt(data);\n    }\n\n    aes_decrypt(key, iv, data) {\n        let aesCtr = new aesjs.ModeOfOperation.cbc(key, iv);\n        return aesCtr.decrypt(data);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        let dataBytes = aesjs.utils.utf8.toBytes(benchmark.externalData.data);\n        super.start();\n        this.aes_encrypt(...benchmark.parameters, dataBytes);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default AesJS;\n","import Benchmark from \"../Benchmark\";\nimport pako from \"pako\";\nimport * as aesjs from \"aes-js\";\n\nclass DeflateJS extends Benchmark {\n\n    deflate(data) {\n        return pako.deflate(data, {raw: true});\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        let dataBytes = aesjs.utils.utf8.toBytes(benchmark.externalData.data);\n        super.start();\n        this.deflate(dataBytes);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DeflateJS;\n","import Benchmark from \"../Benchmark\";\n\nclass ConvolveJS extends Benchmark {\n\n    convolve(canvas) {\n        let blur = [\n            0.0, 0.2, 0.0,\n            0.2, 0.2, 0.2,\n            0.0, 0.2, 0.0\n        ];\n        this.convoluteFilter(canvas, blur, 1);\n    }\n\n    convoluteFilter = (canvas, matrix, factor) => {\n        const side = Math.round(Math.sqrt(matrix.length));\n        const halfSide = Math.floor(side / 2);\n        const context = canvas.getContext('2d');\n        const source = context.getImageData(0, 0, canvas.width, canvas.height);\n        const sourceData = source.data;\n        const imageWidth = source.width;\n        const imageHeight = source.height;\n        const output = context.createImageData(imageWidth, imageHeight);\n        const outputData = output.data;\n\n        for (let y = 0; y < imageHeight; y++) {\n            for (let x = 0; x < imageWidth; x++) {\n                const outputIndex = (y * imageWidth + x) * 4;\n                let r = 0.0;\n                let g = 0.0;\n                let b = 0.0;\n                for (let cy = 0; cy < side; cy++) {\n                    for (let cx = 0; cx < side; cx++) {\n                        const scy = y + cy - halfSide;\n                        const scx = x + cx - halfSide;\n                        if (scy >= 0 && scy < imageHeight && scx >= 0 && scx < imageWidth) {\n                            const sourceIndex = (scy * imageWidth + scx) * 4;\n                            const modify = matrix[cy * side + cx];\n                            r += sourceData[sourceIndex] * modify;\n                            g += sourceData[sourceIndex + 1] * modify;\n                            b += sourceData[sourceIndex + 2] * modify;\n                        }\n                    }\n                }\n                outputData[outputIndex] = r * factor;\n                outputData[outputIndex + 1] = g * factor;\n                outputData[outputIndex + 2] = b * factor;\n                outputData[outputIndex + 3] = sourceData[outputIndex + 3];\n            }\n        }\n\n        context.putImageData(output, 0, 0);\n    };\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        // draw image on canvas\n        const canvas = this.createCanvas(benchmark.externalData.data);\n\n        super.start();\n        this.convolve(canvas);\n        super.stop();\n\n        //const data = canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height);\n        //console.log(data.data[0] + ' ' + data.data[1] + ' ' + data.data[2]);\n\n        // draw result on canvas\n        this.updateCanvas(benchmark.canvas, canvas);\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default ConvolveJS;\n","import Benchmark from \"../Benchmark\";\n\nclass ConvolveRust extends Benchmark {\n\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        // draw image on canvas\n        const canvas = this.createCanvas(benchmark.externalData.data);\n\n        super.start();\n        window.wasm.rust.convolve(canvas);\n        super.stop();\n\n        //const data = canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height);\n        //console.log(data.data[0] + ' ' + data.data[1] + ' ' + data.data[2]);\n\n        // draw result on canvas\n        this.updateCanvas(benchmark.canvas, canvas);\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default ConvolveRust;\n","import Benchmark from \"../Benchmark\";\n\nclass ConvolveGo extends Benchmark {\n\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        // draw image on canvas\n        const canvas = this.createCanvas(benchmark.externalData.data);\n\n        super.start();\n\n        const context = canvas.getContext(\"2d\");\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        imageData.data.set(window.wasm.go.convolve_mem(imageData.data, canvas.width, canvas.height));\n        context.putImageData(imageData, 0, 0);\n\n        super.stop();\n\n        this.updateCanvas(benchmark.canvas, canvas);\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default ConvolveGo;\n","import Benchmark from \"./Benchmark\";\n\nclass DefaultBenchmark extends Benchmark {\n\n    constructor(method) {\n        super();\n        const type = typeof method;\n        if (type !== \"function\") {\n            throw new Error(\"method parameter must be a function, actually it is '\" + type + \"'.\");\n        }\n        this.method = method;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        super.start();\n        this.method(benchmark);\n        super.stop();\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\n\nexport default DefaultBenchmark;","import Benchmark from \"../Benchmark\";\n\nclass IterateJS extends Benchmark {\n\n    iterate(max) {\n        let res = 0;\n        for (let i = 0; i < max; ++i) {\n            res++;\n        }\n        return res;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.iterate(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default IterateJS;\n","import Benchmark from \"../Benchmark\";\n\nclass StringsDynamicJS extends Benchmark {\n\n    strings_dynamic(a, b) {\n        return a.includes(b);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        let params = benchmark.parameters.slice(1);\n        for (let i = 0; i < benchmark.parameters[0]; i++) {\n            this.strings_dynamic(...params);\n        }\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default StringsDynamicJS;\n","import DefaultBenchmark from \"./DefaultBenchmark\";\n\nclass RepeatingDefaultBenchmark extends DefaultBenchmark {\n\n    constructor(method) {\n        super(method);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        super.start();\n        let repeat = benchmark.parameters[0];\n        let parameters = benchmark.parameters.slice(1);\n        let newBenchmark = {...benchmark, parameters};\n        for (let i = 0; i < repeat; i++) {\n            this.method(newBenchmark);\n        }\n        super.stop();\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\n\nexport default RepeatingDefaultBenchmark;","import StringsDynamicJS from \"./StringsDynamicJS\";\n\nclass StringsStaticJS extends StringsDynamicJS {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        let a = \"hello world\";\n        let b = \"world\";\n        for (let i = 0; i < benchmark.parameters[0]; i++) {\n            super.strings_dynamic(a, b);\n        }\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default StringsStaticJS;\n","import Benchmark from \"../Benchmark\";\n\nclass SumJS extends Benchmark {\n\n    sum(numbers) {\n        return numbers.reduce((x, y) => x + y, 0);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        for (let i = 0; i < benchmark.parameters[0]; i++) {\n            this.sum([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n        }\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SumJS;\n","import Benchmark from \"./Benchmark\";\n\nclass VideoBenchmark extends Benchmark {\n\n    constructor() {\n        super();\n        this.canvas = null;\n        this.context = null;\n        this.video = null;\n        this.frameCount = 0;\n        this.onDraw = null;\n    }\n\n    onEnd(resolveOrReject) {\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n        resolveOrReject();\n    }\n\n    getVideoFrame() {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.video.videoWidth;\n        canvas.height =  this.video.videoHeight;\n        const context = canvas.getContext('2d');\n        context.drawImage(this.video, 0, 0, canvas.width, canvas.height);\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        return imageData;\n    }\n\n    renderVideo() {\n        this.onDraw();\n        if (!this.video.paused) {\n            requestAnimationFrame(this.renderVideo.bind(this));\n        }\n    }\n\n    convolve(data, width, height, matrix, factor, count=1) {\n        const side = matrix.length;\n        const half = Math.floor(side / 2);\n        for (let i = 0; i < count; i += 1) {\n            for (let y = 1; y < height - 1; y += 1) {\n                for (let x = 1; x < width - 1; x += 1) {\n                    const index = (y * width + x) * 4;\n                    let r = 0;\n                    let g = 0;\n                    let b = 0;\n                    for (let cy = 0; cy < side; ++cy) {\n                        for (let cx = 0; cx < side; ++cx) {\n                            const cpx = ((y + (cy - half)) * width + (x + (cx - half))) * 4;\n                            r += data[cpx] * matrix[cy][cx];\n                            g += data[cpx + 1] * matrix[cy][cx];\n                            b += data[cpx + 2] * matrix[cy][cx];\n                        }\n                    }\n\n                    data[index] = factor * r;\n                    data[index + 1] = factor * g;\n                    data[index + 2] = factor * b;\n                }\n            }\n        }\n        return data;\n    }\n\n    async run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        this.video = benchmark.externalData.data;\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = this.video.videoWidth;\n        canvas.height = this.video.videoHeight;\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n\n        await this.onLoad({\n            ...benchmark,\n            video: benchmark.externalData.data,\n            canvas: canvas\n        });\n\n        const promise = new Promise((resolve, reject) => {\n            this.video.addEventListener(\"ended\", () => {\n                this.onEnd(resolve);\n            }, false);\n            this.video.addEventListener(\"error\", () => {\n                this.onEnd(reject);\n            }, false);\n        });\n\n        super.start();\n\n        this.video.play();\n        this.renderVideo();\n\n        return promise;\n    }\n\n    results() {\n        this.result = this.frameCount / (this.stopTime - this.startTime) * 1000;\n        return this.result;\n    }\n}\nexport default VideoBenchmark;\n","import VideoBenchmark from \"../VideoBenchmark\";\n\nclass ConvolveVideoJS extends VideoBenchmark {\n\n    constructor() {\n        super();\n        super.onDraw = () => {\n            let imageData = this.getVideoFrame();\n            imageData.data.set(this.convolve(imageData.data, this.video.videoWidth, this.video.videoHeight, [[1, 1, 1], [1, 1, 1], [1, 1, 1]],1/9,6));\n            this.context.putImageData(imageData, 0, 0);\n            this.frameCount++;\n        };\n    }\n\n    convolve(data, width, height, matrix, factor, count=1) {\n        const side = matrix.length;\n        const half = Math.floor(side / 2);\n        for (let i = 0; i < count; i += 1) {\n            for (let y = 1; y < height - 1; y += 1) {\n                for (let x = 1; x < width - 1; x += 1) {\n                    const index = (y * width + x) * 4;\n                    let r = 0;\n                    let g = 0;\n                    let b = 0;\n                    for (let cy = 0; cy < side; ++cy) {\n                        for (let cx = 0; cx < side; ++cx) {\n                            const cpx = ((y + (cy - half)) * width + (x + (cx - half))) * 4;\n                            r += data[cpx] * matrix[cy][cx];\n                            g += data[cpx + 1] * matrix[cy][cx];\n                            b += data[cpx + 2] * matrix[cy][cx];\n                        }\n                    }\n\n                    data[index] = factor * r;\n                    data[index + 1] = factor * g;\n                    data[index + 2] = factor * b;\n                }\n            }\n        }\n        return data;\n    }\n}\nexport default ConvolveVideoJS;\n","import VideoBenchmark from \"../VideoBenchmark\";\n\nclass ConvolveVideoRust extends VideoBenchmark {\n\n    constructor() {\n        super();\n        super.onDraw = () => {\n            let imageData = this.getVideoFrame();\n            imageData.data.set(this.convolve(imageData.data, this.video.videoWidth, this.video.videoHeight));\n            this.context.putImageData(imageData, 0, 0);\n            this.frameCount++;\n        };\n    }\n\n    convolve(data, width, height) {\n        const outData = window.wasm.rust.convolve_video(data, this.video.videoWidth, this.video.videoHeight, 1/9, 6);\n        return outData;\n    }\n}\nexport default ConvolveVideoRust;\n","import VideoBenchmark from \"../VideoBenchmark\";\n\nclass ConvolveVideoGo extends VideoBenchmark {\n\n    constructor() {\n        super();\n        super.onDraw = () => {\n            let imageData = this.getVideoFrame();\n            imageData.data.set(this.convolve(imageData.data, this.video.videoWidth, this.video.videoHeight));\n            this.context.putImageData(imageData, 0, 0);\n            this.frameCount++;\n        };\n    }\n\n    convolve(data, width, height) {\n        data = window.wasm.go.convolve_video(data, this.canvas.width, this.canvas.height, 1/9, 6);\n        return data;\n    }\n}\nexport default ConvolveVideoGo;\n","import Chart from \"react-apexcharts\";\nimport FibonacciJS from \"./benchmarks/fibonacci/FibonacciJS\";\nimport HanoiJS from \"./benchmarks/hanoi/HanoiJS\";\nimport SortJS from \"./benchmarks/sort/SortJS\";\nimport SieveOfAtkinPrimeJS from \"./benchmarks/prime/SieveOfAtkinPrimeJS\";\nimport AesJS from \"./benchmarks/aes/AesJS\";\nimport DeflateJS from \"./benchmarks/deflate/DeflateJS\";\nimport ConvolveJS from \"./benchmarks/convolve/ConvolveJS\";\nimport ConvolveRust from \"./benchmarks/convolve/ConvolveRust\";\nimport ConvolveGo from \"./benchmarks/convolve/ConvolveGo\";\nimport DefaultBenchmark from \"./benchmarks/DefaultBenchmark\";\nimport IterateJS from \"./benchmarks/iterate/IterateJS\";\nimport StringsDynamicJS from \"./benchmarks/strings/StringsDynamicJS\";\nimport RepeatingDefaultBenchmark from \"./benchmarks/RepeatingDefaultBenchmark\";\nimport StringsStaticJS from \"./benchmarks/strings/StringsStaticJS\";\nimport SumJS from \"./benchmarks/sum/SumJS\";\nimport ConvolveVideoJS from \"./benchmarks/convolve_video/ConvolveVideoJS\";\nimport ConvolveVideoRust from \"./benchmarks/convolve_video/ConvolveVideoRust\";\nimport ConvolveVideoGo from \"./benchmarks/convolve_video/ConvolveVideoGo\";\n\nconst roundFormatter = value => Math.round(value);\nconst msFormatter = value => roundFormatter(value) + \" ms\";\nconst fpsFormatter = value => value.toFixed(1) + \" fps\";\n\nconst barChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 64,\n        type: \"bar\",\n        animations: {\n            enabled: false/*,\n            easing: 'easeinout',\n            speed: 200,\n            animateGradually: {\n                enabled: true,\n                delay: 0\n            },\n            dynamicAnimation: {\n                enabled: true,\n                speed: 200\n            }*/\n        }\n    },\n    markers: {\n        size: 7\n    },\n    dataLabels: {\n        enabled: true,\n        formatter: fpsFormatter\n    },\n    xaxis: {\n        title: {\n            text: \"Iterations\"\n        },\n        categories: []\n    },\n    yaxis: {\n        title: {\n            text: \"Frames per second\"\n        },\n        labels: {\n            formatter: fpsFormatter\n        }\n    },\n    legend: {\n        show: true\n    },\n    title: {\n        text: 'Frame rate',\n        align: 'left'\n    },\n    tooltip: {\n        y: {\n            formatter: fpsFormatter\n        }\n    }\n};\n\nconst areaChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 16,\n        type: \"line\",\n        animations: {\n            enabled: false/*,\n            easing: 'easeinout',\n            speed: 200,\n            animateGradually: {\n                enabled: true,\n                delay: 0\n            },\n            dynamicAnimation: {\n                enabled: true,\n                speed: 200\n            }*/\n        }\n    },\n    markers: {\n        size: 7\n    },\n    dataLabels: {\n        enabled: true,\n        formatter: roundFormatter\n    },\n    xaxis: {\n        title: {\n            text: \"Iterations\"\n        },\n        categories: []\n    },\n    yaxis: {\n        title: {\n            text: \"Duration in ms\"\n        },\n        labels: {\n            formatter: roundFormatter\n        }\n    },\n    legend: {\n        show: true\n    },\n    title: {\n        text: 'Time taken to run the benchmarks',\n        align: 'left'\n    },\n    tooltip: {\n        y: {\n            formatter: msFormatter\n        }\n    }\n};\n\n\nlet config = {\n    players: {\n        js: {\n            logo: \"logos/es-ecmascript-logo.svg\",\n            color: \"rgb(248,220,61)\"\n        },\n        rust: {\n            logo: \"logos/rust-logo-blk.svg\",\n            color: \"black\"\n        },\n        go: {\n            logo: \"logos/Go-Logo_Aqua.svg\",\n            color: \"#2DBCAF\"\n        }\n    },\n    benchmarks: [\n        {\n            name: \"Iterate\",\n            description: \"simple number iteration\",\n            runners: [\n                {\n                    name: \"Iterate 100m\",\n                    type: \"js\",\n                    factory: () => new IterateJS()\n                },\n                {\n                    name: \"Iterate 100m\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.iterate(...benchmark.parameters))\n                },\n                {\n                    name: \"Iterate 100m\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.iterate(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                100000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Strings dynamic\",\n            description: \"\",\n            runners: [\n                {\n                    name: \"strings\",\n                    type: \"js\",\n                    factory: () => new StringsDynamicJS()\n                },\n                {\n                    name: \"strings\",\n                    type: \"rust\",\n                    factory: () => new RepeatingDefaultBenchmark(benchmark => window.wasm.rust.strings_dynamic(...benchmark.parameters))\n                },\n                {\n                    name: \"strings\",\n                    type: \"go\",\n                    factory: () => new RepeatingDefaultBenchmark(benchmark => window.wasm.go.strings_dynamic(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                10000, \"hello world\", \"world\"\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Strings static\",\n            description: \"\",\n            runners: [\n                {\n                    name: \"strings\",\n                    type: \"js\",\n                    factory: () => new StringsStaticJS()\n                },\n                {\n                    name: \"strings\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.strings_static(...benchmark.parameters))\n                },\n                {\n                    name: \"strings\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.strings_static(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                1000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Sum static\",\n            description: \"\",\n            runners: [\n                {\n                    name: \"sum\",\n                    type: \"js\",\n                    factory: () => new SumJS()\n                },\n                {\n                    name: \"sum\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.sum(...benchmark.parameters))\n                },\n                {\n                    name: \"sum\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.sum(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                1000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Fibunacci sequence\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Iterative 100m\",\n                    type: \"js\",\n                    factory: () => new FibonacciJS()\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.fibonacci(...benchmark.parameters))\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.fibonacci(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                100000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Towers of Hanoi\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Recursive 20\",\n                    type: \"js\",\n                    factory: () => new HanoiJS()\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.hanoi(...benchmark.parameters))\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.hanoi(...benchmark.parameters))\n                }\n            ],\n            parameters: [ 20, \"A\", \"B\", \"C\" ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Sort\",\n            description: \"Sort a list of elements containing multiple fields\",\n            runners: [\n                {\n                    name: \"Sort\",\n                    type: \"js\",\n                    factory: () => new SortJS()\n                },\n                {\n                    name: \"Sort\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.sort(...benchmark.parameters))\n                },\n                {\n                    name: \"Sort\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.sort(...benchmark.parameters))\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"sort\",\n                path: \"data/users.json\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Prime numbers\",\n            description: \"Sieve of Atkin\",\n            runners: [\n                {\n                    name: \"Prime\",\n                    type: \"js\",\n                    factory: () => new SieveOfAtkinPrimeJS()\n                },\n                {\n                    name: \"Prime\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.prime(...benchmark.parameters))\n                },\n                {\n                    name: \"Prime\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.prime(...benchmark.parameters))\n                }\n            ],\n            parameters: [3000000],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Encryption\",\n            description: \"Encryption\",\n            runners: [\n                {\n                    name: \"AES CBC\",\n                    type: \"js\",\n                    factory: () => new AesJS()\n                },\n                {\n                    name: \"AES CBC\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.rust.aes())\n                },\n                {\n                    name: \"AES CBC\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.go.aes())\n                }\n            ],\n            parameters: [\n                [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n                [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n            ],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Compression Deflate\",\n            description: \"Deflate\",\n            runners: [\n                {\n                    name: \"Deflate\",\n                    type: \"js\",\n                    factory: () => new DeflateJS()\n                },\n                {\n                    name: \"Deflate\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.go.deflate())\n                },\n                {\n                    name: \"Deflate\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.go.deflate())\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 500\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Convolution filter\",\n            description: \"convolution filter\",\n            runners: [\n                {\n                    name: \"convolve\",\n                    type: \"js\",\n                    factory: () => new ConvolveJS()\n                },\n                {\n                    name: \"convolve\",\n                    type: \"rust\",\n                    factory: () => new ConvolveRust()\n                },\n                {\n                    name: \"convolve\",\n                    type: \"go\",\n                    factory: () => new ConvolveGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"image\",\n                path: \"data/photo.jpg\",\n                repeat: 1\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            showCanvas: true,\n            canvas: document.createElement(\"canvas\"),\n            result: [],\n            error: null\n        },\n        {\n            name: \"Video filter\",\n            description: \"video filter\",\n            runners: [\n                {\n                    name: \"convolve video\",\n                    type: \"js\",\n                    factory: () => new ConvolveVideoJS()\n                },\n                {\n                    name: \"convolve video\",\n                    type: \"rust\",\n                    factory: () => new ConvolveVideoRust()\n                },\n                {\n                    name: \"convolve video\",\n                    type: \"go\",\n                    factory: () => new ConvolveVideoGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"video\",\n                path: \"data/flowers.mp4\",\n                repeat: 1\n            },\n            repeat: 1,\n            chart: {\n                component: Chart,\n                options: barChartOptions\n            },\n            showCanvas: true,\n            canvas: null,\n            video: null,\n            result: [],\n            error: null\n        }\n    ]\n};\n\nexport default config;\n","import React, {Component, ReactNode} from 'react';\nimport {Button, Header, Image, List, Message, Segment} from 'semantic-ui-react'\nimport config from \"../lib/Config\";\n\nclass Benchmark extends Component {\n\n    run = () => {\n        if (this.props.onRun) {\n            this.props.onRun(this.props);\n        }\n    };\n\n    fitToParent(element) {\n        const ratio = element.parentElement.clientWidth / element.width;\n        if (ratio > 1) {\n            return;\n        }\n        element.style.width = element.parentElement.clientWidth + \"px\";\n        element.style.height = (ratio * element.height) + \"px\";\n    }\n\n    render() {\n        return <Segment>\n            {/*<Dimmer inverted active={this.props.running}>\n                <Loader disabled={!this.props.running}>Running</Loader>\n            </Dimmer>*/}\n            <Header as=\"h2\" floated=\"left\">\n                {this.props.name}\n                <Header.Subheader>{this.props.description}</Header.Subheader>\n            </Header>\n            <Button circular basic color=\"teal\" icon=\"play circle\" content=\"Run\" onClick={() => this.run()} floated=\"right\"  disabled={this.props.someRunning} loading={this.props.running}/>\n            <Header as=\"h3\" style={{clear: 'both'}}>Runners</Header>\n            <List horizontal divided>\n                {this.props.runners.map(runner =>\n                    <List.Item key={runner.name+\"-\"+runner.type}>\n                        <Image avatar src={config.players[runner.type].logo} alt={runner.type}/>\n                        <List.Content>\n                            <List.Header>{runner.name}</List.Header>\n                        </List.Content>\n                    </List.Item>\n                )}\n            </List>\n\n            {this.props.canvas ?\n                <React.Fragment>\n                    <Header as=\"h3\">Canvas</Header>\n                    <div ref={div => {\n                        if (div) {\n                            div.innerHTML = \"\";\n                            div.appendChild(this.props.canvas);\n                            this.fitToParent(this.props.canvas);\n                            window.addEventListener('resize', () => this.fitToParent(this.props.canvas), false);\n                        }\n                    }}/>\n                    {this.props.video ?\n                    <div ref={div => {\n                        if (div) {\n                            div.innerHTML = \"\";\n                            div.appendChild(this.props.video);\n                            this.fitToParent(this.props.video);\n                            window.addEventListener('resize', () => this.fitToParent(this.props.video), false);\n                        }\n                    }}/>\n                    : null}\n                </React.Fragment>\n                : null}\n\n            {this.props.series && this.props.series[0].data.length ?\n                <React.Fragment>\n                    <Header as=\"h3\">Results</Header>\n                    <this.props.chart.component\n                    options={this.props.chart.options}\n                    series={this.props.series}\n                    {...this.props.chart.options.chart}\n                    height={this.props.chart.options.chart.height * this.props.series.length * this.props.series[0].data.length + 100}\n                />\n                </React.Fragment>\n                 : null}\n            {this.props.error ?\n                <Message error header=\"Some benchmarks had errors\"\n                         content={this.props.error instanceof WebAssembly.RuntimeError ? this.props.error.stack : this.props.error}/> : null\n            }\n        </Segment>\n    }\n}\n\nexport default Benchmark;\n","import React, {Component} from 'react';\nimport Benchmark from \"./Benchmark\";\n\nclass Benchmarks extends Component {\n\n    render() {\n        return <div style={{clear: 'both'}}>{\n            this.props.benchmarks.map(benchmark => {\n                return <Benchmark key={benchmark.name} {...benchmark} someRunning={this.props.someRunning} onRun={this.props.onRun} />;\n            })\n        }</div>\n    }\n}\n\nexport default Benchmarks;\n","const mediaLoader = (src, element) => {\n    const promise = new Promise((resolve, reject) => {\n        if (element instanceof HTMLImageElement) {\n            element.addEventListener(\"load\", event => {\n                resolve(element);\n            }, false);\n            element.src = src;\n        } else if (element instanceof HTMLVideoElement) {\n            element.addEventListener(\"loadeddata\", event => {\n                resolve(element);\n            }, false);\n            element.src = src;\n            element.load();\n        } else {\n            throw new Error(\"Invalid media type \" + typeof element);\n        }\n        element.addEventListener(\"error\", errorEvent => {\n            reject(errorEvent);\n        }, false);\n    });\n    return promise;\n};\n\nexport {mediaLoader};\n","import config from \"./Config\";\nimport {mediaLoader} from \"./mediaLoader\";\n\nconst loadExternalData = async externalData => {\n\n    let data = null;\n\n    // Download external benchmark data for JS\n    if (externalData) {\n        let element;\n        if (externalData.type === \"image\") {\n            element = new Image();\n        } else if (externalData.type === \"video\") {\n            element = document.createElement(\"video\");\n        }\n        if ([\"image\", \"video\"].includes(externalData.type)) {\n            data = await mediaLoader(externalData.path, element);\n        } else {\n            let response = await fetch(externalData.path);\n            try {\n                data = await response.clone().json();\n            } catch (e) {\n                data = await response.text();\n            }\n        }\n        if (externalData && externalData.repeat > 1) {\n            if (typeof data == \"object\") {\n                data = Array(externalData.repeat)\n                    .fill(data)\n                    .flat();\n            } else {\n                data = String(data).repeat(externalData.repeat);\n            }\n        }\n    }\n\n    if (data !== null) {\n        externalData.data = data;\n    }\n    return externalData;\n};\n\nconst prepareExternalData = (externalData, runners) => {\n\n    // Push benchmark data to Go and Rust\n    if (externalData && [\"sort\", \"bytes\"].includes(externalData.type)) {\n        if (runners.some(runner => runner.type === \"rust\")) {\n            window.wasm.rust.prepare_test_data(externalData.type, externalData.data);\n        }\n        if (runners.some(runner => runner.type === \"go\")) {\n            window.wasm.go.prepare_test_data(externalData.type, externalData.data);\n        }\n    }\n};\n\nconst runBenchmark = async (benchmark, onLoad) => {\n    let categories = [];\n    let series = [];\n    let colors = [];\n\n    await loadExternalData(benchmark.externalData);\n    prepareExternalData(benchmark.externalData, benchmark.runners);\n\n    // Run all benchmarks\n    for (let index = 0; index < benchmark.runners.length; index++) {\n        const runner = benchmark.runners[index];\n        colors.push(config.players[runner.type].color);\n        for (let i = 0; i < benchmark.repeat; i++) {\n            if (benchmark.externalData && benchmark.externalData.type) {\n                if (runner.type === \"rust\") {\n                    window.wasm.rust.reset_test_data(benchmark.externalData.type);\n                }\n                if (runner.type === \"go\") {\n                    window.wasm.go.reset_test_data(benchmark.externalData.type);\n                }\n            }\n            let instance = runner.factory();\n            instance.onLoad = onLoad;\n            await instance.run(benchmark);\n            //categories.push(runner.type + \": \" + runner.name);\n            if (categories.length < benchmark.repeat) {\n                categories.push(i + 1);\n            }\n            if (!series[index]) {\n                series[index] = {\n                    //name: \"Duration\",\n                    name: runner.type + \": \" + runner.name,\n                    data: []\n                };\n            }\n            series[index].data.push(instance.results());\n        }\n    }\n\n    //window.wasm.rust.clear_test_data(this.props.externalData.type);\n    //window.wasm.go.clear_test_data(this.props.externalData.type);\n\n    return {categories, series, colors};\n};\n\nexport {runBenchmark};\n","import React, {Component} from 'react';\nimport Benchmarks from \"./Benchmarks\";\nimport {Button, Container, Divider, Header, Progress} from \"semantic-ui-react\";\nimport {runBenchmark} from \"../lib/benchmarkRunner\";\n\nclass BenchmarksPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            running: false,\n            progress: 0,\n            progressTotal: 0,\n            benchmarks: props.benchmarks\n        };\n    }\n\n    setStatePromise = (state) => new Promise(resolve => {\n        this.setState(state, () => {\n            setTimeout(() => resolve(), 1);\n        });\n    });\n\n    onRunAll = async () => {\n        await  this.setStatePromise({\n            running: true,\n            progress: 0,\n            progressTotal: this.props.benchmarks.length\n        });\n        for (let i = 0; i < this.state.benchmarks.length; i++) {\n            try {\n                await this.setStatePromise({progress: i + 1});\n                await this.onRunBenchmark(this.props.benchmarks[i]);\n            } catch(e) {\n                console.error(e);\n            }\n        }\n        await this.setStatePromise({running: false});\n    };\n\n    onBenchmarkLoad = async benchmark => {\n        await this.setStatePromise(state => {\n            let entry = state.benchmarks.filter(benchEntry => benchEntry.name === benchmark.name)[0];\n            Object.assign(entry, benchmark);\n            return state;\n        });\n    };\n\n    onRunBenchmark = async benchmark => {\n        await this.setStatePromise(state => {\n            let entry = state.benchmarks.filter(benchEntry => benchEntry.name === benchmark.name)[0];\n            entry.running = true;\n            return state;\n        });\n\n        let result;\n        let error;\n        try {\n            result = await runBenchmark(benchmark, this.onBenchmarkLoad);\n        } catch (e) {\n            error = e;\n        }\n\n        await this.setStatePromise(state => {\n            let entry = state.benchmarks.filter(benchEntry => benchEntry.name === benchmark.name)[0];\n            entry.running = false;\n            if (result) {\n                entry.chart.options.xaxis.categories = result.categories;\n                entry.series = result.series;\n                entry.chart.options.colors = result.colors;\n            } else if (error) {\n                entry.error = error;\n            } else {\n                entry.error = \"Unknown error\";\n            }\n            return state;\n        });\n\n        return result;\n    };\n\n    render() {\n        return <Container>\n            <Divider hidden />\n            <Header as=\"h1\" floated=\"left\">Benchmarks</Header>\n            <Button circular color=\"teal\" icon=\"play circle\"\n                    content=\"Run all benchmarks\" floated=\"right\"\n                    loading={this.state.running} onClick={() => this.onRunAll()}\n                    disabled={this.state.running || this.state.benchmarks.some(bench => bench.running)}/>\n            {this.state.running && this.state.progressTotal\n                ? <div style={{clear: 'both'}}>\n                    <Progress value={this.state.progress} total={this.state.progressTotal} progress=\"ratio\"/>\n                </div>\n                : null}\n            <Benchmarks benchmarks={this.state.benchmarks} someRunning={this.state.running || this.state.benchmarks.some(bench => bench.running)} onRun={this.onRunBenchmark} />\n            <Divider hidden />\n        </Container>\n    }\n}\n\nexport default BenchmarksPage;\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport BenchmarksPage from \"./BenchmarksPage\";\nimport Benchmark from \"./Benchmark\";\nimport {Message} from \"semantic-ui-react\";\nimport config from \"../lib/Config\";\n\nclass WebassemblyTestApp extends Component {\n\n    constructor(props) {\n        super(props);\n        window.wasm = {};\n        this.state = {\n            loading: true,\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const go = new window.Go();\n        Promise.all([\n            import(\"webassembly-benchmarks-rust\"),\n            WebAssembly.instantiateStreaming(fetch('go/webassembly-benchmarks-go.wasm'), {\n                ...go.importObject\n            }),\n        ])\n            .then(module => {\n                window.wasm.rust = module[0];\n                go.run(module[1].instance);\n                this.setState({loading: false});\n            })\n            .catch(error => this.setState({error: error.message}));\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Message error>Could not start application: {this.state.error}</Message>\n        } else if (!this.state.loading) {\n            return <main>\n                <HashRouter>\n                    <Switch>\n                        <Route path='/' render={() => <BenchmarksPage benchmarks={config.benchmarks}/>}/>\n                        <Route path='/test/:id' component={Benchmark}/>\n                    </Switch>\n                </HashRouter>\n            </main>\n        } else {\n            return <div>Loading...</div>\n        }\n    }\n}\n\nexport default WebassemblyTestApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. WebassemblyTestApp is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WebassemblyTestApp from './components/WebassemblyTestApp';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nReactDOM.render(\n    <WebassemblyTestApp />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}