{"version":3,"sources":["lib/tests/Test.js","lib/tests/fibonacci/FibonacciJS.js","lib/tests/fibonacci/FibonacciRust.js","lib/tests/fibonacci/FibonacciGo.js","lib/tests/hanoi/HanoiJS.js","lib/tests/hanoi/HanoiRust.js","lib/tests/hanoi/HanoiGo.js","lib/tests/sort/SortJS.js","lib/tests/sort/SortRust.js","lib/tests/sort/SortGo.js","lib/tests/prime/SieveOfAtkinPrimeJS.js","lib/tests/prime/SieveOfAtkinPrimeRust.js","lib/tests/prime/SieveOfAtkinPrimeGo.js","lib/tests/aes/AesJS.js","lib/tests/aes/AesRust.js","lib/tests/aes/AesGo.js","lib/tests/deflate/DeflateJS.js","lib/tests/deflate/DeflateRust.js","lib/tests/deflate/DeflateGo.js","lib/Config.js","lib/runLater.js","components/Test.js","components/Tests.js","components/TestsPage.js","components/WebassemblyTestApp.js","serviceWorker.js","index.js"],"names":["Test","Object","classCallCheck","this","result","startTime","stopTime","url","console","warn","constuctor","name","Date","FibonacciJS","n","t","a","b","parameters","debug","constructor","get","getPrototypeOf","prototype","call","fibonacci","apply","toConsumableArray","FibonacciRust","_window$wasm$rust","window","wasm","rust","FibonacciGo","_window$wasm$go","go","HanoiJS","_this","possibleConstructorReturn","moves","from","via","to","hanoi","HanoiRust","HanoiGo","SortJS","data","sort","firstEl","secondEl","externalData","JSON","parse","stringify","SortRust","SortGo","SieveOfAtkinPrimeJS","max","primes","push","sieve","Array","fill","x","y","r","i","start","prime","stop","SieveOfAtkinPrimeRust","SieveOfAtkinPrimeGo","AesJS","key","iv","aesjs","cbc","encrypt","decrypt","dataBytes","utf8","toBytes","aes_encrypt","concat","AesRust","aes","AesGo","DeflateJS","pako","deflate","raw","DeflateRust","DeflateGo","areaChartOptions","chart","width","height","type","markers","size","dataLabels","enabled","xaxis","title","text","categories","yaxis","legend","show","align","tooltip","formatter","value","config","players","js","logo","color","tests","description","runners","factory","repeat","component","Chart","options","path","runLater","run","Promise","resolve","setTimeout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","props","startRun","reject","setState","running","errors","abrupt","then","finishRun","catch","error","message","_callee2","series","colors","response","_context2","fetch","clone","json","t0","flat","String","some","runner","prepare_test_data","forEach","index","reset_test_data","instance","length","results","state","react_default","createElement","Segment","Dimmer","inverted","active","Loader","disabled","Header","as","floated","Subheader","Button","circular","basic","icon","content","onClick","style","clear","List","horizontal","divided","map","Item","Image","avatar","src","alt","Content","Fragment","assign","Message","header","list","Component","Tests","testRefs","_this2","test","components_Test","ref","TestsPage","runAll","testsRef","current","React","createRef","Container","Divider","hidden","loading","components_Tests","WebassemblyTestApp","Go","all","__webpack_require__","e","bind","WebAssembly","instantiateStreaming","importObject","module","HashRouter","Switch","Route","render","components_TestsPage","Boolean","location","hostname","match","ReactDOM","components_WebassemblyTestApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63e2d833.chunk.js","sourcesContent":["class Test {\n\n    constructor() {\n        this.result = null;\n        this.startTime = null;\n        this.stopTime = null;\n    }\n\n    prepareTestData(url) {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    resetTestData(url) {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    run() {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    start() {\n        this.startTime = new Date();\n    }\n\n    stop() {\n        this.stopTime = new Date();\n        this.result = this.stopTime - this.startTime;\n    }\n\n    results() {\n        return this.result;\n    }\n}\nexport default Test;\n","import Test from \"../Test\";\n\nclass FibonacciJS extends Test {\n\n    fibonacci(n) {\n        let a = 0\n        let b = 1\n        let t;\n        while (n-- > 0) {\n            t = a;\n            a = b;\n            b += t;\n        }\n        return a;\n    }\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.fibonacci(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciJS;\n","import Test from \"../Test\";\n\nclass FibonacciRust extends Test {\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.fibonacci(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciRust;\n","import Test from \"../Test\";\n\nclass FibonacciGo extends Test {\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.fibonacci(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciGo;\n","import Test from \"../Test\";\n\nclass HanoiJS extends Test {\n\n    constructor() {\n        super();\n        this.moves = \"\";\n    }\n\n    hanoi(n, from, via, to) {\n        if (n > 0) {\n            this.hanoi(n - 1, from, to, via);\n            this.moves += from + \"->\" + to + \"\\n\";\n            this.hanoi(n - 1, via, from, to);\n        }\n        return this.moves;\n    }\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.hanoi(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiJS;\n","import Test from \"../Test\";\n\nclass HanoiRust extends Test {\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.hanoi(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiRust;\n","import Test from \"../Test\";\n\nclass HanoiGo extends Test {\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.hanoi(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiGo;\n","import Test from \"../Test\";\n\nclass SortJS extends Test {\n\n    sort(data) {\n        return data.sort((firstEl, secondEl) => {\n            if (firstEl.name < secondEl.name) {\n                return -1;\n            } else if (firstEl.name > secondEl.name) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        let data = JSON.parse(JSON.stringify(externalData.data));\n        super.start();\n        this.sort(data);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortJS;\n","import Test from \"../Test\";\n\nclass SortRust extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.sort(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortRust;\n","import Test from \"../Test\";\n\nclass SortGo extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.sort(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortGo;\n","import Test from \"../Test\";\n\nclass SieveOfAtkinPrimeJS extends Test {\n\n    prime(max) {\n        let primes = [];\n\n        if (max > 2)\n            primes.push(2);\n        if (max > 3)\n            primes.push(3);\n\n        // Initialise the sieve array with false values\n        let sieve = Array(max).fill(false);\n\n        /* Mark siev[n] is true if one\n           of the following is true:\n        a) n = (4*x*x)+(y*y) has odd number of\n           solutions, i.e., there exist\n           odd number of distinct pairs (x, y)\n           that satisfy the equation and\n            n % 12 = 1 or n % 12 = 5.\n        b) n = (3*x*x)+(y*y) has odd number of\n           solutions and n % 12 = 7\n        c) n = (3*x*x)-(y*y) has odd number of\n           solutions, x > y and n % 12 = 11 */\n        for (let x = 1; x * x < max; x++) {\n            for (let y = 1; y * y < max; y++) {\n\n                // Main part of Sieve of Atkin\n                let n = (4 * x * x) + (y * y);\n                if (n <= max && (n % 12 === 1 || n % 12 === 5))\n                    sieve[n] ^= true;\n\n                n = (3 * x * x) + (y * y);\n                if (n <= max && n % 12 === 7)\n                    sieve[n] ^= true;\n\n                n = (3 * x * x) - (y * y);\n                if (x > y && n <= max && n % 12 === 11)\n                    sieve[n] ^= true;\n            }\n        }\n\n        // Mark all multiples of squares as non-prime\n        for (let r = 5; r * r < max; r++) {\n            if (sieve[r]) {\n                for (let i = r * r; i < max; i += r * r)\n                    sieve[i] = false;\n            }\n        }\n\n        // Print primes using sieve[]\n        for (let a = 5; a < max; a++)\n            if (sieve[a])\n                primes.push(a);\n\n        return primes;\n    }\n\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        this.prime(...parameters);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SieveOfAtkinPrimeJS;\n","import Test from \"../Test\";\n\nclass SieveOfAtkinPrimeRust extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        window.wasm.rust.prime(...parameters);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SieveOfAtkinPrimeRust;\n","import Test from \"../Test\";\n\nclass SieveOfAtkinPrimeGo extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        window.wasm.go.prime(...parameters);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SieveOfAtkinPrimeGo;\n","import Test from \"../Test\";\nimport * as aesjs from \"aes-js\";\n\nclass AesJS extends Test {\n\n    aes_encrypt(key, iv, data) {\n        let aesCtr = new aesjs.ModeOfOperation.cbc(key, iv);\n        return aesCtr.encrypt(data);\n    }\n\n    aes_decrypt(key, iv, data) {\n        let aesCtr = new aesjs.ModeOfOperation.cbc(key, iv);\n        return aesCtr.decrypt(data);\n    }\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        let dataBytes = aesjs.utils.utf8.toBytes(externalData.data);\n        super.start();\n        this.aes_encrypt(...parameters, dataBytes);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default AesJS;\n","import Test from \"../Test\";\n\nclass AesRust extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.aes();\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default AesRust;\n","import Test from \"../Test\";\n\nclass AesGo extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.aes();\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default AesGo;\n","import Test from \"../Test\";\nimport pako from \"pako\";\nimport * as aesjs from \"aes-js\";\n\nclass DeflateJS extends Test {\n\n    deflate(data) {\n        return pako.deflate(data, {raw: true});\n    }\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        let dataBytes = aesjs.utils.utf8.toBytes(externalData.data);\n        super.start();\n        this.deflate(dataBytes);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DeflateJS;\n","import Test from \"../Test\";\n\nclass DeflateRust extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.deflate();\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DeflateRust;\n","import Test from \"../Test\";\n\nclass DeflateGo extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.deflate();\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DeflateGo;\n","import Chart from \"react-apexcharts\";\nimport FibonacciJS from \"./tests/fibonacci/FibonacciJS\";\nimport FibonacciRust from \"./tests/fibonacci/FibonacciRust\";\nimport FibonacciGo from \"./tests/fibonacci/FibonacciGo\";\nimport HanoiJS from \"./tests/hanoi/HanoiJS\";\nimport HanoiRust from \"./tests/hanoi/HanoiRust\";\nimport HanoiGo from \"./tests/hanoi/HanoiGo\";\nimport SortJS from \"./tests/sort/SortJS\";\nimport SortRust from \"./tests/sort/SortRust\";\nimport SortGo from \"./tests/sort/SortGo\";\nimport SieveOfAtkinPrimeJS from \"./tests/prime/SieveOfAtkinPrimeJS\";\nimport SieveOfAtkinPrimeRust from \"./tests/prime/SieveOfAtkinPrimeRust\";\nimport SieveOfAtkinPrimeGo from \"./tests/prime/SieveOfAtkinPrimeGo\";\nimport AesJS from \"./tests/aes/AesJS\";\nimport AesRust from \"./tests/aes/AesRust\";\nimport AesGo from \"./tests/aes/AesGo\";\nimport DeflateJS from \"./tests/deflate/DeflateJS\";\nimport DeflateRust from \"./tests/deflate/DeflateRust\";\nimport DeflateGo from \"./tests/deflate/DeflateGo\";\n\nconst msFormatter = (value) => (value+\" ms\");\n\n// const barChartOptions = {\n//     chart: {\n//         width: \"100%\",\n//         height: 30,\n//         type: \"bar\"\n//     },\n//     plotOptions: {\n//         bar: {\n//             horizontal: true\n//         }\n//     },\n//     dataLabels: {\n//         enabled: true,\n//         formatter: msFormatter\n//     },\n//     xaxis: {\n//         categories: []\n//     },\n//     legend: {\n//         show: false\n//     },\n//     tooltip: {\n//         y: {\n//             formatter: msFormatter\n//         }\n//     }\n// };\n\nconst areaChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 16,\n        type: \"line\"\n    },\n    markers: {\n        size: 7\n    },\n    dataLabels: {\n        enabled: true\n    },\n    xaxis: {\n        title: {\n            text: \"Iterations\"\n        },\n        categories: []\n    },\n    yaxis: {\n        title: {\n            text: \"Duration in ms\"\n        }\n    },\n    legend: {\n        show: true\n    },\n    title: {\n        text: 'Time taken to run the tests',\n        align: 'left'\n    },\n    tooltip: {\n        y: {\n            formatter: msFormatter\n        }\n    }\n};\n\n\nconst config = {\n    players: {\n        js: {\n            logo: \"logos/es-ecmascript-logo.svg\",\n            color: \"rgb(248,220,61)\"\n        },\n        rust: {\n            logo: \"logos/rust-logo-blk.svg\",\n            color: \"black\"\n        },\n        go: {\n            logo: \"logos/Go-Logo_Aqua.svg\",\n            color: \"#2DBCAF\"\n        }\n    },\n    tests: [\n        {\n            name: \"Fibunacci sequence\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Iterative 100m\",\n                    type: \"js\",\n                    factory: () => new FibonacciJS()\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"rust\",\n                    factory: () => new FibonacciRust()\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"go\",\n                    factory: () => new FibonacciGo()\n                }\n            ],\n            parameters: [\n                100000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        },\n        {\n            name: \"Towers of Hanoi\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Recursive 20\",\n                    type: \"js\",\n                    factory: () => new HanoiJS()\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"rust\",\n                    factory: () => new HanoiRust()\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"go\",\n                    factory: () => new HanoiGo()\n                }\n            ],\n            parameters: [ 20, \"A\", \"B\", \"C\" ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        },\n        {\n            name: \"Sort\",\n            description: \"Sort a list of elements containing multiple fields\",\n            runners: [\n                {\n                    name: \"Sort\",\n                    type: \"js\",\n                    factory: () => new SortJS()\n                },\n                {\n                    name: \"Sort\",\n                    type: \"rust\",\n                    factory: () => new SortRust()\n                },\n                {\n                    name: \"Sort\",\n                    type: \"go\",\n                    factory: () => new SortGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"sort\",\n                path: \"data/users.json\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        },\n        {\n            name: \"Prime numbers\",\n            description: \"Sieve of Atkin\",\n            runners: [\n                {\n                    name: \"Prime\",\n                    type: \"js\",\n                    factory: () => new SieveOfAtkinPrimeJS()\n                },\n                {\n                    name: \"Prime\",\n                    type: \"rust\",\n                    factory: () => new SieveOfAtkinPrimeRust()\n                },\n                {\n                    name: \"Prime\",\n                    type: \"go\",\n                    factory: () => new SieveOfAtkinPrimeGo()\n                }\n            ],\n            parameters: [3000000],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        },\n        {\n            name: \"Encryption\",\n            description: \"Encryption\",\n            runners: [\n                {\n                    name: \"AES CBC\",\n                    type: \"js\",\n                    factory: () => new AesJS()\n                },\n                {\n                    name: \"AES CBC\",\n                    type: \"rust\",\n                    factory: () => new AesRust()\n                },\n                {\n                    name: \"AES CBC\",\n                    type: \"go\",\n                    factory: () => new AesGo()\n                }\n            ],\n            parameters: [\n                [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n                [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n            ],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        },\n        {\n            name: \"Compression Deflate\",\n            description: \"Deflate\",\n            runners: [\n                {\n                    name: \"Deflate\",\n                    type: \"js\",\n                    factory: () => new DeflateJS()\n                },\n                {\n                    name: \"Deflate\",\n                    type: \"rust\",\n                    factory: () => new DeflateRust()\n                },\n                {\n                    name: \"Deflate\",\n                    type: \"go\",\n                    factory: () => new DeflateGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 500\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        }\n    ]\n};\n\nexport default config;\n","const runLater = (run) => new Promise(resolve => setTimeout(async () => {\n    let result = await run();\n    resolve(result);\n}, 1));\nexport default runLater;\n","import React, {Component} from 'react';\nimport {Button, Dimmer, Header, Image, List, Loader, Message, Segment} from 'semantic-ui-react'\nimport config from \"../lib/Config\";\nimport runLater from \"../lib/runLater\";\n\nclass Test extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chart: props.chart,\n            series: [{data: []}],\n            running: false,\n            errors: []\n        };\n    }\n\n    startRun = () => new Promise((resolve, reject) => {\n        this.setState({\n            running: true,\n            errors: []\n        });\n        runLater(async () =>\n            this.run()\n                .then(result => {\n                    this.finishRun(result);\n                    resolve(result);\n                })\n                .catch(error => {\n                    this.setState({\n                        errors: [error.message ? error.message : error],\n                        running: false\n                    });\n                    reject(error);\n                })\n        );\n\n\n        console.debug(\"all tests started\");\n    });\n\n    run = async () => {\n        let categories = [];\n        let series = [];\n        let colors = [];\n        let data = null;\n\n        // Download external test data for JS\n        if (this.props.externalData) {\n            let response = await fetch(this.props.externalData.path);\n            try {\n                data = await response.clone().json();\n            } catch (e) {\n                data = await response.text();\n            }\n            if (this.props.externalData && this.props.externalData.repeat > 1) {\n                if (typeof data == \"object\") {\n                    data = Array(this.props.externalData.repeat)\n                        .fill(data)\n                        .flat();\n                } else {\n                    data = String(data).repeat(this.props.externalData.repeat);\n                }\n            }\n        }\n\n        if (data !== null) {\n            this.props.externalData.data = data;\n        }\n\n        // Push test data to Go and Rust\n        if (this.props.externalData && this.props.externalData.type) {\n            if (this.props.runners.some(runner => runner.type === \"rust\")) {\n                window.wasm.rust.prepare_test_data(this.props.externalData.type, this.props.externalData.data);\n            }\n            if (this.props.runners.some(runner => runner.type === \"go\")) {\n                window.wasm.go.prepare_test_data(this.props.externalData.type, this.props.externalData.data);\n            }\n        }\n\n        // Run all tests\n        this.props.runners.forEach((runner, index) => {\n            colors.push(config.players[runner.type].color);\n            for (let i = 0; i < this.props.repeat; i++) {\n                if (this.props.externalData && this.props.externalData.type) {\n                    if (runner.type === \"rust\") {\n                        window.wasm.rust.reset_test_data(this.props.externalData.type);\n                    }\n                    if (runner.type === \"go\") {\n                        window.wasm.go.reset_test_data(this.props.externalData.type);\n                    }\n                }\n                let instance = runner.factory();\n                instance.run(this.props.parameters, this.props.externalData);\n                //categories.push(runner.type + \": \" + runner.name);\n                if (categories.length < this.props.repeat) {\n                    categories.push(i + 1);\n                }\n                if (!series[index]) {\n                    series[index] = {\n                        //name: \"Duration\",\n                        name: runner.type + \": \" + runner.name,\n                        data: []\n                    };\n                }\n                series[index].data.push(instance.results());\n            }\n        });\n\n        //window.wasm.rust.clear_test_data(this.props.externalData.type);\n        //window.wasm.go.clear_test_data(this.props.externalData.type);\n\n        return {categories, series, colors};\n    };\n\n    finishRun = result => this.setState(state => {\n        console.debug(\"all tests finished\");\n        state.chart.options.xaxis.categories = result.categories;\n        state.series = result.series;\n        state.chart.options.colors = result.colors;\n        state.running = false;\n        return state;\n    });\n\n    render() {\n        return <Segment>\n            <Dimmer inverted active={this.state.running}>\n                <Loader disabled={!this.state.running}>Running</Loader>\n            </Dimmer>\n            <Header as=\"h2\" floated=\"left\">\n                {this.props.name}\n                <Header.Subheader>{this.props.description}</Header.Subheader>\n            </Header>\n            <Button circular basic color=\"teal\" icon=\"play circle\" content=\"Run\" onClick={this.startRun} floated=\"right\"/>\n            <Header as=\"h3\" style={{clear: 'both'}}>Runners</Header>\n            <List horizontal divided>\n                {this.props.runners.map(runner =>\n                    <List.Item key={runner.name+\"-\"+runner.type}>\n                        <Image avatar src={config.players[runner.type].logo} alt={runner.type}/>\n                        <List.Content>\n                            <List.Header>{runner.name}</List.Header>\n                        </List.Content>\n                    </List.Item>\n                )}\n            </List>\n            {this.state.series[0].data.length ?\n                <React.Fragment>\n                    <Header as=\"h3\">Results</Header>\n                    <this.state.chart.component\n                    options={this.state.chart.options}\n                    series={this.state.series}\n                    {...this.state.chart.options.chart}\n                    height={this.state.chart.options.chart.height * this.state.series.length * this.state.series[0].data.length + 100}\n                />\n                </React.Fragment>\n                 : null}\n            {this.state.errors.length ?\n                <Message error header=\"Some tests had errors\" list={this.state.errors}/> : null\n            }\n        </Segment>\n    }\n}\n\nexport default Test;\n","import React, {Component} from 'react';\nimport Test from \"./Test\";\n\nclass Tests extends Component {\n\n    constructor(props) {\n        super(props);\n        this.testRefs = [];\n    }\n\n    render() {\n        this.testRefs = this.props.tests.map(\n            test => <Test key={test.name} {...test} ref={component => this.testRefs.push(component)}/>);\n\n        return <div style={{clear: 'both'}}>{this.testRefs}</div>\n    }\n}\n\nexport default Tests;\n","import React, {Component} from 'react';\nimport Tests from \"./Tests\";\nimport {Button, Container, Divider, Header} from \"semantic-ui-react\";\n\nclass TestsPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            running: false\n        };\n        this.testsRef = React.createRef();\n    }\n\n    runAll = async () => {\n        this.setState({running: true});\n        for (let i = 0; i < this.testsRef.current.testRefs.length; i++) {\n            try {\n                let result = await this.testsRef.current.testRefs[i].startRun();\n            } catch(e) {\n                console.error(e);\n            }\n        }\n        this.setState({running: false});\n    };\n\n    render() {\n        return <Container>\n            <Divider hidden />\n            <Header as=\"h1\" floated=\"left\">Tests</Header>\n            <Button circular color=\"teal\" icon=\"play circle\" content=\"Run all tests\" floated=\"right\" loading={this.state.running} onClick={() => this.runAll()}/>\n            <Tests tests={this.props.tests} ref={this.testsRef}/>\n            <Divider hidden />\n        </Container>\n    }\n}\n\nexport default TestsPage;\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport TestsPage from \"./TestsPage\";\nimport Test from \"./Test\";\nimport {Message} from \"semantic-ui-react\";\nimport config from \"../lib/Config\";\n\nclass WebassemblyTestApp extends Component {\n\n    constructor(props) {\n        super(props);\n        window.wasm = {};\n        this.state = {\n            loading: true,\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const go = new window.Go();\n\n        Promise.all([\n            import(\"webassembly-tests-rust\"),\n            WebAssembly.instantiateStreaming(fetch('go/webassembly-tests-go.wasm'), go.importObject)\n        ])\n            .then(module => {\n                window.wasm.rust = module[0];\n                go.run(module[1].instance);\n                this.setState({loading: false});\n            })\n            .catch(error => this.setState({error: error.message}));\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Message error>Could not load configuration: {this.state.error}</Message>\n        } else if (!this.state.loading) {\n            return <main>\n                <HashRouter>\n                    <Switch>\n                        <Route path='/' render={() => <TestsPage tests={config.tests}/>}/>\n                        <Route path='/test/:id' component={Test}/>\n                    </Switch>\n                </HashRouter>\n            </main>\n        } else {\n            return <div>Loading...</div>\n        }\n    }\n}\n\nexport default WebassemblyTestApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. WebassemblyTestApp is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WebassemblyTestApp from './components/WebassemblyTestApp';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nReactDOM.render(\n    <WebassemblyTestApp />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}