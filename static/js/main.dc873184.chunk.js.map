{"version":3,"sources":["lib/tests/Test.js","lib/tests/fibonacci/FibonacciJS.js","lib/tests/fibonacci/FibonacciRust.js","lib/tests/fibonacci/FibonacciGo.js","lib/tests/hanoi/HanoiJS.js","lib/tests/hanoi/HanoiRust.js","lib/tests/hanoi/HanoiGo.js","lib/tests/sort/SortJS.js","lib/tests/sort/SortRust.js","lib/tests/sort/SortGo.js","lib/Config.js","components/Test.js","components/Tests.js","components/TestsPage.js","components/WebassemblyTestApp.js","serviceWorker.js","index.js"],"names":["Test","Object","classCallCheck","this","result","startTime","stopTime","url","console","warn","constuctor","name","Date","FibonacciJS","n","t","a","b","parameters","debug","constructor","get","getPrototypeOf","prototype","call","fibonacci","apply","toConsumableArray","FibonacciRust","_window$wasm$rust","window","wasm","rust","FibonacciGo","_window$wasm$go","go","HanoiJS","_this","possibleConstructorReturn","moves","from","via","to","hanoi","HanoiRust","HanoiGo","SortJS","data","sort","firstEl","secondEl","externalData","JSON","parse","stringify","SortRust","SortGo","msFormatter","value","areaChartOptions","chart","width","height","type","markers","size","dataLabels","enabled","xaxis","title","text","categories","yaxis","legend","show","align","tooltip","y","formatter","config","players","js","logo","color","tests","description","runners","factory","repeat","component","Chart","options","path","props","startRun","setState","running","errors","setTimeout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","run","then","finishRun","catch","error","message","stop","_callee2","series","colors","_context2","fetch","sent","json","t0","Array","fill","flat","prepare_test_data","forEach","runner","index","push","i","reset_test_data","instance","length","results","abrupt","state","react_default","createElement","Segment","Dimmer","inverted","active","Loader","disabled","Header","as","floated","Subheader","Button","circular","basic","icon","content","onClick","style","clear","List","horizontal","divided","map","Item","key","Image","avatar","src","alt","Content","assign","Message","header","list","Component","Tests","test","components_Test","TestsPage","Container","Divider","hidden","components_Tests","WebassemblyTestApp","loading","_this2","Go","Promise","all","__webpack_require__","e","bind","WebAssembly","instantiateStreaming","importObject","module","HashRouter","Switch","Route","render","components_TestsPage","Boolean","location","hostname","match","ReactDOM","components_WebassemblyTestApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc873184.chunk.js","sourcesContent":["class Test {\n\n    constructor() {\n        this.result = null;\n        this.startTime = null;\n        this.stopTime = null;\n    }\n\n    prepareTestData(url) {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    resetTestData(url) {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    run() {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    start() {\n        this.startTime = new Date();\n    }\n\n    stop() {\n        this.stopTime = new Date();\n        this.result = this.stopTime - this.startTime;\n    }\n\n    results() {\n        return this.result;\n    }\n}\nexport default Test;\n","import Test from \"../Test\";\n\nclass FibonacciJS extends Test {\n\n    fibonacci(n) {\n        let a = 0\n        let b = 1\n        let t;\n        while (n-- > 0) {\n            t = a;\n            a = b;\n            b += t;\n        }\n        return a;\n    }\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.fibonacci(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciJS;\n","import Test from \"../Test\";\n\nclass FibonacciRust extends Test {\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.fibonacci(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciRust;\n","import Test from \"../Test\";\n\nclass FibonacciGo extends Test {\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.fibonacci(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciGo;\n","import Test from \"../Test\";\n\nclass HanoiJS extends Test {\n\n    constructor() {\n        super();\n        this.moves = \"\";\n    }\n\n    hanoi(n, from, via, to) {\n        if (n > 0) {\n            this.hanoi(n - 1, from, to, via);\n            this.moves += from + \"->\" + to + \"\\n\";\n            this.hanoi(n - 1, via, from, to);\n        }\n        return this.moves;\n    }\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.hanoi(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiJS;\n","import Test from \"../Test\";\n\nclass HanoiRust extends Test {\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.hanoi(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiRust;\n","import Test from \"../Test\";\n\nclass HanoiGo extends Test {\n\n    run(parameters) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.hanoi(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiGo;\n","import Test from \"../Test\";\n\nclass SortJS extends Test {\n\n    sort(data) {\n        return data.sort((firstEl, secondEl) => {\n            if (firstEl.name < secondEl.name) {\n                return -1;\n            } else if (firstEl.name > secondEl.name) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        let data = JSON.parse(JSON.stringify(externalData.data));\n        super.start();\n        this.sort(data);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortJS;\n","import Test from \"../Test\";\n\nclass SortRust extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.sort(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortRust;\n","import Test from \"../Test\";\n\nclass SortGo extends Test {\n\n    run(parameters, externalData) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.sort(...parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortGo;\n","import Chart from \"react-apexcharts\";\nimport FibonacciJS from \"./tests/fibonacci/FibonacciJS\";\nimport FibonacciRust from \"./tests/fibonacci/FibonacciRust\";\nimport FibonacciGo from \"./tests/fibonacci/FibonacciGo\";\nimport HanoiJS from \"./tests/hanoi/HanoiJS\";\nimport HanoiRust from \"./tests/hanoi/HanoiRust\";\nimport HanoiGo from \"./tests/hanoi/HanoiGo\";\nimport SortJS from \"./tests/sort/SortJS\";\nimport SortRust from \"./tests/sort/SortRust\";\nimport SortGo from \"./tests/sort/SortGo\";\n\nconst msFormatter = (value) => (value+\" ms\");\n\nconst barChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 30,\n        type: \"bar\"\n    },\n    plotOptions: {\n        bar: {\n            horizontal: true\n        }\n    },\n    dataLabels: {\n        enabled: true,\n        formatter: msFormatter\n    },\n    xaxis: {\n        categories: []\n    },\n    legend: {\n        show: false\n    },\n    tooltip: {\n        y: {\n            formatter: msFormatter\n        }\n    }\n};\n\nconst areaChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 16,\n        type: \"line\"\n    },\n    markers: {\n        size: 7\n    },\n    dataLabels: {\n        enabled: true\n    },\n    xaxis: {\n        title: {\n            text: \"Iterations\"\n        },\n        categories: []\n    },\n    yaxis: {\n        title: {\n            text: \"Duration in ms\"\n        }\n    },\n    legend: {\n        show: true\n    },\n    title: {\n        text: 'Time taken to run the tests',\n        align: 'left'\n    },\n    tooltip: {\n        y: {\n            formatter: msFormatter\n        }\n    }\n};\n\n\nconst config = {\n    players: {\n        js: {\n            logo: \"logos/es-ecmascript-logo.svg\",\n            color: \"rgb(248,220,61)\"\n        },\n        rust: {\n            logo: \"logos/rust-logo-blk.svg\",\n            color: \"black\"\n        },\n        go: {\n            logo: \"logos/Go-Logo_Aqua.svg\",\n            color: \"#2DBCAF\"\n        }\n    },\n    tests: [\n        {\n            name: \"Fibunacci sequence\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Iterative 100m\",\n                    type: \"js\",\n                    factory: () => new FibonacciJS()\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"rust\",\n                    factory: () => new FibonacciRust()\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"go\",\n                    factory: () => new FibonacciGo()\n                }\n            ],\n            parameters: [\n                100000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        },\n        {\n            name: \"Towers of Hanoi\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Recursive 20\",\n                    type: \"js\",\n                    factory: () => new HanoiJS()\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"rust\",\n                    factory: () => new HanoiRust()\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"go\",\n                    factory: () => new HanoiGo()\n                }\n            ],\n            parameters: [ 20, \"A\", \"B\", \"C\" ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        },\n        {\n            name: \"Sort\",\n            description: \"Sort a list of elements containing multiple fields\",\n            runners: [\n                {\n                    name: \"Sort\",\n                    type: \"js\",\n                    factory: () => new SortJS()\n                },\n                {\n                    name: \"Sort\",\n                    type: \"rust\",\n                    factory: () => new SortRust()\n                },\n                {\n                    name: \"Sort\",\n                    type: \"go\",\n                    factory: () => new SortGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"sort\",\n                path: \"data/users.json\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        }\n    ]\n};\n\nexport default config;\n","import React, {Component} from 'react';\nimport {Button, Dimmer, Header, Image, List, Loader, Message, Segment} from 'semantic-ui-react'\nimport config from \"../lib/Config\";\n\nclass Test extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chart: props.chart,\n            series: [{data: []}],\n            running: false,\n            errors: []\n        };\n    }\n\n    startRun = () => {\n        this.setState({\n            running: true,\n            errors: []\n        });\n        setTimeout(async () => {\n            this.run()\n                .then(result => this.finishRun(result))\n                .catch(error => {\n                    this.setState({\n                        errors: [error.message ? error.message : error],\n                        running: false\n                    });\n                });\n        }, 0);\n        console.debug(\"all tests started\");\n    };\n\n    run = async () => {\n        let categories = [];\n        let series = [];\n        let colors = [];\n        let data = null;\n\n        // Download external test data for JS\n        if (this.props.externalData) {\n            data = await fetch(this.props.externalData.path);\n            try {\n                data = await data.json();\n            } catch (e) {}\n        }\n        if (this.props.externalData && this.props.externalData.repeat > 1) {\n            data = Array(this.props.externalData.repeat)\n                .fill(data)\n                .flat();\n        }\n        if (data !== null) {\n            this.props.externalData.data = data;\n        }\n\n        // Push test data to Go and Rust\n        if (this.props.externalData && this.props.externalData.type) {\n            window.wasm.rust.prepare_test_data(this.props.externalData.type, this.props.externalData.data);\n            window.wasm.go.prepare_test_data(this.props.externalData.type, this.props.externalData.data);\n        }\n\n        // Run all tests\n        this.props.runners.forEach((runner, index) => {\n            colors.push(config.players[runner.type].color);\n            for (let i = 0; i < this.props.repeat; i++) {\n                if (this.props.externalData && this.props.externalData.type) {\n                    if (runner.type === \"rust\") {\n                        window.wasm.rust.reset_test_data(this.props.externalData.type);\n                    }\n                    if (runner.type === \"go\") {\n                        window.wasm.go.reset_test_data(this.props.externalData.type);\n                    }\n                }\n                let instance = runner.factory();\n                instance.run(this.props.parameters, this.props.externalData);\n                //categories.push(runner.type + \": \" + runner.name);\n                if (categories.length < this.props.repeat) {\n                    categories.push(i + 1);\n                }\n                if (!series[index]) {\n                    series[index] = {\n                        //name: \"Duration\",\n                        name: runner.type + \": \" + runner.name,\n                        data: []\n                    };\n                }\n                series[index].data.push(instance.results());\n            }\n        });\n\n        //window.wasm.rust.clear_test_data(this.props.externalData.type);\n        //window.wasm.go.clear_test_data(this.props.externalData.type);\n\n        return {categories, series, colors};\n    };\n\n    finishRun = result => this.setState(state => {\n        console.debug(\"all tests finished\");\n        state.chart.options.xaxis.categories = result.categories;\n        state.series = result.series;\n        state.chart.options.colors = result.colors;\n        state.running = false;\n        return state;\n    });\n\n    render() {\n        return <Segment>\n            <Dimmer inverted active={this.state.running}>\n                <Loader disabled={!this.state.running}>Running</Loader>\n            </Dimmer>\n            <Header as=\"h2\" floated=\"left\">\n                {this.props.name}\n                <Header.Subheader>{this.props.description}</Header.Subheader>\n            </Header>\n            <Button circular basic color=\"teal\" icon=\"play circle\" content=\"Run\" onClick={this.startRun} floated=\"right\"/>\n            <Header as=\"h3\" style={{clear: 'both'}}>Runners</Header>\n            <List horizontal divided>\n                {this.props.runners.map(runner =>\n                    <List.Item key={runner.name+\"-\"+runner.type}>\n                        <Image avatar src={config.players[runner.type].logo} alt={runner.type}/>\n                        <List.Content>\n                            <List.Header>{runner.name}</List.Header>\n                        </List.Content>\n                    </List.Item>\n                )}\n            </List>\n            {this.state.series[0].data.length ?\n                <Header as=\"h3\">Results</Header> : null}\n            {this.state.series[0].data.length ?\n                <this.state.chart.component\n                    options={this.state.chart.options}\n                    series={this.state.series}\n                    {...this.state.chart.options.chart}\n                    height={this.state.chart.options.chart.height * this.state.series.length * this.state.series[0].data.length + 100}\n                /> : null\n            }\n            {this.state.errors.length ?\n                <Message error header=\"Some tests had errors\" list={this.state.errors}/> : null\n            }\n        </Segment>\n    }\n}\n\nexport default Test;\n","import React, {Component} from 'react';\nimport Test from \"./Test\";\n\nclass Tests extends Component {\n\n    render() {\n        return <div>\n            {this.props.tests.map(test => <Test key={test.name} {...test}/>)}\n        </div>\n    }\n}\n\nexport default Tests;\n","import React, {Component} from 'react';\nimport Tests from \"./Tests\";\nimport {Container, Divider, Header} from \"semantic-ui-react\";\n\nclass TestsPage extends Component {\n    render() {\n        return <Container>\n            <Divider hidden />\n            <Header as='h1'>Tests</Header>\n            <Tests tests={this.props.tests}/>\n            <Divider hidden />\n        </Container>\n    }\n}\n\nexport default TestsPage;\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport TestsPage from \"./TestsPage\";\nimport Test from \"./Test\";\nimport {Message} from \"semantic-ui-react\";\nimport config from \"../lib/Config\";\n\nclass WebassemblyTestApp extends Component {\n\n    constructor(props) {\n        super(props);\n        window.wasm = {};\n        this.state = {\n            loading: true,\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const go = new window.Go();\n\n        Promise.all([\n            import(\"webassembly-tests-rust\"),\n            WebAssembly.instantiateStreaming(fetch('go/webassembly-tests-go.wasm'), go.importObject)\n        ])\n            .then(module => {\n                window.wasm.rust = module[0];\n                go.run(module[1].instance);\n                this.setState({loading: false});\n            })\n            .catch(error => this.setState({error: error.message}));\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Message error>Could not load configuration: {this.state.error}</Message>\n        } else if (!this.state.loading) {\n            return <main>\n                <HashRouter>\n                    <Switch>\n                        <Route path='/' render={() => <TestsPage tests={config.tests}/>}/>\n                        <Route path='/test/:id' component={Test}/>\n                    </Switch>\n                </HashRouter>\n            </main>\n        } else {\n            return <div>Loading...</div>\n        }\n    }\n}\n\nexport default WebassemblyTestApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. WebassemblyTestApp is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WebassemblyTestApp from './components/WebassemblyTestApp';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nReactDOM.render(\n    <WebassemblyTestApp />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}