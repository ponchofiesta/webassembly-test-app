{"version":3,"sources":["lib/benchmarks/Benchmark.js","lib/benchmarks/fibonacci/FibonacciJS.js","lib/benchmarks/hanoi/HanoiJS.js","lib/benchmarks/sort/SortJS.js","lib/benchmarks/prime/SieveOfAtkinPrimeJS.js","lib/benchmarks/aes/AesJS.js","lib/benchmarks/deflate/DeflateJS.js","lib/benchmarks/ImageBenchmark.js","lib/benchmarks/convolve/ConvolveJS.js","lib/benchmarks/convolve/ConvolveRust.js","lib/benchmarks/convolve/ConvolveGo.js","lib/benchmarks/DefaultBenchmark.js","lib/benchmarks/iterate/IterateJS.js","lib/benchmarks/strings/StringsDynamicJS.js","lib/benchmarks/RepeatingDefaultBenchmark.js","lib/benchmarks/strings/StringsStaticJS.js","lib/benchmarks/sum/SumJS.js","lib/benchmarks/VideoBenchmark.js","lib/benchmarks/convolve_video/ConvolveVideoJS.js","lib/benchmarks/convolve_video/ConvolveVideoRust.js","lib/benchmarks/convolve_video/ConvolveVideoGo.js","lib/benchmarks/sha/Sha256JS.js","lib/benchmarks/exif/ExifReaderJS.js","lib/benchmarks/dom/DomJS.js","lib/benchmarks/sha/Sha256CryptoJS.js","lib/benchmarks/sha/Sha512CryptoJS.js","lib/benchmarks/sha/Sha512JS.js","lib/Config.js","components/Benchmark.js","components/Benchmarks.js","lib/mediaLoader.js","lib/benchmarkRunner.js","components/BenchmarksPage.js","components/WebassemblyTestApp.js","serviceWorker.js","index.js"],"names":["Benchmark","constructor","onLoad","this","result","startTime","stopTime","run","console","warn","constuctor","name","start","performance","now","stop","results","FibonacciJS","fibonacci","n","t","a","b","benchmark","debug","super","parameters","HanoiJS","moves","hanoi","from","via","to","SortJS","sort","data","firstEl","secondEl","JSON","parse","stringify","externalData","SieveOfAtkinPrimeJS","prime","max","primes","push","sieve","Array","fill","x","y","r","i","AesJS","aes_encrypt","key","iv","aesjs","cbc","encrypt","aes_decrypt","decrypt","DeflateJS","deflate","pako","raw","dataBytes","utf8","toBytes","ImageBenchmark","image","canvas","context","onDraw","document","createElement","width","height","getContext","drawImage","ConvolveJS","convoluteFilter","matrix","factor","side","Math","round","sqrt","length","halfSide","floor","source","getImageData","sourceData","imageWidth","imageHeight","output","createImageData","outputData","outputIndex","g","cy","cx","scy","scx","sourceIndex","modify","putImageData","convolve","ConvolveRust","window","wasm","rust","ConvolveGo","imageData","set","go","convolve_mem","DefaultBenchmark","method","type","Error","IterateJS","iterate","res","StringsDynamicJS","strings_dynamic","includes","params","slice","RepeatingDefaultBenchmark","repeat","newBenchmark","StringsStaticJS","SumJS","sum","numbers","reduce","VideoBenchmark","video","frameCount","onEnd","resolveOrReject","getVideoFrame","videoWidth","videoHeight","renderVideo","paused","requestAnimationFrame","bind","style","promise","Promise","resolve","reject","addEventListener","play","ConvolveVideoJS","count","half","index","cpx","ConvolveVideoRust","convolve_video","ConvolveVideoGo","Sha256JS","sha256","input","md","forge","create","update","digest","toHex","forEach","byte","String","fromCharCode","ExifReaderJS","ExifReader","load","buffer","DomJS","dom","body","container","appendChild","header","textContent","paragraph","removeChild","Sha256CryptoJS","crypto","subtle","Uint8Array","map","toString","join","Sha512CryptoJS","sha512","Sha512JS","roundFormatter","value","fpsFormatter","toFixed","barChartOptions","chart","animations","enabled","markers","size","dataLabels","formatter","xaxis","title","text","categories","yaxis","labels","legend","show","align","tooltip","areaChartOptions","config","players","js","logo","color","benchmarks","description","runners","factory","component","Chart","options","error","strings_static","path","aes","exif","showCanvas","Component","props","onRun","fitToParent","element","ratio","parentElement","clientWidth","render","Segment","Header","as","floated","Subheader","Button","circular","basic","icon","content","onClick","disabled","someRunning","loading","running","clear","List","horizontal","divided","runner","Item","avatar","src","alt","Content","Fragment","ref","div","innerHTML","series","Message","WebAssembly","RuntimeError","stack","Benchmarks","loadExternalData","async","Image","HTMLImageElement","event","HTMLVideoElement","errorEvent","mediaLoader","response","fetch","arrayBuffer","clone","json","e","array","flat","runBenchmark","colors","some","prepare_test_data","prepareExternalData","reset_test_data","instance","BenchmarksPage","setStatePromise","state","setState","setTimeout","onRunAll","progress","progressTotal","onRunBenchmark","onBenchmarkLoad","entry","filter","benchEntry","Object","assign","Container","Divider","hidden","bench","Progress","total","WebassemblyTestApp","componentDidMount","Go","all","instantiateStreaming","importObject","then","module","catch","message","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1cf57479.chunk.js","sourcesContent":["class Benchmark {\n\n    onLoad = () => {};\n\n    constructor() {\n        this.result = null;\n        this.startTime = null;\n        this.stopTime = null;\n    }\n\n    run() {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    start() {\n        this.startTime = performance.now();\n    }\n\n    stop() {\n        this.stopTime = performance.now();\n        this.result = this.stopTime - this.startTime;\n    }\n\n    results() {\n        return this.result;\n    }\n}\nexport default Benchmark;\n","import Benchmark from \"../Benchmark\";\n\nclass FibonacciJS extends Benchmark {\n\n    fibonacci(n) {\n        let a = 0\n        let b = 1\n        let t;\n        while (n-- > 0) {\n            t = a;\n            a = b;\n            b += t;\n        }\n        return a;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.fibonacci(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciJS;\n","import Benchmark from \"../Benchmark\";\n\nclass HanoiJS extends Benchmark {\n\n    constructor() {\n        super();\n        this.moves = \"\";\n    }\n\n    hanoi(n, from, via, to) {\n        if (n > 0) {\n            this.hanoi(n - 1, from, to, via);\n            this.moves += from + \"->\" + to + \"\\n\";\n            this.hanoi(n - 1, via, from, to);\n        }\n        return this.moves;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.hanoi(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiJS;\n","import Benchmark from \"../Benchmark\";\n\nclass SortJS extends Benchmark {\n\n    sort(data) {\n        return data.sort((firstEl, secondEl) => {\n            if (firstEl.name < secondEl.name) {\n                return -1;\n            } else if (firstEl.name > secondEl.name) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        let data = JSON.parse(JSON.stringify(benchmark.externalData.data));\n        super.start();\n        this.sort(data);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortJS;\n","import Benchmark from \"../Benchmark\";\n\nclass SieveOfAtkinPrimeJS extends Benchmark {\n\n    prime(max) {\n        let primes = [];\n\n        if (max > 2)\n            primes.push(2);\n        if (max > 3)\n            primes.push(3);\n\n        // Initialise the sieve array with false values\n        let sieve = Array(max).fill(false);\n\n        for (let x = 1; x * x < max; x++) {\n            for (let y = 1; y * y < max; y++) {\n\n                // Main part of Sieve of Atkin\n                let n = (4 * x * x) + (y * y);\n                if (n <= max && (n % 12 === 1 || n % 12 === 5))\n                    sieve[n] ^= true;\n\n                n = (3 * x * x) + (y * y);\n                if (n <= max && n % 12 === 7)\n                    sieve[n] ^= true;\n\n                n = (3 * x * x) - (y * y);\n                if (x > y && n <= max && n % 12 === 11)\n                    sieve[n] ^= true;\n            }\n        }\n\n        // Mark all multiples of squares as non-prime\n        for (let r = 5; r * r < max; r++) {\n            if (sieve[r]) {\n                for (let i = r * r; i < max; i += r * r)\n                    sieve[i] = false;\n            }\n        }\n\n        // Print primes using sieve[]\n        for (let a = 5; a < max; a++)\n            if (sieve[a])\n                primes.push(a);\n\n        return primes;\n    }\n\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        this.prime(...benchmark.parameters);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SieveOfAtkinPrimeJS;\n","import Benchmark from \"../Benchmark\";\nimport * as aesjs from \"aes-js\";\n\nclass AesJS extends Benchmark {\n\n    aes_encrypt(key, iv, data) {\n        let aesCtr = new aesjs.ModeOfOperation.cbc(key, iv);\n        return aesCtr.encrypt(data);\n    }\n\n    aes_decrypt(key, iv, data) {\n        let aesCtr = new aesjs.ModeOfOperation.cbc(key, iv);\n        return aesCtr.decrypt(data);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        //let dataBytes = aesjs.utils.utf8.toBytes(benchmark.externalData.data);\n        super.start();\n        this.aes_encrypt(...benchmark.parameters, benchmark.externalData.data);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default AesJS;\n","import Benchmark from \"../Benchmark\";\nimport pako from \"pako\";\nimport * as aesjs from \"aes-js\";\n\nclass DeflateJS extends Benchmark {\n\n    deflate(data) {\n        return pako.deflate(data, {raw: true});\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        let dataBytes = aesjs.utils.utf8.toBytes(benchmark.externalData.data);\n        super.start();\n        this.deflate(dataBytes);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DeflateJS;\n","import Benchmark from \"./Benchmark\";\n\nclass ImageBenchmark extends Benchmark {\n\n    image = null;\n    canvas = null;\n    context = null;\n    onDraw = () => {};\n\n    async run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        // draw image on canvas\n        this.image = benchmark.externalData.data;\n        this.canvas = document.createElement('canvas');\n        this.canvas.width = this.image.width;\n        this.canvas.height = this.image.height;\n        this.context = this.canvas.getContext('2d');\n        this.context.drawImage(this.image, 0, 0);\n\n        await this.onLoad({\n            ...benchmark,\n            canvas: this.canvas\n        });\n\n        super.start();\n        this.onDraw();\n        super.stop();\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default ImageBenchmark;\n","import ImageBenchmark from \"../ImageBenchmark\";\n\nclass ConvolveJS extends ImageBenchmark {\n\n    constructor() {\n        super();\n        this.onDraw = () => {\n            this.convolve();\n        };\n    }\n\n    convolve() {\n        let blur = [\n            0.0, 0.2, 0.0,\n            0.2, 0.2, 0.2,\n            0.0, 0.2, 0.0\n        ];\n        this.convoluteFilter(blur, 1);\n    }\n\n    convoluteFilter = (matrix, factor) => {\n        const side = Math.round(Math.sqrt(matrix.length));\n        const halfSide = Math.floor(side / 2);\n        const source = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n        const sourceData = source.data;\n        const imageWidth = source.width;\n        const imageHeight = source.height;\n        const output = this.context.createImageData(imageWidth, imageHeight);\n        const outputData = output.data;\n\n        for (let y = 0; y < imageHeight; y++) {\n            for (let x = 0; x < imageWidth; x++) {\n                const outputIndex = (y * imageWidth + x) * 4;\n                let r = 0.0;\n                let g = 0.0;\n                let b = 0.0;\n                for (let cy = 0; cy < side; cy++) {\n                    for (let cx = 0; cx < side; cx++) {\n                        const scy = y + cy - halfSide;\n                        const scx = x + cx - halfSide;\n                        if (scy >= 0 && scy < imageHeight && scx >= 0 && scx < imageWidth) {\n                            const sourceIndex = (scy * imageWidth + scx) * 4;\n                            const modify = matrix[cy * side + cx];\n                            r += sourceData[sourceIndex] * modify;\n                            g += sourceData[sourceIndex + 1] * modify;\n                            b += sourceData[sourceIndex + 2] * modify;\n                        }\n                    }\n                }\n                outputData[outputIndex] = r * factor;\n                outputData[outputIndex + 1] = g * factor;\n                outputData[outputIndex + 2] = b * factor;\n                outputData[outputIndex + 3] = sourceData[outputIndex + 3];\n            }\n        }\n\n        this.context.putImageData(output, 0, 0);\n    };\n}\nexport default ConvolveJS;\n","import ImageBenchmark from \"../ImageBenchmark\";\n\nclass ConvolveRust extends ImageBenchmark {\n\n    constructor() {\n        super();\n        this.onDraw = () => {\n            window.wasm.rust.convolve(this.canvas);\n        };\n    }\n}\nexport default ConvolveRust;\n","import ImageBenchmark from \"../ImageBenchmark\";\n\nclass ConvolveGo extends ImageBenchmark {\n\n    constructor() {\n        super();\n        this.onDraw = () => {\n            const imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\n            imageData.data.set(window.wasm.go.convolve_mem(imageData.data, this.canvas.width, this.canvas.height));\n            this.context.putImageData(imageData, 0, 0);\n        };\n    }\n}\nexport default ConvolveGo;\n","import Benchmark from \"./Benchmark\";\n\nclass DefaultBenchmark extends Benchmark {\n\n    constructor(method) {\n        super();\n        const type = typeof method;\n        if (type !== \"function\") {\n            throw new Error(\"method parameter must be a function, actually it is '\" + type + \"'.\");\n        }\n        this.method = method;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        super.start();\n        this.method(benchmark);\n        super.stop();\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\n\nexport default DefaultBenchmark;","import Benchmark from \"../Benchmark\";\n\nclass IterateJS extends Benchmark {\n\n    iterate(max) {\n        let res = 0;\n        for (let i = 0; i < max; ++i) {\n            res += i;\n        }\n        return res;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.iterate(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default IterateJS;\n","import Benchmark from \"../Benchmark\";\n\nclass StringsDynamicJS extends Benchmark {\n\n    strings_dynamic(a, b) {\n        return a.includes(b);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        let params = benchmark.parameters.slice(1);\n        for (let i = 0; i < benchmark.parameters[0]; i++) {\n            this.strings_dynamic(...params);\n        }\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default StringsDynamicJS;\n","import DefaultBenchmark from \"./DefaultBenchmark\";\n\nclass RepeatingDefaultBenchmark extends DefaultBenchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        super.start();\n        let repeat = benchmark.parameters[0];\n        let parameters = benchmark.parameters.slice(1);\n        let newBenchmark = {...benchmark, parameters};\n        for (let i = 0; i < repeat; i++) {\n            this.method(newBenchmark);\n        }\n        super.stop();\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\n\nexport default RepeatingDefaultBenchmark;\n","import StringsDynamicJS from \"./StringsDynamicJS\";\n\nclass StringsStaticJS extends StringsDynamicJS {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        let a = \"hello world\";\n        let b = \"world\";\n        for (let i = 0; i < benchmark.parameters[0]; i++) {\n            super.strings_dynamic(a, b);\n        }\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default StringsStaticJS;\n","import Benchmark from \"../Benchmark\";\n\nclass SumJS extends Benchmark {\n\n    sum(numbers) {\n        return numbers.reduce((x, y) => x + y, 0);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        for (let i = 0; i < benchmark.parameters[0]; i++) {\n            this.sum([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n        }\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SumJS;\n","import Benchmark from \"./Benchmark\";\n\nclass VideoBenchmark extends Benchmark {\n\n    constructor() {\n        super();\n        this.canvas = null;\n        this.context = null;\n        this.video = null;\n        this.frameCount = 0;\n        this.onDraw = null;\n    }\n\n    onEnd(resolveOrReject) {\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n        resolveOrReject();\n    }\n\n    getVideoFrame() {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.video.videoWidth;\n        canvas.height =  this.video.videoHeight;\n        const context = canvas.getContext('2d');\n        context.drawImage(this.video, 0, 0, canvas.width, canvas.height);\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        return imageData;\n    }\n\n    renderVideo() {\n        this.onDraw();\n        if (!this.video.paused) {\n            requestAnimationFrame(this.renderVideo.bind(this));\n        }\n    }\n\n    async run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        this.video = benchmark.externalData.data;\n        this.video.style = \"display: none;\";\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = this.video.videoWidth;\n        canvas.height = this.video.videoHeight;\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n\n        await this.onLoad({\n            ...benchmark,\n            video: benchmark.externalData.data,\n            canvas: canvas\n        });\n\n        const promise = new Promise((resolve, reject) => {\n            this.video.addEventListener(\"ended\", () => {\n                this.onEnd(resolve);\n            }, false);\n            this.video.addEventListener(\"error\", () => {\n                this.onEnd(reject);\n            }, false);\n        });\n\n        super.start();\n\n        this.video.play();\n        this.renderVideo();\n\n        return promise;\n    }\n\n    results() {\n        this.result = this.frameCount / (this.stopTime - this.startTime) * 1000;\n        return this.result;\n    }\n}\nexport default VideoBenchmark;\n","import VideoBenchmark from \"../VideoBenchmark\";\n\nclass ConvolveVideoJS extends VideoBenchmark {\n\n    constructor() {\n        super();\n        super.onDraw = () => {\n            let imageData = this.getVideoFrame();\n            imageData.data.set(this.convolve(imageData.data, this.video.videoWidth, this.video.videoHeight, [[1, 1, 1], [1, 1, 1], [1, 1, 1]],1/9,6));\n            this.context.putImageData(imageData, 0, 0);\n            this.frameCount++;\n        };\n    }\n\n    convolve(data, width, height, matrix, factor, count=1) {\n        const side = matrix.length;\n        const half = Math.floor(side / 2);\n        for (let i = 0; i < count; i += 1) {\n            for (let y = 1; y < height - 1; y += 1) {\n                for (let x = 1; x < width - 1; x += 1) {\n                    const index = (y * width + x) * 4;\n                    let r = 0;\n                    let g = 0;\n                    let b = 0;\n                    for (let cy = 0; cy < side; ++cy) {\n                        for (let cx = 0; cx < side; ++cx) {\n                            const cpx = ((y + (cy - half)) * width + (x + (cx - half))) * 4;\n                            r += data[cpx] * matrix[cy][cx];\n                            g += data[cpx + 1] * matrix[cy][cx];\n                            b += data[cpx + 2] * matrix[cy][cx];\n                        }\n                    }\n\n                    data[index] = factor * r;\n                    data[index + 1] = factor * g;\n                    data[index + 2] = factor * b;\n                }\n            }\n        }\n        return data;\n    }\n}\nexport default ConvolveVideoJS;\n","import VideoBenchmark from \"../VideoBenchmark\";\n\nclass ConvolveVideoRust extends VideoBenchmark {\n\n    constructor() {\n        super();\n        super.onDraw = () => {\n            let imageData = this.getVideoFrame();\n            imageData.data.set(this.convolve(imageData.data, this.video.videoWidth, this.video.videoHeight));\n            this.context.putImageData(imageData, 0, 0);\n            this.frameCount++;\n        };\n    }\n\n    convolve(data, width, height) {\n        const outData = window.wasm.rust.convolve_video(data, this.video.videoWidth, this.video.videoHeight, 1/9, 6);\n        return outData;\n    }\n}\nexport default ConvolveVideoRust;\n","import VideoBenchmark from \"../VideoBenchmark\";\n\nclass ConvolveVideoGo extends VideoBenchmark {\n\n    constructor() {\n        super();\n        super.onDraw = () => {\n            let imageData = this.getVideoFrame();\n            imageData.data.set(this.convolve(imageData.data, this.video.videoWidth, this.video.videoHeight));\n            this.context.putImageData(imageData, 0, 0);\n            this.frameCount++;\n        };\n    }\n\n    convolve(data, width, height) {\n        data = window.wasm.go.convolve_video(data, this.canvas.width, this.canvas.height, 1/9, 6);\n        return data;\n    }\n}\nexport default ConvolveVideoGo;\n","import Benchmark from \"../Benchmark\";\nimport forge from 'node-forge';\n\nclass Sha256JS extends Benchmark {\n\n    sha256(input) {\n        const md = forge.md.sha256.create();\n        md.update(input);\n        let hex = md.digest().toHex();\n        return hex;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        let data = \"\";\n        benchmark.externalData.data.forEach(byte => data += String.fromCharCode(byte));\n        this.start();\n        this.sha256(data);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default Sha256JS;\n","import Benchmark from \"../Benchmark\";\nimport ExifReader from 'exifreader';\n\nclass ExifReaderJS extends Benchmark {\n\n    async run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        const tags = ExifReader.load(benchmark.externalData.data.buffer);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default ExifReaderJS;\n","import Benchmark from \"../Benchmark\";\n\nclass DomJS extends Benchmark {\n\n    dom(n) {\n        const body = document.body;\n        const container = document.createElement(\"div\");\n        body.appendChild(container);\n\n        for (let i = 0; i < n; i++) {\n            const header = document.createElement(\"h3\");\n            header.textContent = \"Header \" + i;\n            const paragraph = document.createElement(\"p\");\n            paragraph.textContent = \"Paragraph \" + i;\n            container.appendChild(header);\n            container.appendChild(paragraph);\n        }\n\n        body.removeChild(container);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.dom(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DomJS;\n","import Benchmark from \"../Benchmark\";\n\nclass Sha256CryptoJS extends Benchmark {\n\n    async sha256(input) {\n        const digest = await crypto.subtle.digest('SHA-256', input);\n        const array = Array.from(new Uint8Array(digest));\n        const hex = array.map(byte => ('00' + byte.toString(16)).slice(-2)).join('');\n        return hex;\n    }\n\n    async run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        await this.sha256(benchmark.externalData.data.buffer);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default Sha256CryptoJS;\n","import Benchmark from \"../Benchmark\";\n\nclass Sha512CryptoJS extends Benchmark {\n\n    async sha512(input) {\n        const digest = await crypto.subtle.digest('SHA-512', input);\n        const array = Array.from(new Uint8Array(digest));\n        const hex = array.map(byte => ('00' + byte.toString(16)).slice(-2)).join('');\n        return hex;\n    }\n\n    async run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        await this.sha512(benchmark.externalData.data.buffer);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default Sha512CryptoJS;\n","import Benchmark from \"../Benchmark\";\nimport forge from 'node-forge';\n\nclass Sha512JS extends Benchmark {\n\n    sha512(input) {\n        const md = forge.md.sha512.create();\n        md.update(input);\n        let hex = md.digest().toHex();\n        return hex;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        let data = \"\";\n        benchmark.externalData.data.forEach(byte => data += String.fromCharCode(byte));\n        this.start();\n        this.sha512(benchmark.externalData.data);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default Sha512JS;\n","import Chart from \"react-apexcharts\";\nimport FibonacciJS from \"./benchmarks/fibonacci/FibonacciJS\";\nimport HanoiJS from \"./benchmarks/hanoi/HanoiJS\";\nimport SortJS from \"./benchmarks/sort/SortJS\";\nimport SieveOfAtkinPrimeJS from \"./benchmarks/prime/SieveOfAtkinPrimeJS\";\nimport AesJS from \"./benchmarks/aes/AesJS\";\nimport DeflateJS from \"./benchmarks/deflate/DeflateJS\";\nimport ConvolveJS from \"./benchmarks/convolve/ConvolveJS\";\nimport ConvolveRust from \"./benchmarks/convolve/ConvolveRust\";\nimport ConvolveGo from \"./benchmarks/convolve/ConvolveGo\";\nimport DefaultBenchmark from \"./benchmarks/DefaultBenchmark\";\nimport IterateJS from \"./benchmarks/iterate/IterateJS\";\nimport StringsDynamicJS from \"./benchmarks/strings/StringsDynamicJS\";\nimport RepeatingDefaultBenchmark from \"./benchmarks/RepeatingDefaultBenchmark\";\nimport StringsStaticJS from \"./benchmarks/strings/StringsStaticJS\";\nimport SumJS from \"./benchmarks/sum/SumJS\";\nimport ConvolveVideoJS from \"./benchmarks/convolve_video/ConvolveVideoJS\";\nimport ConvolveVideoRust from \"./benchmarks/convolve_video/ConvolveVideoRust\";\nimport ConvolveVideoGo from \"./benchmarks/convolve_video/ConvolveVideoGo\";\nimport Sha256JS from \"./benchmarks/sha/Sha256JS\";\nimport ExifReaderJS from \"./benchmarks/exif/ExifReaderJS\";\nimport DomJS from \"./benchmarks/dom/DomJS\";\nimport Sha256CryptoJS from \"./benchmarks/sha/Sha256CryptoJS\";\nimport Sha512CryptoJS from \"./benchmarks/sha/Sha512CryptoJS\";\nimport Sha512JS from \"./benchmarks/sha/Sha512JS\";\n\nconst roundFormatter = value => Math.round(value);\nconst msFormatter = value => roundFormatter(value) + \" ms\";\nconst fpsFormatter = value => value.toFixed(1) + \" fps\";\n\nconst barChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 64,\n        type: \"bar\",\n        animations: {\n            enabled: false/*,\n            easing: 'easeinout',\n            speed: 200,\n            animateGradually: {\n                enabled: true,\n                delay: 0\n            },\n            dynamicAnimation: {\n                enabled: true,\n                speed: 200\n            }*/\n        }\n    },\n    markers: {\n        size: 7\n    },\n    dataLabels: {\n        enabled: true,\n        formatter: fpsFormatter\n    },\n    xaxis: {\n        title: {\n            text: \"Iterations\"\n        },\n        categories: []\n    },\n    yaxis: {\n        title: {\n            text: \"Frames per second\"\n        },\n        labels: {\n            formatter: fpsFormatter\n        }\n    },\n    legend: {\n        show: true\n    },\n    title: {\n        text: 'Frame rate',\n        align: 'left'\n    },\n    tooltip: {\n        y: {\n            formatter: fpsFormatter\n        }\n    }\n};\n\nconst areaChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 16,\n        type: \"line\",\n        animations: {\n            enabled: false/*,\n            easing: 'easeinout',\n            speed: 200,\n            animateGradually: {\n                enabled: true,\n                delay: 0\n            },\n            dynamicAnimation: {\n                enabled: true,\n                speed: 200\n            }*/\n        }\n    },\n    markers: {\n        size: 7\n    },\n    dataLabels: {\n        enabled: true,\n        formatter: roundFormatter\n    },\n    xaxis: {\n        title: {\n            text: \"Iterations\"\n        },\n        categories: []\n    },\n    yaxis: {\n        title: {\n            text: \"Duration in ms\"\n        },\n        labels: {\n            formatter: roundFormatter\n        }\n    },\n    legend: {\n        show: true\n    },\n    title: {\n        text: 'Time taken to run the benchmarks',\n        align: 'left'\n    },\n    tooltip: {\n        y: {\n            formatter: msFormatter\n        }\n    }\n};\n\n\nlet config = {\n    players: {\n        js: {\n            logo: \"logos/es-ecmascript-logo.svg\",\n            color: \"rgb(248,220,61)\"\n        },\n        rust: {\n            logo: \"logos/rust-logo-blk.svg\",\n            color: \"black\"\n        },\n        go: {\n            logo: \"logos/Go-Logo_Aqua.svg\",\n            color: \"#2DBCAF\"\n        }\n    },\n    benchmarks: [\n        {\n            name: \"Iterate\",\n            description: \"simple number iteration\",\n            runners: [\n                {\n                    name: \"Iterate 100m\",\n                    type: \"js\",\n                    factory: () => new IterateJS()\n                },\n                {\n                    name: \"Iterate 100m\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.iterate(...benchmark.parameters))\n                },\n                {\n                    name: \"Iterate 100m\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.iterate(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                100000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Strings dynamic\",\n            description: \"Search for substring in string\",\n            runners: [\n                {\n                    name: \"strings\",\n                    type: \"js\",\n                    factory: () => new StringsDynamicJS()\n                },\n                {\n                    name: \"strings\",\n                    type: \"rust\",\n                    factory: () => new RepeatingDefaultBenchmark(benchmark => window.wasm.rust.strings_dynamic(...benchmark.parameters))\n                },\n                {\n                    name: \"strings\",\n                    type: \"go\",\n                    factory: () => new RepeatingDefaultBenchmark(benchmark => window.wasm.go.strings_dynamic(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                10000, \"hello world\", \"world\"\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Strings static\",\n            description: \"Search for substring in string\",\n            runners: [\n                {\n                    name: \"strings\",\n                    type: \"js\",\n                    factory: () => new StringsStaticJS()\n                },\n                {\n                    name: \"strings\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.strings_static(...benchmark.parameters))\n                },\n                {\n                    name: \"strings\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.strings_static(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                1000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Sum static\",\n            description: \"\",\n            runners: [\n                {\n                    name: \"sum\",\n                    type: \"js\",\n                    factory: () => new SumJS()\n                },\n                {\n                    name: \"sum\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.sum(...benchmark.parameters))\n                },\n                {\n                    name: \"sum\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.sum(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                1000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Fibonacci sequence\",\n            description: \"Calculate the Fibonacci sequence for a given N\",\n            runners: [\n                {\n                    name: \"Iterative 100m\",\n                    type: \"js\",\n                    factory: () => new FibonacciJS()\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.fibonacci(...benchmark.parameters))\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.fibonacci(...benchmark.parameters))\n                }\n            ],\n            parameters: [\n                100000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Towers of Hanoi\",\n            description: \"Move all disks from one tower to another and return the used moves as string\",\n            runners: [\n                {\n                    name: \"Recursive 20\",\n                    type: \"js\",\n                    factory: () => new HanoiJS()\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.hanoi(...benchmark.parameters))\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.hanoi(...benchmark.parameters))\n                }\n            ],\n            parameters: [ 20, \"A\", \"B\", \"C\" ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Sort\",\n            description: \"Sort a list of elements containing multiple fields\",\n            runners: [\n                {\n                    name: \"Sort\",\n                    type: \"js\",\n                    factory: () => new SortJS()\n                },\n                {\n                    name: \"Sort\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.sort(...benchmark.parameters))\n                },\n                {\n                    name: \"Sort\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.sort(...benchmark.parameters))\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"sort\",\n                path: \"data/users.json\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Prime numbers\",\n            description: \"Find primae numbers by using Sieve of Atkin\",\n            runners: [\n                {\n                    name: \"Prime\",\n                    type: \"js\",\n                    factory: () => new SieveOfAtkinPrimeJS()\n                },\n                {\n                    name: \"Prime\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.prime(...benchmark.parameters))\n                },\n                {\n                    name: \"Prime\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.prime(...benchmark.parameters))\n                }\n            ],\n            parameters: [3000000],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"SHA256\",\n            description: \"Calculate the SHA256 hash\",\n            runners: [\n                {\n                    name: \"sha256 Forge\",\n                    type: \"js\",\n                    factory: () => new Sha256JS()\n                },\n                {\n                    name: \"sha256 Crypto API\",\n                    type: \"js\",\n                    factory: () => new Sha256CryptoJS()\n                },\n                {\n                    name: \"sha256\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.rust.sha256())\n                },\n                {\n                    name: \"sha256\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.go.sha256())\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 100\n                // path: \"data/8bytes.bin\",\n                // repeat: 1\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"SHA512\",\n            description: \"Calculate the SHA512 hash\",\n            runners: [\n                {\n                    name: \"sha512 Forge\",\n                    type: \"js\",\n                    factory: () => new Sha512JS()\n                },\n                {\n                    name: \"sha512 Crypto API\",\n                    type: \"js\",\n                    factory: () => new Sha512CryptoJS()\n                },\n                {\n                    name: \"sha512\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.rust.sha512())\n                },\n                {\n                    name: \"sha512\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.go.sha512())\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Encryption\",\n            description: \"Encrypt data using AES\",\n            runners: [\n                {\n                    name: \"AES CBC\",\n                    type: \"js\",\n                    factory: () => new AesJS()\n                },\n                {\n                    name: \"AES CBC\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.rust.aes())\n                },\n                {\n                    name: \"AES CBC\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.go.aes())\n                }\n            ],\n            parameters: [\n                [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n                [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n            ],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Compression\",\n            description: \"Compress data using Deflate\",\n            runners: [\n                {\n                    name: \"Deflate\",\n                    type: \"js\",\n                    factory: () => new DeflateJS()\n                },\n                {\n                    name: \"Deflate\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.go.deflate())\n                },\n                {\n                    name: \"Deflate\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.go.deflate())\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 500\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"EXIF Reader\",\n            description: \"exif reader\",\n            runners: [\n                {\n                    name: \"exif\",\n                    type: \"js\",\n                    factory: () => new ExifReaderJS()\n                },\n                {\n                    name: \"exif\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(() => window.wasm.rust.exif())\n                }/*,\n                {\n                    name: \"exif\",\n                    type: \"go\",\n                    factory: () => new ExifReaderGo()\n                }*/\n            ],\n            parameters: [],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/exif.jpg\",\n                repeat: 1\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            showCanvas: true,\n            canvas: null,\n            result: [],\n            error: null\n        },\n        {\n            name: \"Convolution filter\",\n            description: \"Manipulate an image using a convolution filter\",\n            runners: [\n                {\n                    name: \"convolve\",\n                    type: \"js\",\n                    factory: () => new ConvolveJS()\n                },\n                {\n                    name: \"convolve\",\n                    type: \"rust\",\n                    factory: () => new ConvolveRust()\n                },\n                {\n                    name: \"convolve\",\n                    type: \"go\",\n                    factory: () => new ConvolveGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"image\",\n                path: \"data/photo.jpg\",\n                repeat: 1\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            showCanvas: true,\n            canvas: null,\n            result: [],\n            error: null\n        },\n        {\n            name: \"Video filter\",\n            description: \"Manipulate a video using a convolution filter\",\n            runners: [\n                {\n                    name: \"convolve video\",\n                    type: \"js\",\n                    factory: () => new ConvolveVideoJS()\n                },\n                {\n                    name: \"convolve video\",\n                    type: \"rust\",\n                    factory: () => new ConvolveVideoRust()\n                },\n                {\n                    name: \"convolve video\",\n                    type: \"go\",\n                    factory: () => new ConvolveVideoGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"video\",\n                path: \"data/flowers.mp4\",\n                repeat: 1\n            },\n            repeat: 1,\n            chart: {\n                component: Chart,\n                options: barChartOptions\n            },\n            showCanvas: true,\n            canvas: null,\n            video: null,\n            result: [],\n            error: null\n        },\n        {\n            name: \"DOM manipulation\",\n            description: \"Create, add and remove nodes to the documents DOM tree\",\n            runners: [\n                {\n                    name: \"dom\",\n                    type: \"js\",\n                    factory: () => new DomJS()\n                },\n                {\n                    name: \"dom\",\n                    type: \"rust\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.rust.dom(...benchmark.parameters))\n                },\n                {\n                    name: \"dom\",\n                    type: \"go\",\n                    factory: () => new DefaultBenchmark(benchmark => window.wasm.go.dom(...benchmark.parameters))\n                }\n            ],\n            parameters: [5000],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            showCanvas: true,\n            canvas: null,\n            video: null,\n            result: [],\n            error: null\n        }\n    ]\n};\n\nexport default config;\n","import React, {Component} from 'react';\nimport {Button, Header, Image, List, Message, Segment} from 'semantic-ui-react'\nimport config from \"../lib/Config\";\n\nclass Benchmark extends Component {\n\n    run = () => {\n        if (this.props.onRun) {\n            this.props.onRun(this.props);\n        }\n    };\n\n    fitToParent(element) {\n        const ratio = element.parentElement.clientWidth / element.width;\n        if (ratio > 1) {\n            return;\n        }\n        element.style.width = element.parentElement.clientWidth + \"px\";\n        element.style.height = (ratio * element.height) + \"px\";\n    }\n\n    render() {\n        return <Segment>\n            {/*<Dimmer inverted active={this.props.running}>\n                <Loader disabled={!this.props.running}>Running</Loader>\n            </Dimmer>*/}\n            <Header as=\"h2\" floated=\"left\">\n                {this.props.name}\n                <Header.Subheader>{this.props.description}</Header.Subheader>\n            </Header>\n            <Button circular basic color=\"teal\" icon=\"play circle\" content=\"Run\" onClick={() => this.run()} floated=\"right\"  disabled={this.props.someRunning} loading={this.props.running}/>\n            <Header as=\"h3\" style={{clear: 'both'}}>Runners</Header>\n            <List horizontal divided>\n                {this.props.runners.map(runner =>\n                    <List.Item key={runner.name+\"-\"+runner.type}>\n                        <Image avatar src={config.players[runner.type].logo} alt={runner.type}/>\n                        <List.Content>\n                            <List.Header>{runner.name}</List.Header>\n                        </List.Content>\n                    </List.Item>\n                )}\n            </List>\n\n            {this.props.canvas ?\n                <React.Fragment>\n                    <Header as=\"h3\">Canvas</Header>\n                    <div ref={div => {\n                        if (div) {\n                            div.innerHTML = \"\";\n                            div.appendChild(this.props.canvas);\n                            this.fitToParent(this.props.canvas);\n                            window.addEventListener('resize', () => this.fitToParent(this.props.canvas), false);\n                        }\n                    }}/>\n                    {this.props.video ?\n                    <div ref={div => {\n                        if (div) {\n                            div.innerHTML = \"\";\n                            div.appendChild(this.props.video);\n                            this.fitToParent(this.props.video);\n                            window.addEventListener('resize', () => this.fitToParent(this.props.video), false);\n                        }\n                    }}/>\n                    : null}\n                </React.Fragment>\n                : null}\n\n            {this.props.series && this.props.series[0].data.length ?\n                <React.Fragment>\n                    <Header as=\"h3\">Results</Header>\n                    <this.props.chart.component\n                    options={this.props.chart.options}\n                    series={this.props.series}\n                    {...this.props.chart.options.chart}\n                    height={this.props.chart.options.chart.height * this.props.series.length * this.props.series[0].data.length + 100}\n                />\n                </React.Fragment>\n                 : null}\n            {this.props.error ?\n                <Message error header=\"Some benchmarks had errors\"\n                         content={this.props.error instanceof WebAssembly.RuntimeError ? this.props.error.stack : this.props.error}/> : null\n            }\n        </Segment>\n    }\n}\n\nexport default Benchmark;\n","import React, {Component} from 'react';\nimport Benchmark from \"./Benchmark\";\n\nclass Benchmarks extends Component {\n\n    render() {\n        return <div style={{clear: 'both'}}>{\n            this.props.benchmarks.map(benchmark => {\n                return <Benchmark key={benchmark.name} {...benchmark} someRunning={this.props.someRunning} onRun={this.props.onRun} />;\n            })\n        }</div>\n    }\n}\n\nexport default Benchmarks;\n","const mediaLoader = (src, element) => {\n    const promise = new Promise((resolve, reject) => {\n        if (element instanceof HTMLImageElement) {\n            element.addEventListener(\"load\", event => {\n                resolve(element);\n            }, false);\n            element.src = src;\n        } else if (element instanceof HTMLVideoElement) {\n            element.addEventListener(\"loadeddata\", event => {\n                resolve(element);\n            }, false);\n            element.src = src;\n            element.load();\n        } else {\n            throw new Error(\"Invalid media type \" + typeof element);\n        }\n        element.addEventListener(\"error\", errorEvent => {\n            reject(errorEvent);\n        }, false);\n    });\n    return promise;\n};\n\nexport {mediaLoader};\n","import config from \"./Config\";\nimport {mediaLoader} from \"./mediaLoader\";\n\nconst loadExternalData = async externalData => {\n\n    let data = null;\n\n    // Download external benchmark data for JS\n    if (externalData) {\n        let element;\n        if (externalData.type === \"image\") {\n            element = new Image();\n        } else if (externalData.type === \"video\") {\n            element = document.createElement(\"video\");\n        }\n        if ([\"image\", \"video\"].includes(externalData.type)) {\n            data = await mediaLoader(externalData.path, element);\n        } else if(externalData.type === \"bytes\") {\n            let response = await fetch(externalData.path);\n            let buffer = await response.arrayBuffer();\n            data = new Uint8Array(buffer);\n        } else {\n            let response = await fetch(externalData.path);\n            try {\n                data = await response.clone().json();\n            } catch (e) {\n                data = await response.text();\n            }\n        }\n        if (externalData && externalData.repeat > 1) {\n            if (data instanceof Uint8Array) {\n                let array = new Uint8Array(externalData.repeat * data.length);\n                for (let i = 0; i < externalData.repeat; i++) {\n                    array.set(data, i * data.length);\n                }\n                data = array;\n            } else if (typeof data == \"object\") {\n                data = Array(externalData.repeat)\n                    .fill(data)\n                    .flat();\n            } else {\n                data = String(data).repeat(externalData.repeat);\n            }\n        }\n    }\n\n    if (data !== null) {\n        externalData.data = data;\n    }\n    return externalData;\n};\n\nconst prepareExternalData = (externalData, runners) => {\n\n    // Push benchmark data to Go and Rust\n    if (externalData && [\"sort\", \"bytes\"].includes(externalData.type)) {\n        if (runners.some(runner => runner.type === \"rust\")) {\n            window.wasm.rust.prepare_test_data(externalData.type, externalData.data);\n        }\n        if (runners.some(runner => runner.type === \"go\")) {\n            window.wasm.go.prepare_test_data(externalData.type, externalData.data);\n        }\n    }\n};\n\nconst runBenchmark = async (benchmark, onLoad) => {\n    let categories = [];\n    let series = [];\n    let colors = [];\n\n    await loadExternalData(benchmark.externalData);\n    prepareExternalData(benchmark.externalData, benchmark.runners);\n\n    // Run all benchmarks\n    for (let index = 0; index < benchmark.runners.length; index++) {\n        const runner = benchmark.runners[index];\n        colors.push(config.players[runner.type].color);\n        for (let i = 0; i < benchmark.repeat; i++) {\n            if (benchmark.externalData && benchmark.externalData.type) {\n                if (runner.type === \"rust\") {\n                    window.wasm.rust.reset_test_data(benchmark.externalData.type);\n                }\n                if (runner.type === \"go\") {\n                    window.wasm.go.reset_test_data(benchmark.externalData.type);\n                }\n            }\n            let instance = runner.factory();\n            instance.onLoad = onLoad;\n            await instance.run(benchmark);\n            //categories.push(runner.type + \": \" + runner.name);\n            if (categories.length < benchmark.repeat) {\n                categories.push(i + 1);\n            }\n            if (!series[index]) {\n                series[index] = {\n                    //name: \"Duration\",\n                    name: runner.type + \": \" + runner.name,\n                    data: []\n                };\n            }\n            series[index].data.push(instance.results());\n        }\n    }\n\n    //window.wasm.rust.clear_test_data(this.props.externalData.type);\n    //window.wasm.go.clear_test_data(this.props.externalData.type);\n\n    return {categories, series, colors};\n};\n\nexport {runBenchmark};\n","import React, {Component} from 'react';\nimport Benchmarks from \"./Benchmarks\";\nimport {Button, Container, Divider, Header, Progress} from \"semantic-ui-react\";\nimport {runBenchmark} from \"../lib/benchmarkRunner\";\n\nclass BenchmarksPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            running: false,\n            progress: 0,\n            progressTotal: 0,\n            benchmarks: props.benchmarks\n        };\n    }\n\n    setStatePromise = (state) => new Promise(resolve => {\n        this.setState(state, () => {\n            setTimeout(() => resolve(), 1);\n        });\n    });\n\n    onRunAll = async () => {\n        await  this.setStatePromise({\n            running: true,\n            progress: 0,\n            progressTotal: this.props.benchmarks.length\n        });\n        for (let i = 0; i < this.state.benchmarks.length; i++) {\n            try {\n                await this.setStatePromise({progress: i + 1});\n                await this.onRunBenchmark(this.props.benchmarks[i]);\n            } catch(e) {\n                console.error(e);\n            }\n        }\n        await this.setStatePromise({running: false});\n    };\n\n    onBenchmarkLoad = async benchmark => {\n        await this.setStatePromise(state => {\n            let entry = state.benchmarks.filter(benchEntry => benchEntry.name === benchmark.name)[0];\n            Object.assign(entry, benchmark);\n            return state;\n        });\n    };\n\n    onRunBenchmark = async benchmark => {\n        await this.setStatePromise(state => {\n            let entry = state.benchmarks.filter(benchEntry => benchEntry.name === benchmark.name)[0];\n            entry.running = true;\n            return state;\n        });\n\n        let result;\n        let error;\n        try {\n            result = await runBenchmark(benchmark, this.onBenchmarkLoad);\n        } catch (e) {\n            error = e;\n        }\n\n        await this.setStatePromise(state => {\n            let entry = state.benchmarks.filter(benchEntry => benchEntry.name === benchmark.name)[0];\n            entry.running = false;\n            if (result) {\n                entry.chart.options.xaxis.categories = result.categories;\n                entry.series = result.series;\n                entry.chart.options.colors = result.colors;\n            } else if (error) {\n                entry.error = error;\n            } else {\n                entry.error = \"Unknown error\";\n            }\n            return state;\n        });\n\n        return result;\n    };\n\n    render() {\n        return <Container>\n            <Divider hidden />\n            <Header as=\"h1\" floated=\"left\">Benchmarks</Header>\n            <Button circular color=\"teal\" icon=\"play circle\"\n                    content=\"Run all benchmarks\" floated=\"right\"\n                    loading={this.state.running} onClick={() => this.onRunAll()}\n                    disabled={this.state.running || this.state.benchmarks.some(bench => bench.running)}/>\n            {this.state.running && this.state.progressTotal\n                ? <div style={{clear: 'both'}}>\n                    <Progress value={this.state.progress} total={this.state.progressTotal} progress=\"ratio\"/>\n                </div>\n                : null}\n            <Benchmarks benchmarks={this.state.benchmarks} someRunning={this.state.running || this.state.benchmarks.some(bench => bench.running)} onRun={this.onRunBenchmark} />\n            <Divider hidden />\n        </Container>\n    }\n}\n\nexport default BenchmarksPage;\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport BenchmarksPage from \"./BenchmarksPage\";\nimport Benchmark from \"./Benchmark\";\nimport {Message} from \"semantic-ui-react\";\nimport config from \"../lib/Config\";\n\nclass WebassemblyTestApp extends Component {\n\n    constructor(props) {\n        super(props);\n        window.wasm = {};\n        this.state = {\n            loading: true,\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const go = new window.Go();\n        Promise.all([\n            import(\"webassembly-benchmarks-rust\"),\n            WebAssembly.instantiateStreaming(fetch('go/webassembly-benchmarks-go.wasm'), {\n                ...go.importObject\n            }),\n        ])\n            .then(module => {\n                window.wasm.rust = module[0];\n                go.run(module[1].instance);\n                this.setState({loading: false});\n            })\n            .catch(error => this.setState({error: error.message}));\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Message error>Could not start application: {this.state.error}</Message>\n        } else if (!this.state.loading) {\n            return <main>\n                <HashRouter>\n                    <Switch>\n                        <Route path='/' render={() => <BenchmarksPage benchmarks={config.benchmarks}/>}/>\n                        <Route path='/test/:id' component={Benchmark}/>\n                    </Switch>\n                </HashRouter>\n            </main>\n        } else {\n            return <div>Loading...</div>\n        }\n    }\n}\n\nexport default WebassemblyTestApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. WebassemblyTestApp is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WebassemblyTestApp from './components/WebassemblyTestApp';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nReactDOM.render(\n    <WebassemblyTestApp />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}