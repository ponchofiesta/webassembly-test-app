{"version":3,"sources":["lib/benchmarks/Benchmark.js","lib/benchmarks/fibonacci/FibonacciJS.js","lib/benchmarks/fibonacci/FibonacciRust.js","lib/benchmarks/fibonacci/FibonacciGo.js","lib/benchmarks/hanoi/HanoiJS.js","lib/benchmarks/hanoi/HanoiRust.js","lib/benchmarks/hanoi/HanoiGo.js","lib/benchmarks/sort/SortJS.js","lib/benchmarks/sort/SortRust.js","lib/benchmarks/sort/SortGo.js","lib/benchmarks/prime/SieveOfAtkinPrimeJS.js","lib/benchmarks/prime/SieveOfAtkinPrimeRust.js","lib/benchmarks/prime/SieveOfAtkinPrimeGo.js","lib/benchmarks/aes/AesJS.js","lib/benchmarks/aes/AesRust.js","lib/benchmarks/aes/AesGo.js","lib/benchmarks/deflate/DeflateJS.js","lib/benchmarks/deflate/DeflateRust.js","lib/benchmarks/deflate/DeflateGo.js","lib/benchmarks/convolve/ConvolveJS.js","lib/benchmarks/convolve/ConvolveRust.js","lib/benchmarks/convolve/ConvolveGo.js","lib/Config.js","components/Benchmark.js","components/Benchmarks.js","lib/runLater.js","lib/imageLoader.js","lib/benchmarkRunner.js","components/BenchmarksPage.js","components/WebassemblyTestApp.js","serviceWorker.js","index.js"],"names":["Benchmark","Object","classCallCheck","this","result","startTime","stopTime","url","console","warn","constuctor","name","performance","now","image","canvas","document","createElement","width","height","getContext","drawImage","domCanvas","calcCanvas","putImageData","getImageData","FibonacciJS","n","t","a","b","benchmark","debug","constructor","get","getPrototypeOf","prototype","call","fibonacci","apply","toConsumableArray","parameters","FibonacciRust","_window$wasm$rust","window","wasm","rust","FibonacciGo","_window$wasm$go","go","HanoiJS","_this","possibleConstructorReturn","moves","from","via","to","hanoi","HanoiRust","HanoiGo","SortJS","data","sort","firstEl","secondEl","JSON","parse","stringify","externalData","SortRust","SortGo","SieveOfAtkinPrimeJS","max","primes","push","sieve","Array","fill","x","y","r","i","start","prime","stop","SieveOfAtkinPrimeRust","SieveOfAtkinPrimeGo","AesJS","key","iv","aesjs","cbc","encrypt","decrypt","dataBytes","utf8","toBytes","aes_encrypt","concat","AesRust","aes","AesGo","DeflateJS","pako","deflate","raw","DeflateRust","DeflateGo","ConvolveJS","convoluteFilter","matrix","factor","side","Math","round","sqrt","length","halfSide","floor","context","source","sourceData","imageWidth","imageHeight","output","createImageData","outputData","outputIndex","g","cy","cx","scy","scx","sourceIndex","modify","createCanvas","convolve","updateCanvas","ConvolveRust","ConvolveGo","size","ptr","memHelper","malloc","imageData","dataGo","Uint8ClampedArray","memory","buffer","imageDataGo","ImageData","set","convolve_mem","free","roundFormatter","value","areaChartOptions","chart","type","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","markers","dataLabels","formatter","xaxis","title","text","categories","yaxis","labels","legend","show","align","tooltip","config","players","js","logo","color","benchmarks","description","runners","factory","repeat","component","Chart","options","error","path","showCanvas","run","props","onRun","element","ratio","parentElement","clientWidth","style","_this2","react_default","Segment","Header","as","floated","Subheader","Button","circular","basic","icon","content","onClick","disabled","someRunning","loading","running","clear","List","horizontal","divided","map","runner","Item","Image_Image","avatar","src","alt","Content","series","Fragment","ref","div","appendChild","fitToParent","addEventListener","assign","Message","header","Component","Benchmarks","components_Benchmark","runLater","Promise","resolve","setTimeout","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","imageLoader","reject","Image","event","errorEvent","loadExternalData","_ref","response","fetch","clone","json","t0","flat","String","_x","arguments","runBenchmark","_ref2","_callee2","colors","_context2","includes","some","prepare_test_data","forEach","index","reset_test_data","instance","results","abrupt","_x2","BenchmarksPage","setStatePromise","state","setState","onRunAll","progress","progressTotal","then","onRunBenchmark","filter","benchEntry","_callee3","_context3","onBenchmarkFinished","objectSpread","catch","entry","Container","Divider","hidden","bench","Progress","total","components_Benchmarks","WebassemblyTestApp","Go","WebAssembly","Memory","initial","all","__webpack_require__","e","bind","instantiateStreaming","env","importObject","module","exports","message","HashRouter","Switch","Route","render","components_BenchmarksPage","Boolean","location","hostname","match","ReactDOM","components_WebassemblyTestApp","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7a73234.chunk.js","sourcesContent":["class Benchmark {\n\n    constructor() {\n        this.result = null;\n        this.startTime = null;\n        this.stopTime = null;\n    }\n\n    prepareTestData(url) {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    resetTestData(url) {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    run() {\n        console.warn(this.constuctor.name + \" not implemented.\")\n    }\n\n    start() {\n        this.startTime = performance.now();\n    }\n\n    stop() {\n        this.stopTime = performance.now();\n        this.result = this.stopTime - this.startTime;\n    }\n\n    results() {\n        return this.result;\n    }\n\n    createCanvas(image) {\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const context = canvas.getContext('2d');\n        context.drawImage(image, 0, 0);\n        return canvas;\n    }\n\n    updateCanvas(domCanvas, calcCanvas) {\n        domCanvas.width = calcCanvas.width;\n        domCanvas.height = calcCanvas.height;\n        domCanvas.getContext(\"2d\").putImageData(calcCanvas.getContext(\"2d\").getImageData(0, 0, calcCanvas.width, calcCanvas.height), 0, 0);\n    }\n\n\n}\nexport default Benchmark;\n","import Benchmark from \"../Benchmark\";\n\nclass FibonacciJS extends Benchmark {\n\n    fibonacci(n) {\n        let a = 0\n        let b = 1\n        let t;\n        while (n-- > 0) {\n            t = a;\n            a = b;\n            b += t;\n        }\n        return a;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.fibonacci(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciJS;\n","import Benchmark from \"../Benchmark\";\n\nclass FibonacciRust extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.fibonacci(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciRust;\n","import Benchmark from \"../Benchmark\";\n\nclass FibonacciGo extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.fibonacci(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default FibonacciGo;\n","import Benchmark from \"../Benchmark\";\n\nclass HanoiJS extends Benchmark {\n\n    constructor() {\n        super();\n        this.moves = \"\";\n    }\n\n    hanoi(n, from, via, to) {\n        if (n > 0) {\n            this.hanoi(n - 1, from, to, via);\n            this.moves += from + \"->\" + to + \"\\n\";\n            this.hanoi(n - 1, via, from, to);\n        }\n        return this.moves;\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        this.hanoi(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiJS;\n","import Benchmark from \"../Benchmark\";\n\nclass HanoiRust extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.hanoi(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiRust;\n","import Benchmark from \"../Benchmark\";\n\nclass HanoiGo extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.hanoi(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default HanoiGo;\n","import Benchmark from \"../Benchmark\";\n\nclass SortJS extends Benchmark {\n\n    sort(data) {\n        return data.sort((firstEl, secondEl) => {\n            if (firstEl.name < secondEl.name) {\n                return -1;\n            } else if (firstEl.name > secondEl.name) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        let data = JSON.parse(JSON.stringify(benchmark.externalData.data));\n        super.start();\n        this.sort(data);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortJS;\n","import Benchmark from \"../Benchmark\";\n\nclass SortRust extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.sort(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortRust;\n","import Benchmark from \"../Benchmark\";\n\nclass SortGo extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.sort(...benchmark.parameters);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SortGo;\n","import Benchmark from \"../Benchmark\";\n\nclass SieveOfAtkinPrimeJS extends Benchmark {\n\n    prime(max) {\n        let primes = [];\n\n        if (max > 2)\n            primes.push(2);\n        if (max > 3)\n            primes.push(3);\n\n        // Initialise the sieve array with false values\n        let sieve = Array(max).fill(false);\n\n        /* Mark siev[n] is true if one\n           of the following is true:\n        a) n = (4*x*x)+(y*y) has odd number of\n           solutions, i.e., there exist\n           odd number of distinct pairs (x, y)\n           that satisfy the equation and\n            n % 12 = 1 or n % 12 = 5.\n        b) n = (3*x*x)+(y*y) has odd number of\n           solutions and n % 12 = 7\n        c) n = (3*x*x)-(y*y) has odd number of\n           solutions, x > y and n % 12 = 11 */\n        for (let x = 1; x * x < max; x++) {\n            for (let y = 1; y * y < max; y++) {\n\n                // Main part of Sieve of Atkin\n                let n = (4 * x * x) + (y * y);\n                if (n <= max && (n % 12 === 1 || n % 12 === 5))\n                    sieve[n] ^= true;\n\n                n = (3 * x * x) + (y * y);\n                if (n <= max && n % 12 === 7)\n                    sieve[n] ^= true;\n\n                n = (3 * x * x) - (y * y);\n                if (x > y && n <= max && n % 12 === 11)\n                    sieve[n] ^= true;\n            }\n        }\n\n        // Mark all multiples of squares as non-prime\n        for (let r = 5; r * r < max; r++) {\n            if (sieve[r]) {\n                for (let i = r * r; i < max; i += r * r)\n                    sieve[i] = false;\n            }\n        }\n\n        // Print primes using sieve[]\n        for (let a = 5; a < max; a++)\n            if (sieve[a])\n                primes.push(a);\n\n        return primes;\n    }\n\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        this.prime(...benchmark.parameters);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SieveOfAtkinPrimeJS;\n","import Benchmark from \"../Benchmark\";\n\nclass SieveOfAtkinPrimeRust extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        window.wasm.rust.prime(...benchmark.parameters);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SieveOfAtkinPrimeRust;\n","import Benchmark from \"../Benchmark\";\n\nclass SieveOfAtkinPrimeGo extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        this.start();\n        window.wasm.go.prime(...benchmark.parameters);\n        this.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default SieveOfAtkinPrimeGo;\n","import Benchmark from \"../Benchmark\";\nimport * as aesjs from \"aes-js\";\n\nclass AesJS extends Benchmark {\n\n    aes_encrypt(key, iv, data) {\n        let aesCtr = new aesjs.ModeOfOperation.cbc(key, iv);\n        return aesCtr.encrypt(data);\n    }\n\n    aes_decrypt(key, iv, data) {\n        let aesCtr = new aesjs.ModeOfOperation.cbc(key, iv);\n        return aesCtr.decrypt(data);\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        // deep copy whole array\n        let dataBytes = aesjs.utils.utf8.toBytes(benchmark.externalData.data);\n        super.start();\n        this.aes_encrypt(...benchmark.parameters, dataBytes);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default AesJS;\n","import Benchmark from \"../Benchmark\";\n\nclass AesRust extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.aes();\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default AesRust;\n","import Benchmark from \"../Benchmark\";\n\nclass AesGo extends Benchmark {\n\n    run() {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.aes();\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default AesGo;\n","import Benchmark from \"../Benchmark\";\nimport pako from \"pako\";\nimport * as aesjs from \"aes-js\";\n\nclass DeflateJS extends Benchmark {\n\n    deflate(data) {\n        return pako.deflate(data, {raw: true});\n    }\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        let dataBytes = aesjs.utils.utf8.toBytes(benchmark.externalData.data);\n        super.start();\n        this.deflate(dataBytes);\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DeflateJS;\n","import Benchmark from \"../Benchmark\";\n\nclass DeflateRust extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.rust.deflate();\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DeflateRust;\n","import Benchmark from \"../Benchmark\";\n\nclass DeflateGo extends Benchmark {\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n        super.start();\n        window.wasm.go.deflate();\n        super.stop();\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default DeflateGo;\n","import Benchmark from \"../Benchmark\";\n\nclass ConvolveJS extends Benchmark {\n\n    convolve(canvas) {\n        let blur = [\n            0.0, 0.2, 0.0,\n            0.2, 0.2, 0.2,\n            0.0, 0.2, 0.0\n        ];\n        this.convoluteFilter(canvas, blur, 1);\n    }\n\n    convoluteFilter = (canvas, matrix, factor) => {\n        const side = Math.round(Math.sqrt(matrix.length));\n        const halfSide = Math.floor(side / 2);\n        const context = canvas.getContext('2d');\n        const source = context.getImageData(0, 0, canvas.width, canvas.height);\n        const sourceData = source.data;\n        const imageWidth = source.width;\n        const imageHeight = source.height;\n        const output = context.createImageData(imageWidth, imageHeight);\n        const outputData = output.data;\n\n        for (let y = 0; y < imageHeight; y++) {\n            for (let x = 0; x < imageWidth; x++) {\n                const outputIndex = (y * imageWidth + x) * 4;\n                let r = 0.0;\n                let g = 0.0;\n                let b = 0.0;\n                for (let cy = 0; cy < side; cy++) {\n                    for (let cx = 0; cx < side; cx++) {\n                        const scy = y + cy - halfSide;\n                        const scx = x + cx - halfSide;\n                        if (scy >= 0 && scy < imageHeight && scx >= 0 && scx < imageWidth) {\n                            const sourceIndex = (scy * imageWidth + scx) * 4;\n                            const modify = matrix[cy * side + cx];\n                            r += sourceData[sourceIndex] * modify;\n                            g += sourceData[sourceIndex + 1] * modify;\n                            b += sourceData[sourceIndex + 2] * modify;\n                        }\n                    }\n                }\n                outputData[outputIndex] = r * factor;\n                outputData[outputIndex + 1] = g * factor;\n                outputData[outputIndex + 2] = b * factor;\n                outputData[outputIndex + 3] = sourceData[outputIndex + 3];\n            }\n        }\n\n        context.putImageData(output, 0, 0);\n    };\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        // draw image on canvas\n        const canvas = this.createCanvas(benchmark.externalData.data);\n\n        super.start();\n        this.convolve(canvas);\n        super.stop();\n\n        const data = canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height);\n        //console.log(data.data[0] + ' ' + data.data[1] + ' ' + data.data[2]);\n\n\n        // draw result on canvas\n        this.updateCanvas(benchmark.canvas, canvas);\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default ConvolveJS;\n","import Benchmark from \"../Benchmark\";\n\nclass ConvolveRust extends Benchmark {\n\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        // draw image on canvas\n        const canvas = this.createCanvas(benchmark.externalData.data);\n\n        super.start();\n        window.wasm.rust.convolve(canvas);\n        super.stop();\n\n        const data = canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height);\n        //console.log(data.data[0] + ' ' + data.data[1] + ' ' + data.data[2]);\n\n        // draw result on canvas\n        this.updateCanvas(benchmark.canvas, canvas);\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default ConvolveRust;\n","import Benchmark from \"../Benchmark\";\n\nclass ConvolveGo extends Benchmark {\n\n\n    run(benchmark) {\n        console.debug(\"start \" + this.constructor.name);\n\n        // draw image on canvas\n        const canvas = this.createCanvas(benchmark.externalData.data);\n\n        super.start();\n\n        const context = canvas.getContext(\"2d\");\n        const size = canvas.width * canvas.height * 4;\n        const ptr = window.wasm.memHelper.malloc(size);\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        const dataGo = new Uint8ClampedArray(window.wasm.memHelper.memory.buffer, ptr, size);\n        const imageDataGo = new ImageData(dataGo, canvas.width, canvas.height);\n        imageDataGo.data.set(imageData.data);\n        window.wasm.go.convolve_mem(ptr, canvas.width, canvas.height);\n        context.putImageData(imageDataGo, 0, 0);\n        window.wasm.memHelper.free(ptr);\n\n        super.stop();\n\n        this.updateCanvas(benchmark.canvas, canvas);\n\n        console.debug(\"stop \" + this.constructor.name);\n    }\n}\nexport default ConvolveGo;\n","import Chart from \"react-apexcharts\";\nimport FibonacciJS from \"./benchmarks/fibonacci/FibonacciJS\";\nimport FibonacciRust from \"./benchmarks/fibonacci/FibonacciRust\";\nimport FibonacciGo from \"./benchmarks/fibonacci/FibonacciGo\";\nimport HanoiJS from \"./benchmarks/hanoi/HanoiJS\";\nimport HanoiRust from \"./benchmarks/hanoi/HanoiRust\";\nimport HanoiGo from \"./benchmarks/hanoi/HanoiGo\";\nimport SortJS from \"./benchmarks/sort/SortJS\";\nimport SortRust from \"./benchmarks/sort/SortRust\";\nimport SortGo from \"./benchmarks/sort/SortGo\";\nimport SieveOfAtkinPrimeJS from \"./benchmarks/prime/SieveOfAtkinPrimeJS\";\nimport SieveOfAtkinPrimeRust from \"./benchmarks/prime/SieveOfAtkinPrimeRust\";\nimport SieveOfAtkinPrimeGo from \"./benchmarks/prime/SieveOfAtkinPrimeGo\";\nimport AesJS from \"./benchmarks/aes/AesJS\";\nimport AesRust from \"./benchmarks/aes/AesRust\";\nimport AesGo from \"./benchmarks/aes/AesGo\";\nimport DeflateJS from \"./benchmarks/deflate/DeflateJS\";\nimport DeflateRust from \"./benchmarks/deflate/DeflateRust\";\nimport DeflateGo from \"./benchmarks/deflate/DeflateGo\";\nimport ConvolveJS from \"./benchmarks/convolve/ConvolveJS\";\nimport ConvolveRust from \"./benchmarks/convolve/ConvolveRust\";\nimport ConvolveGo from \"./benchmarks/convolve/ConvolveGo\";\n\nconst roundFormatter = value => Math.round(value);\nconst msFormatter = value => roundFormatter(value) + \" ms\";\n\n// const barChartOptions = {\n//     chart: {\n//         width: \"100%\",\n//         height: 30,\n//         type: \"bar\"\n//     },\n//     plotOptions: {\n//         bar: {\n//             horizontal: true\n//         }\n//     },\n//     dataLabels: {\n//         enabled: true,\n//         formatter: msFormatter\n//     },\n//     xaxis: {\n//         categories: []\n//     },\n//     legend: {\n//         show: false\n//     },\n//     tooltip: {\n//         y: {\n//             formatter: msFormatter\n//         }\n//     }\n// };\n\nconst areaChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 16,\n        type: \"line\",\n        animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 200,\n            animateGradually: {\n                enabled: true,\n                delay: 0\n            },\n            dynamicAnimation: {\n                enabled: true,\n                speed: 200\n            }\n        }\n    },\n    markers: {\n        size: 7\n    },\n    dataLabels: {\n        enabled: true,\n        formatter: roundFormatter\n    },\n    xaxis: {\n        title: {\n            text: \"Iterations\"\n        },\n        categories: []\n    },\n    yaxis: {\n        title: {\n            text: \"Duration in ms\"\n        },\n        labels: {\n            formatter: roundFormatter\n        }\n    },\n    legend: {\n        show: true\n    },\n    title: {\n        text: 'Time taken to run the benchmarks',\n        align: 'left'\n    },\n    tooltip: {\n        y: {\n            formatter: msFormatter\n        }\n    }\n};\n\n\nconst config = {\n    players: {\n        js: {\n            logo: \"logos/es-ecmascript-logo.svg\",\n            color: \"rgb(248,220,61)\"\n        },\n        rust: {\n            logo: \"logos/rust-logo-blk.svg\",\n            color: \"black\"\n        },\n        go: {\n            logo: \"logos/Go-Logo_Aqua.svg\",\n            color: \"#2DBCAF\"\n        }\n    },\n    benchmarks: [\n        {\n            name: \"Fibunacci sequence\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Iterative 100m\",\n                    type: \"js\",\n                    factory: () => new FibonacciJS()\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"rust\",\n                    factory: () => new FibonacciRust()\n                },\n                {\n                    name: \"Iterative 100m\",\n                    type: \"go\",\n                    factory: () => new FibonacciGo()\n                }\n            ],\n            parameters: [\n                100000000\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Towers of Hanoi\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Recursive 20\",\n                    type: \"js\",\n                    factory: () => new HanoiJS()\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"rust\",\n                    factory: () => new HanoiRust()\n                },\n                {\n                    name: \"Recursive 20\",\n                    type: \"go\",\n                    factory: () => new HanoiGo()\n                }\n            ],\n            parameters: [ 20, \"A\", \"B\", \"C\" ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Sort\",\n            description: \"Sort a list of elements containing multiple fields\",\n            runners: [\n                {\n                    name: \"Sort\",\n                    type: \"js\",\n                    factory: () => new SortJS()\n                },\n                {\n                    name: \"Sort\",\n                    type: \"rust\",\n                    factory: () => new SortRust()\n                },\n                {\n                    name: \"Sort\",\n                    type: \"go\",\n                    factory: () => new SortGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"sort\",\n                path: \"data/users.json\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Prime numbers\",\n            description: \"Sieve of Atkin\",\n            runners: [\n                {\n                    name: \"Prime\",\n                    type: \"js\",\n                    factory: () => new SieveOfAtkinPrimeJS()\n                },\n                {\n                    name: \"Prime\",\n                    type: \"rust\",\n                    factory: () => new SieveOfAtkinPrimeRust()\n                },\n                {\n                    name: \"Prime\",\n                    type: \"go\",\n                    factory: () => new SieveOfAtkinPrimeGo()\n                }\n            ],\n            parameters: [3000000],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Encryption\",\n            description: \"Encryption\",\n            runners: [\n                {\n                    name: \"AES CBC\",\n                    type: \"js\",\n                    factory: () => new AesJS()\n                },\n                {\n                    name: \"AES CBC\",\n                    type: \"rust\",\n                    factory: () => new AesRust()\n                },\n                {\n                    name: \"AES CBC\",\n                    type: \"go\",\n                    factory: () => new AesGo()\n                }\n            ],\n            parameters: [\n                [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n                [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n            ],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 100\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Compression Deflate\",\n            description: \"Deflate\",\n            runners: [\n                {\n                    name: \"Deflate\",\n                    type: \"js\",\n                    factory: () => new DeflateJS()\n                },\n                {\n                    name: \"Deflate\",\n                    type: \"rust\",\n                    factory: () => new DeflateRust()\n                },\n                {\n                    name: \"Deflate\",\n                    type: \"go\",\n                    factory: () => new DeflateGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"bytes\",\n                path: \"data/random.txt\",\n                repeat: 500\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            result: [],\n            error: null\n        },\n        {\n            name: \"Convolution filter\",\n            description: \"convolution filter\",\n            runners: [\n                {\n                    name: \"convolve\",\n                    type: \"js\",\n                    factory: () => new ConvolveJS()\n                },\n                {\n                    name: \"convolve\",\n                    type: \"rust\",\n                    factory: () => new ConvolveRust()\n                },\n                {\n                    name: \"convolve\",\n                    type: \"go\",\n                    factory: () => new ConvolveGo()\n                }\n            ],\n            parameters: [],\n            externalData: {\n                type: \"image\",\n                path: \"data/photo.jpg\",\n                repeat: 1\n            },\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            },\n            showCanvas: true,\n            canvas: document.createElement(\"canvas\"),\n            result: [],\n            error: null\n        }\n    ]\n};\n\nexport default config;\n","import React, {Component} from 'react';\nimport {Button, Header, Image, List, Message, Segment} from 'semantic-ui-react'\nimport config from \"../lib/Config\";\n\nclass Benchmark extends Component {\n\n    run = () => {\n        if (this.props.onRun) {\n            this.props.onRun(this.props);\n        }\n    };\n\n    fitToParent(element) {\n        const ratio = element.parentElement.clientWidth / element.width;\n        if (ratio > 1) {\n            return;\n        }\n        element.style.width = element.parentElement.clientWidth + \"px\";\n        element.style.height = (ratio * element.height) + \"px\";\n    }\n\n    render() {\n        return <Segment>\n            {/*<Dimmer inverted active={this.props.running}>\n                <Loader disabled={!this.props.running}>Running</Loader>\n            </Dimmer>*/}\n            <Header as=\"h2\" floated=\"left\">\n                {this.props.name}\n                <Header.Subheader>{this.props.description}</Header.Subheader>\n            </Header>\n            <Button circular basic color=\"teal\" icon=\"play circle\" content=\"Run\" onClick={() => this.run()} floated=\"right\"  disabled={this.props.someRunning} loading={this.props.running}/>\n            <Header as=\"h3\" style={{clear: 'both'}}>Runners</Header>\n            <List horizontal divided>\n                {this.props.runners.map(runner =>\n                    <List.Item key={runner.name+\"-\"+runner.type}>\n                        <Image avatar src={config.players[runner.type].logo} alt={runner.type}/>\n                        <List.Content>\n                            <List.Header>{runner.name}</List.Header>\n                        </List.Content>\n                    </List.Item>\n                )}\n            </List>\n\n            {this.props.canvas && this.props.series && this.props.series[0].data.length ?\n                <React.Fragment>\n                    <Header as=\"h3\">Canvas</Header>\n                    <div ref={div => {\n                        if (div) {\n                            // add canvas\n                            div.appendChild(this.props.canvas);\n                            this.fitToParent(this.props.canvas);\n                            window.addEventListener('resize', () => this.fitToParent(this.props.canvas), false);\n                        }\n                    }}/>\n                </React.Fragment>\n                : null}\n\n            {this.props.series && this.props.series[0].data.length ?\n                <React.Fragment>\n                    <Header as=\"h3\">Results</Header>\n                    <this.props.chart.component\n                    options={this.props.chart.options}\n                    series={this.props.series}\n                    {...this.props.chart.options.chart}\n                    height={this.props.chart.options.chart.height * this.props.series.length * this.props.series[0].data.length + 100}\n                />\n                </React.Fragment>\n                 : null}\n            {this.props.error ?\n                <Message error header=\"Some benchmarks had errors\" content={this.props.error}/> : null\n            }\n        </Segment>\n    }\n}\n\nexport default Benchmark;\n","import React, {Component} from 'react';\nimport Benchmark from \"./Benchmark\";\n\nclass Benchmarks extends Component {\n\n    render() {\n        return <div style={{clear: 'both'}}>{\n            this.props.benchmarks.map(benchmark => {\n                return <Benchmark key={benchmark.name} {...benchmark} someRunning={this.props.someRunning} onRun={this.props.onRun} />;\n            })\n        }</div>\n    }\n}\n\nexport default Benchmarks;\n","const runLater = (run) => new Promise(resolve => setTimeout(async () => {\n    let result = await run();\n    resolve(result);\n}, 1));\nexport default runLater;\n","const imageLoader = src => {\n    const promise = new Promise((resolve, reject) => {\n        const image = new Image();\n        image.addEventListener(\"load\", event => {\n            resolve(image);\n        }, false);\n        image.addEventListener(\"error\", errorEvent => {\n            reject(errorEvent);\n        }, false);\n        image.src = src;\n    });\n    return promise;\n};\nexport {imageLoader};","import config from \"./Config\";\nimport {imageLoader} from \"./imageLoader\";\n\nconst loadExternalData = async externalData => {\n\n    let data = null;\n\n    // Download external benchmark data for JS\n    if (externalData) {\n        if (externalData.type === \"image\") {\n            data = await imageLoader(externalData.path);\n        } else {\n            let response = await fetch(externalData.path);\n            try {\n                data = await response.clone().json();\n            } catch (e) {\n                data = await response.text();\n            }\n        }\n        if (externalData && externalData.repeat > 1) {\n            if (typeof data == \"object\") {\n                data = Array(externalData.repeat)\n                    .fill(data)\n                    .flat();\n            } else {\n                data = String(data).repeat(externalData.repeat);\n            }\n        }\n    }\n\n    if (data !== null) {\n        externalData.data = data;\n    }\n};\n\nconst prepareExternalData = (externalData, runners) => {\n\n    // Push benchmark data to Go and Rust\n    if (externalData && [\"sort\", \"bytes\"].includes(externalData.type)) {\n        if (runners.some(runner => runner.type === \"rust\")) {\n            window.wasm.rust.prepare_test_data(externalData.type, externalData.data);\n        }\n        if (runners.some(runner => runner.type === \"go\")) {\n            window.wasm.go.prepare_test_data(externalData.type, externalData.data);\n        }\n    }\n};\n\nconst runBenchmark = async benchmark => {\n    let categories = [];\n    let series = [];\n    let colors = [];\n\n    await loadExternalData(benchmark.externalData);\n    prepareExternalData(benchmark.externalData, benchmark.runners);\n\n    // Run all benchmarks\n    benchmark.runners.forEach((runner, index) => {\n        colors.push(config.players[runner.type].color);\n        for (let i = 0; i < benchmark.repeat; i++) {\n            if (benchmark.externalData && benchmark.externalData.type) {\n                if (runner.type === \"rust\") {\n                    window.wasm.rust.reset_test_data(benchmark.externalData.type);\n                }\n                if (runner.type === \"go\") {\n                    window.wasm.go.reset_test_data(benchmark.externalData.type);\n                }\n            }\n            let instance = runner.factory();\n            instance.run(benchmark);\n            //categories.push(runner.type + \": \" + runner.name);\n            if (categories.length < benchmark.repeat) {\n                categories.push(i + 1);\n            }\n            if (!series[index]) {\n                series[index] = {\n                    //name: \"Duration\",\n                    name: runner.type + \": \" + runner.name,\n                    data: []\n                };\n            }\n            series[index].data.push(instance.results());\n        }\n    });\n\n    //window.wasm.rust.clear_test_data(this.props.externalData.type);\n    //window.wasm.go.clear_test_data(this.props.externalData.type);\n\n    return {categories, series, colors};\n};\n\nexport {runBenchmark};","import React, {Component} from 'react';\nimport Benchmarks from \"./Benchmarks\";\nimport {Button, Container, Divider, Header, Progress} from \"semantic-ui-react\";\nimport runLater from \"../lib/runLater\";\nimport {runBenchmark} from \"../lib/benchmarkRunner\";\n\nclass BenchmarksPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            running: false,\n            progress: 0,\n            progressTotal: 0,\n            benchmarks: props.benchmarks\n        };\n    }\n\n    setStatePromise = (state) => new Promise(resolve => {\n        this.setState(state, () => resolve());\n    });\n\n    onRunAll = async () => {\n        this.setStatePromise({\n            running: true,\n            progress: 0,\n            progressTotal: this.props.benchmarks.length\n        }).then(async () => {\n            for (let i = 0; i < this.state.benchmarks.length; i++) {\n                try {\n                    this.setState({progress: i + 1});\n                    let result = await this.onRunBenchmark(this.props.benchmarks[i]);\n                } catch(e) {\n                    console.error(e);\n                }\n            }\n            this.setState({running: false});\n        });\n    };\n\n    onRunBenchmark = benchmark => new Promise((resolve, reject) => {\n        this.setState(state => {\n            let entry = state.benchmarks.filter(benchEntry => benchEntry.name === benchmark.name)[0];\n            entry.running = true;\n            return state;\n        });\n        runLater(async () =>\n            runBenchmark(benchmark)\n                .then(result => {\n                    this.onBenchmarkFinished({...benchmark, result});\n                    resolve(result);\n                })\n                .catch(error => {\n                    this.onBenchmarkFinished({...benchmark, error});\n                    reject(error);\n                })\n        );\n    });\n\n    onBenchmarkFinished = (benchmark) => {\n        this.setState(state => {\n            let entry = state.benchmarks.filter(benchEntry => benchEntry.name === benchmark.name)[0];\n            entry.running = false;\n            if (benchmark.result) {\n                entry.chart.options.xaxis.categories = benchmark.result.categories;\n                entry.series = benchmark.result.series;\n                entry.chart.options.colors = benchmark.result.colors;\n            }\n            if (benchmark.error) {\n                entry.error = benchmark.error;\n            }\n            return state;\n        });\n    };\n\n    render() {\n        return <Container>\n            <Divider hidden />\n            <Header as=\"h1\" floated=\"left\">Benchmarks</Header>\n            <Button circular color=\"teal\" icon=\"play circle\"\n                    content=\"Run all benchmarks\" floated=\"right\"\n                    loading={this.state.running} onClick={() => this.onRunAll()}\n                    disabled={this.state.running || this.state.benchmarks.some(bench => bench.running)}/>\n            {this.state.running && this.state.progressTotal\n                ? <div style={{clear: 'both'}}>\n                    <Progress value={this.state.progress} total={this.state.progressTotal} progress=\"ratio\"/>\n                </div>\n                : null}\n            <Benchmarks benchmarks={this.state.benchmarks} someRunning={this.state.running || this.state.benchmarks.some(bench => bench.running)} onRun={this.onRunBenchmark} />\n            <Divider hidden />\n        </Container>\n    }\n}\n\nexport default BenchmarksPage;\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport BenchmarksPage from \"./BenchmarksPage\";\nimport Benchmark from \"./Benchmark\";\nimport {Message} from \"semantic-ui-react\";\nimport config from \"../lib/Config\";\n\nclass WebassemblyTestApp extends Component {\n\n    constructor(props) {\n        super(props);\n        window.wasm = {};\n        this.state = {\n            loading: true,\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const go = new window.Go();\n        const memory = new WebAssembly.Memory({initial: 1024});\n\n        Promise.all([\n            import(\"webassembly-benchmarks-rust\"),\n            WebAssembly.instantiateStreaming(fetch('go/webassembly-benchmarks-go.wasm'), {\n                env: {memory},\n                ...go.importObject\n            }),\n            // memory C library from https://github.com/guybedford/wasm-stdlib-hack/blob/master/dist/memory.wasm\n            // provides: abort, calloc, free, malloc, memcoy, memset, sbrk\n            WebAssembly.instantiateStreaming(fetch(\"memory.wasm\"), {\n                env: {memory}\n            })\n        ])\n            .then(module => {\n                window.wasm.rust = module[0];\n                go.run(module[1].instance);\n                window.wasm.memHelper = {\n                    memory,\n                    ...module[2].instance.exports\n                };\n                this.setState({loading: false});\n            })\n            .catch(error => this.setState({error: error.message}));\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Message error>Could not start application: {this.state.error}</Message>\n        } else if (!this.state.loading) {\n            return <main>\n                <HashRouter>\n                    <Switch>\n                        <Route path='/' render={() => <BenchmarksPage benchmarks={config.benchmarks}/>}/>\n                        <Route path='/test/:id' component={Benchmark}/>\n                    </Switch>\n                </HashRouter>\n            </main>\n        } else {\n            return <div>Loading...</div>\n        }\n    }\n}\n\nexport default WebassemblyTestApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. WebassemblyTestApp is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WebassemblyTestApp from './components/WebassemblyTestApp';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nReactDOM.render(\n    <WebassemblyTestApp />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}