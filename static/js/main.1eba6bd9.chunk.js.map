{"version":3,"sources":["lib/tests/Test.js","lib/tests/fibonacci/FibonacciJS.js","lib/tests/fibonacci/FibonacciRust.js","lib/tests/fibonacci/FibonacciGo.js","lib/Config.js","components/Test.js","components/Tests.js","components/TestsPage.js","components/WebassemblyTestApp.js","serviceWorker.js","index.js"],"names":["Test","Object","classCallCheck","this","result","startTime","stopTime","Date","FibonacciJS","n","t","a","b","parameters","console","debug","get","getPrototypeOf","prototype","call","fibonacci","FibonacciRust","window","wasm","rust","FibonacciGo","go","msFormatter","value","areaChartOptions","chart","width","height","type","markers","size","dataLabels","enabled","xaxis","title","text","categories","yaxis","legend","show","align","tooltip","y","formatter","config","players","js","logo","color","tests","name","description","runners","object","repeat","component","Chart","options","props","_this","possibleConstructorReturn","startRun","setState","running","setTimeout","run","finishRun","series","colors","forEach","runner","index","push","i","length","data","results","state","react_default","createElement","Segment","Dimmer","inverted","active","Loader","disabled","Header","as","floated","Subheader","Button","circular","basic","icon","content","onClick","style","clear","List","horizontal","divided","map","Item","key","Image","avatar","src","alt","Content","assign","Component","Tests","test","components_Test","TestsPage","Container","Divider","hidden","components_Tests","WebassemblyTestApp","loading","error","_this2","Go","Promise","all","__webpack_require__","e","then","bind","WebAssembly","instantiateStreaming","fetch","importObject","module","instance","catch","message","Message","HashRouter","Switch","Route","path","render","components_TestsPage","Boolean","location","hostname","match","ReactDOM","components_WebassemblyTestApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1eba6bd9.chunk.js","sourcesContent":["class Test {\n\n    constructor() {\n        this.result = null;\n        this.startTime = null;\n        this.stopTime = null;\n    }\n\n    run() {\n\n    }\n\n    start() {\n        this.startTime = new Date();\n    }\n\n    stop() {\n        this.stopTime = new Date();\n        this.result = this.stopTime - this.startTime;\n    }\n\n    results() {\n        return this.result;\n    }\n}\nexport default Test;\n","import Test from \"../Test\";\n\nclass FibonacciJS extends Test {\n\n    fibonacci(n) {\n        let a = 0\n        let b = 1\n        let t;\n        while (n-- > 0) {\n            t = a;\n            a = b;\n            b += t;\n        }\n        return a;\n    }\n\n    run(parameters) {\n        console.debug(\"start fibonacci\");\n        super.start();\n        this.fibonacci(parameters.n);\n        super.stop();\n        console.debug(\"stop fibonacci\");\n    }\n}\nexport default FibonacciJS;\n","import Test from \"../Test\";\n\nclass FibonacciRust extends Test {\n\n    run(parameters) {\n        super.start();\n        window.wasm.rust.fibonacci(parameters.n);\n        super.stop();\n    }\n}\nexport default FibonacciRust;\n","import Test from \"../Test\";\n\nclass FibonacciGo extends Test {\n\n    run(parameters) {\n        super.start();\n        window.wasm.go.fibonacci(parameters.n);\n        super.stop();\n    }\n}\nexport default FibonacciGo;\n","import Chart from \"react-apexcharts\";\nimport FibonacciJS from \"./tests/fibonacci/FibonacciJS\";\nimport FibonacciRust from \"./tests/fibonacci/FibonacciRust\";\nimport FibonacciGo from \"./tests/fibonacci/FibonacciGo\";\n\nconst msFormatter = (value) => (value+\" ms\");\n\nconst barChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 30,\n        type: \"bar\"\n    },\n    plotOptions: {\n        bar: {\n            horizontal: true\n        }\n    },\n    dataLabels: {\n        enabled: true,\n        formatter: msFormatter\n    },\n    xaxis: {\n        categories: []\n    },\n    legend: {\n        show: false\n    },\n    tooltip: {\n        y: {\n            formatter: msFormatter\n        }\n    }\n};\n\nconst areaChartOptions = {\n    chart: {\n        width: \"100%\",\n        height: 16,\n        type: \"line\"\n    },\n    markers: {\n        size: 7\n    },\n    dataLabels: {\n        enabled: true\n    },\n    xaxis: {\n        title: {\n            text: \"Iterations\"\n        },\n        categories: []\n    },\n    yaxis: {\n        title: {\n            text: \"Duration in ms\"\n        }\n    },\n    legend: {\n        show: true\n    },\n    title: {\n        text: 'Time taken to run the tests',\n        align: 'left'\n    },\n    tooltip: {\n        y: {\n            formatter: msFormatter\n        }\n    }\n};\n\nconst config = {\n    players: {\n        js: {\n            logo: \"logos/es-ecmascript-logo.svg\",\n            color: \"rgb(248,220,61)\"\n        },\n        rust: {\n            logo: \"logos/rust-logo-blk.svg\",\n            color: \"black\"\n        },\n        go: {\n            logo: \"logos/Go-Logo_Aqua.svg\",\n            color: \"#2DBCAF\"\n        }\n    },\n    tests: [\n        {\n            name: \"Fibunacci sequence\",\n            description: \"Some number algo\",\n            runners: [\n                {\n                    name: \"Iterative 100k\",\n                    type: \"js\",\n                    object: new FibonacciJS(),\n                    parameters: {\n                        n: 100000000\n                    }\n                },\n                {\n                    name: \"Iterative 100k\",\n                    type: \"rust\",\n                    object: new FibonacciRust(),\n                    parameters: {\n                        n: 100000000\n                    }\n                },\n                {\n                    name: \"Iterative 100k\",\n                    type: \"go\",\n                    object: new FibonacciGo(),\n                    parameters: {\n                        n: 100000000\n                    }\n                }\n            ],\n            repeat: 5,\n            chart: {\n                component: Chart,\n                options: areaChartOptions\n            }\n        }\n    ]\n};\n\nexport default config;\n","import React, {Component} from 'react';\nimport {Button, Dimmer, Header, Image, List, Loader, Segment} from 'semantic-ui-react'\nimport config from \"../lib/Config\";\n\nclass Test extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            chart: props.chart,\n            series: [{data: []}],\n            running: false\n        };\n    }\n\n    startRun = () => {\n        this.setState({running: true});\n        setTimeout(() => {\n            let result = this.run();\n            this.finishRun(result);\n        }, 0);\n        console.debug(\"all tests started\");\n    };\n\n    run = () => {\n        let categories = [];\n        let series = [];\n        let colors = [];\n        this.props.runners.forEach((runner, index) => {\n            colors.push(config.players[runner.type].color);\n            for (let i = 0; i < this.props.repeat; i++) {\n                runner.object.run(runner.parameters);\n                //categories.push(runner.type + \": \" + runner.name);\n                if (categories.length < this.props.repeat) {\n                    categories.push(i + 1);\n                }\n                if (!series[index]) {\n                    series[index] = {\n                        //name: \"Duration\",\n                        name: runner.type + \": \" + runner.name,\n                        data: []\n                    };\n                }\n                series[index].data.push(runner.object.results());\n            }\n        });\n        return {categories, series, colors};\n    };\n\n    finishRun = result => this.setState(state => {\n        console.debug(\"all tests finished\");\n        state.chart.options.xaxis.categories = result.categories;\n        state.series = result.series;\n        state.chart.options.colors = result.colors;\n        state.running = false;\n        return state;\n    });\n\n    render() {\n        return <Segment>\n            <Dimmer inverted active={this.state.running}>\n                <Loader disabled={!this.state.running}>Running</Loader>\n            </Dimmer>\n            <Header as=\"h2\" floated=\"left\">\n                {this.props.name}\n                <Header.Subheader>{this.props.description}</Header.Subheader>\n            </Header>\n            <Button circular basic color=\"teal\" icon=\"play circle\" content=\"Run\" onClick={this.startRun} floated=\"right\"/>\n            <Header as=\"h3\" style={{clear: 'both'}}>Runners</Header>\n            <List horizontal divided>\n                {this.props.runners.map(runner =>\n                    <List.Item key={runner.name+\"-\"+runner.type}>\n                        <Image avatar src={config.players[runner.type].logo} alt={runner.type}/>\n                        <List.Content>\n                            <List.Header>{runner.name}</List.Header>\n                        </List.Content>\n                    </List.Item>\n                )}\n            </List>\n            {this.state.series[0].data.length > 0 &&\n                <Header as=\"h3\">Results</Header>}\n            {this.state.series[0].data.length > 0 &&\n                <this.state.chart.component\n                    options={this.state.chart.options}\n                    series={this.state.series}\n                    {...this.state.chart.options.chart}\n                    height={this.state.chart.options.chart.height * this.state.series.length * this.state.series[0].data.length + 100}\n                />\n            }\n        </Segment>\n    }\n}\n\nexport default Test;\n","import React, {Component} from 'react';\nimport Test from \"./Test\";\n\nclass Tests extends Component {\n\n    render() {\n        return <div>\n            {this.props.tests.map(test => <Test key={test.name} {...test}/>)}\n        </div>\n    }\n}\n\nexport default Tests;\n","import React, {Component} from 'react';\nimport Tests from \"./Tests\";\nimport {Container, Divider, Header} from \"semantic-ui-react\";\n\nclass TestsPage extends Component {\n    render() {\n        return <Container>\n            <Divider hidden />\n            <Header as='h1'>Tests</Header>\n            <Tests tests={this.props.tests}/>\n        </Container>\n    }\n}\n\nexport default TestsPage;\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport TestsPage from \"./TestsPage\";\nimport Test from \"./Test\";\nimport {Message} from \"semantic-ui-react\";\nimport config from \"../lib/Config\";\n\nclass WebassemblyTestApp extends Component {\n\n    constructor(props) {\n        super(props);\n        window.wasm = {};\n        this.state = {\n            loading: true,\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const go = new window.Go();\n\n        Promise.all([\n            import(\"webassembly-tests-rust\"),\n            WebAssembly.instantiateStreaming(fetch('go/webassembly-tests-go.wasm'), go.importObject)\n        ])\n            .then(module => {\n                window.wasm.rust = module[0];\n                go.run(module[1].instance);\n                this.setState({loading: false});\n            })\n            .catch(error => this.setState({error: error.message}));\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Message error>Could not load configuration: {this.state.error}</Message>\n        } else if (!this.state.loading) {\n            return <main>\n                <HashRouter>\n                    <Switch>\n                        <Route path='/' render={() => <TestsPage tests={config.tests}/>}/>\n                        <Route path='/test/:id' component={Test}/>\n                    </Switch>\n                </HashRouter>\n            </main>\n        } else {\n            return <div>Loading...</div>\n        }\n    }\n}\n\nexport default WebassemblyTestApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. WebassemblyTestApp is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WebassemblyTestApp from './components/WebassemblyTestApp';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\n\nReactDOM.render(\n    <WebassemblyTestApp />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}