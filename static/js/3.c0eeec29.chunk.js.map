{"version":3,"sources":["../../webassembly-tests-rust/pkg/webassembly_benchmarks_rust.js"],"names":["WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","passStringToWasm","len","ptr","mem","offset","code","charCodeAt","slice","subarray","strings_dynamic","a","b","strings_static","repeat","cachegetInt32Memory","getInt32Memory","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm","decode","hanoi","n","from","to","via","memi32","v0","retptr","sort","cachegetUint32Memory","getArrayU32FromWasm","Uint32Array","prime","max","sha256","sha512","aes","deflate","exif","heap","Array","fill","undefined","push","stack_pointer","convolve","canvas","obj","Error","addBorrowedObject","passArray8ToWasm","cachegetUint8ClampedMemory","getClampedArrayU8FromWasm","Uint8ClampedArray","convolve_video","data","width","height","factor","count","dom","heap_next","addHeapObject","idx","prepare_test_data","test","reset_test_data","clear_test_data","iterate","fibonacci","sum","getObject","takeObject","ret","dropObject","handleError","e","isLikeNone","x","__wbindgen_object_drop_ref","arg0","__wbindgen_string_new","arg1","__wbindgen_json_serialize","ret0","JSON","stringify","ret1","__widl_instanceof_Window","Window","__widl_instanceof_CanvasRenderingContext2D","CanvasRenderingContext2D","__widl_f_get_image_data_CanvasRenderingContext2D","arg2","arg3","arg4","getImageData","__widl_f_put_image_data_CanvasRenderingContext2D","putImageData","__widl_f_create_element_Document","createElement","__widl_f_body_Document","body","__widl_f_get_context_HTMLCanvasElement","getContext","__widl_f_width_HTMLCanvasElement","__widl_f_height_HTMLCanvasElement","__widl_f_new_with_u8_clamped_array_and_sh_ImageData","ImageData","__widl_f_width_ImageData","__widl_f_height_ImageData","__widl_f_data_ImageData","__widl_f_append_child_Node","appendChild","__widl_f_remove_child_Node","removeChild","__widl_f_set_text_content_Node","textContent","__widl_f_document_Window","document","__wbindgen_object_clone_ref","__widl_f_debug_1_","console","debug","__wbg_call_11f5c018dea16986","call","__wbg_newnoargs_8effd2c0e33a9e83","Function","__wbg_globalThis_b8da724777cacbb6","globalThis","__wbg_self_78670bf6333531d2","self","__wbg_window_b19864ecbde8d123","window","__wbg_global_c6db5ff079ba98ed","global","__wbindgen_is_undefined","__wbg_buffer_cdcb54e9871fd20a","__wbg_length_deb426bb35063224","__wbg_new_8f74bcd603e235c0","__wbg_set_662b22f1b4008ab7","__wbg_instanceof_Uint8Array_7d7ec1a262a2de7d","__wbg_byteLength_66504bf17d7a1c5a","byteLength","__wbindgen_debug_string","debugString","val","type","concat","description","name","isArray","i","builtInMatches","exec","toString","className","_","message","stack","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory"],"mappings":"oIAAA,8rGACA,IAAIA,EAAkB,EAClBC,EAAoB,IAAIC,YAAY,SACxC,MAAMC,EAAuD,oBAAjCF,EAAkBG,WAA4B,SAAUC,EAAKC,GACvF,OAAOL,EAAkBG,WAAWC,EAAKC,IACvC,SAAUD,EAAKC,GACjB,MAAMC,EAAMN,EAAkBO,OAAOH,GAErC,OADAC,EAAKG,IAAIF,GACF,CACLG,KAAML,EAAIM,OACVC,QAASL,EAAII,SAGjB,IAAIE,EAAsB,KAE1B,SAASC,IAKP,OAJ4B,OAAxBD,GAAgCA,EAAoBE,SAAW,IAAYA,SAC7EF,EAAsB,IAAIG,WAAW,IAAYD,SAG5CF,EAGT,SAASI,EAAiBZ,GACxB,IAAIa,EAAMb,EAAIM,OAEVQ,EAAM,IAAuBD,GAEjC,MAAME,EAAMN,IACZ,IAAIO,EAAS,EAEb,KAAOA,EAASH,EAAKG,IAAU,CAC7B,MAAMC,EAAOjB,EAAIkB,WAAWF,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAID,EAAME,GAAUC,EAGtB,GAAID,IAAWH,EAAK,CACH,IAAXG,IACFhB,EAAMA,EAAImB,MAAMH,IAGlBF,EAAM,IAAwBA,EAAKD,EAAKA,EAAMG,EAAsB,EAAbhB,EAAIM,QAC3D,MAAML,EAAOQ,IAAiBW,SAASN,EAAME,EAAQF,EAAMD,GAE3DG,GADYlB,EAAaE,EAAKC,GAChBM,QAIhB,OADAZ,EAAkBqB,EACXF,EASF,SAASO,EAAgBC,EAAGC,GAEjC,OAAe,IADH,IAAqBX,EAAiBU,GAAI3B,EAAiBiB,EAAiBW,GAAI5B,GAOvF,SAAS6B,EAAeC,GAC7B,IAAoBA,GAEtB,IAAIC,EAAsB,KAE1B,SAASC,IAKP,OAJ4B,OAAxBD,GAAgCA,EAAoBhB,SAAW,IAAYA,SAC7EgB,EAAsB,IAAIE,WAAW,IAAYlB,SAG5CgB,EAGT,IAAIG,EAAoB,IAAIC,YAAY,QAAS,CAC/CC,WAAW,EACXC,OAAO,IAGT,SAASC,EAAkBnB,EAAKD,GAC9B,OAAOgB,EAAkBK,OAAOzB,IAAiBW,SAASN,EAAKA,EAAMD,IAWhE,SAASsB,EAAMC,EAAGC,EAAMC,EAAIC,GAErB,IADG,EACgBH,EAAGxB,EAAiByB,GAAO1C,EAAiBiB,EAAiB0B,GAAK3C,EAAiBiB,EAAiB2B,GAAM5C,GADzI,MAEM6C,EAASb,IACTc,EAAKR,EAAkBO,EAAOE,GAAiBF,EAAOE,IAAiBvB,QAI7E,OAFA,IAAqBqB,EAAOE,GAA0C,EAAzBF,EAAOE,IAE7CD,EAKF,SAASE,IACd,MAEF,IAAIC,EAAuB,KAU3B,SAASC,EAAoB/B,EAAKD,GAChC,OAR6B,OAAzB+B,GAAiCA,EAAqBlC,SAAW,IAAYA,SAC/EkC,EAAuB,IAAIE,YAAY,IAAYpC,SAG9CkC,GAIkBxB,SAASN,EAAM,EAAGA,EAAM,EAAID,GAQhD,SAASkC,EAAMC,GAER,IADG,EACgBA,GAD/B,MAEMR,EAASb,IACTc,EAAKI,EAAoBL,EAAOE,GAAiBF,EAAOE,IAAiBvB,QAI/E,OAFA,IAAqBqB,EAAOE,GAA0C,EAAzBF,EAAOE,IAE7CD,EAMF,SAASQ,IAEF,IADG,GAAf,MAEMT,EAASb,IACTc,EAAKR,EAAkBO,EAAOE,GAAiBF,EAAOE,IAAiBvB,QAI7E,OAFA,IAAqBqB,EAAOE,GAA0C,EAAzBF,EAAOE,IAE7CD,EAMF,SAASS,IAEF,IADG,GAAf,MAEMV,EAASb,IACTc,EAAKR,EAAkBO,EAAOE,GAAiBF,EAAOE,IAAiBvB,QAI7E,OAFA,IAAqBqB,EAAOE,GAA0C,EAAzBF,EAAOE,IAE7CD,EAKF,SAASU,IACd,MAKK,SAASC,IACd,MAMK,SAASC,IAEF,IADG,GAAf,MAEMb,EAASb,IACTc,EAAKR,EAAkBO,EAAOE,GAAiBF,EAAOE,IAAiBvB,QAI7E,OAFA,IAAqBqB,EAAOE,GAA0C,EAAzBF,EAAOE,IAE7CD,EAET,MAAMa,EAAO,IAAIC,MAAM,IACvBD,EAAKE,UAAKC,GACVH,EAAKI,UAAKD,EAAW,MAAM,GAAM,GACjC,IAAIE,EAAgB,GAYb,SAASC,EAASC,GACvB,IACE,IAZJ,SAA2BC,GACzB,GAAqB,GAAjBH,EAAoB,MAAM,IAAII,MAAM,mBAExC,OADAT,IAAOK,GAAiBG,EACjBH,EASSK,CAAkBH,IAChC,QACAP,EAAKK,UAAmBF,GAI5B,SAASQ,EAAiBjE,GACxB,MAAMc,EAAM,IAAoC,EAAbd,EAAIM,QAIvC,OAFAG,IAAiBL,IAAIJ,EAAKc,EAAM,GAChCnB,EAAkBK,EAAIM,OACfQ,EAGT,IAAIoD,EAA6B,KAUjC,SAASC,EAA0BrD,EAAKD,GACtC,OARmC,OAA/BqD,GAAuCA,EAA2BxD,SAAW,IAAYA,SAC3FwD,EAA6B,IAAIE,kBAAkB,IAAY1D,SAG1DwD,GAIwB9C,SAASN,EAAM,EAAGA,EAAM,EAAID,GAYtD,SAASwD,EAAeC,EAAMC,EAAOC,EAAQC,EAAQC,GAE9C,IADG,EACyBT,EAAiBK,GAAO3E,EAAiB4E,EAAOC,EAAQC,EAAQC,GADxG,MAEMlC,EAASb,IACTc,EAAK0B,EAA0B3B,EAAOE,GAAiBF,EAAOE,IAAiBvB,QAIrF,OAFA,IAAqBqB,EAAOE,GAA0C,EAAzBF,EAAOE,IAE7CD,EAMF,SAASkC,EAAIvC,GAClB,IAASA,GAEX,IAAIwC,EAAYtB,EAAKhD,OAErB,SAASuE,EAAcf,GACjBc,IAActB,EAAKhD,QAAQgD,EAAKI,KAAKJ,EAAKhD,OAAS,GACvD,MAAMwE,EAAMF,EAGZ,OAFAA,EAAYtB,EAAKwB,GACjBxB,EAAKwB,GAAOhB,EACLgB,EAQF,SAASC,EAAkBC,EAAMV,GACtC,IAAuB1D,EAAiBoE,GAAOrF,EAAiBkF,EAAcP,IAMzE,SAASW,EAAgBD,GAC9B,IAAqBpE,EAAiBoE,GAAOrF,GAMxC,SAASuF,EAAgBF,GAC9B,IAAqBpE,EAAiBoE,GAAOrF,GAOxC,SAASwF,EAAQnC,GAEtB,OADY,IAAaA,GAQpB,SAASoC,EAAUhD,GAExB,OADY,IAAeA,GAOtB,SAASiD,EAAI5D,GAClB,IAASA,GAGX,SAAS6D,EAAUR,GACjB,OAAOxB,EAAKwB,GASd,SAASS,EAAWT,GAClB,MAAMU,EAAMF,EAAUR,GAEtB,OATF,SAAoBA,GACdA,EAAM,KACVxB,EAAKwB,GAAOF,EACZA,EAAYE,GAKZW,CAAWX,GACJU,EAGT,SAASE,EAAYC,GACnB,IAA0Bd,EAAcc,IAG1C,SAASC,EAAWC,GAClB,YAAapC,IAANoC,GAAyB,OAANA,EAmFrB,MAAMC,EAA6B,SAAUC,GAClDR,EAAWQ,IAEAC,EAAwB,SAAUD,EAAME,GAEnD,OAAOpB,EADK5C,EAAkB8D,EAAME,KAGzBC,EAA4B,SAAUH,EAAME,GACvD,MAAMnC,EAAMwB,EAAUW,GAEhBE,EAAOvF,EADDwF,KAAKC,eAAkB5C,IAARK,EAAoB,KAAOA,IAEhDwC,EAAO3G,EACbgC,IAAiBoE,EAAO,EAAI,GAAKI,EACjCxE,IAAiBoE,EAAO,EAAI,GAAKO,GAEtBC,EAA2B,SAAUR,GAEhD,OADYT,EAAUS,aAAiBS,QAG5BC,EAA6C,SAAUV,GAElE,OADYT,EAAUS,aAAiBW,0BAG5BC,EAAmD,SAAUZ,EAAME,EAAMW,EAAMC,EAAMC,GAChG,IAEE,OAAOjC,EADKS,EAAUS,GAAMgB,aAAad,EAAMW,EAAMC,EAAMC,IAE3D,MAAOnB,GACPD,EAAYC,KAGHqB,EAAmD,SAAUjB,EAAME,EAAMW,EAAMC,GAC1F,IACEvB,EAAUS,GAAMkB,aAAa3B,EAAUW,GAAOW,EAAMC,GACpD,MAAOlB,GACPD,EAAYC,KAGHuB,EAAmC,SAAUnB,EAAME,EAAMW,GACpE,IAEE,OAAO/B,EADKS,EAAUS,GAAMoB,cAAclF,EAAkBgE,EAAMW,KAElE,MAAOjB,GACPD,EAAYC,KAGHyB,GAAyB,SAAUrB,GAC9C,MAAMP,EAAMF,EAAUS,GAAMsB,KAC5B,OAAOzB,EAAWJ,GAAO,EAAIX,EAAcW,IAEhC8B,GAAyC,SAAUvB,EAAME,EAAMW,GAC1E,IACE,MAAMpB,EAAMF,EAAUS,GAAMwB,WAAWtF,EAAkBgE,EAAMW,IAC/D,OAAOhB,EAAWJ,GAAO,EAAIX,EAAcW,GAC3C,MAAOG,GACPD,EAAYC,KAGH6B,GAAmC,SAAUzB,GAExD,OADYT,EAAUS,GAAMxB,OAGjBkD,GAAoC,SAAU1B,GAEzD,OADYT,EAAUS,GAAMvB,QAGjBkD,GAAsD,SAAU3B,EAAME,EAAMW,EAAMC,GAC7F,IAEE,OAAOhC,EADK,IAAI8C,UAAUxD,EAA0B4B,EAAME,GAAOW,IAAS,EAAGC,IAAS,IAEtF,MAAOlB,GACPD,EAAYC,KAGHiC,GAA2B,SAAU7B,GAEhD,OADYT,EAAUS,GAAMxB,OAGjBsD,GAA4B,SAAU9B,GAEjD,OADYT,EAAUS,GAAMvB,QAGjBsD,GAA0B,SAAU/B,EAAME,GACrD,MACME,EAAOlC,EADDqB,EAAUW,GAAM3B,MAEtBgC,EAAO3G,EACbgC,IAAiBoE,EAAO,EAAI,GAAKI,EACjCxE,IAAiBoE,EAAO,EAAI,GAAKO,GAEtByB,GAA6B,SAAUhC,EAAME,GACxD,IAEE,OAAOpB,EADKS,EAAUS,GAAMiC,YAAY1C,EAAUW,KAElD,MAAON,GACPD,EAAYC,KAGHsC,GAA6B,SAAUlC,EAAME,GACxD,IAEE,OAAOpB,EADKS,EAAUS,GAAMmC,YAAY5C,EAAUW,KAElD,MAAON,GACPD,EAAYC,KAGHwC,GAAiC,SAAUpC,EAAME,EAAMW,GAClEtB,EAAUS,GAAMqC,YAAuB,IAATnC,OAAaxC,EAAYxB,EAAkBgE,EAAMW,IAEpEyB,GAA2B,SAAUtC,GAChD,MAAMP,EAAMF,EAAUS,GAAMuC,SAC5B,OAAO1C,EAAWJ,GAAO,EAAIX,EAAcW,IAEhC+C,GAA8B,SAAUxC,GAEnD,OAAOlB,EADKS,EAAUS,KAGXyC,GAAoB,SAAUzC,GACzC0C,QAAQC,MAAMpD,EAAUS,KAEb4C,GAA8B,SAAU5C,EAAME,GACzD,IAEE,OAAOpB,EADKS,EAAUS,GAAM6C,KAAKtD,EAAUW,KAE3C,MAAON,GACPD,EAAYC,KAGHkD,GAAmC,SAAU9C,EAAME,GAE9D,OAAOpB,EADK,IAAIiE,SAAS7G,EAAkB8D,EAAME,MAGtC8C,GAAoC,WAC/C,IAEE,OAAOlE,EADKmE,WAAWA,YAEvB,MAAOrD,GACPD,EAAYC,KAGHsD,GAA8B,WACzC,IAEE,OAAOpE,EADKqE,KAAKA,MAEjB,MAAOvD,GACPD,EAAYC,KAGHwD,GAAgC,WAC3C,IAEE,OAAOtE,EADKuE,OAAOA,QAEnB,MAAOzD,GACPD,EAAYC,KAGH0D,GAAgC,WAC3C,IAEE,OAAOxE,EADKyE,EAAOA,QAEnB,MAAO3D,GACPD,EAAYC,KAGH4D,GAA0B,SAAUxD,GAE/C,YADgCtC,IAApB6B,EAAUS,IAGXyD,GAAgC,SAAUzD,GAErD,OAAOlB,EADKS,EAAUS,GAAMrF,SAGjB+I,GAAgC,SAAU1D,GAErD,OADYT,EAAUS,GAAMzF,QAGjBoJ,GAA6B,SAAU3D,GAElD,OAAOlB,EADK,IAAIlE,WAAW2E,EAAUS,MAG1B4D,GAA6B,SAAU5D,EAAME,EAAMW,GAC9DtB,EAAUS,GAAM3F,IAAIkF,EAAUW,GAAOW,IAAS,IAEnCgD,GAA+C,SAAU7D,GAEpE,OADYT,EAAUS,aAAiBpF,YAG5BkJ,GAAoC,SAAU9D,GAEzD,OADYT,EAAUS,GAAM+D,YAGjBC,GAA0B,SAAUhE,EAAME,GACrD,MACME,EAAOvF,EAhRf,SAASoJ,EAAYC,GAEnB,MAAMC,SAAcD,EAEpB,GAAY,UAARC,GAA4B,WAARA,GAA4B,MAAPD,EAC3C,MAAO,GAAGE,OAAOF,GAGnB,GAAY,UAARC,EACF,MAAO,IAAKC,OAAOF,EAAK,KAG1B,GAAY,UAARC,EAAkB,CACpB,MAAME,EAAcH,EAAIG,YAExB,OAAmB,MAAfA,EACK,SAEA,UAAUD,OAAOC,EAAa,KAIzC,GAAY,YAARF,EAAoB,CACtB,MAAMG,EAAOJ,EAAII,KAEjB,MAAmB,iBAARA,GAAoBA,EAAK/J,OAAS,EACpC,YAAY6J,OAAOE,EAAM,KAEzB,WAKX,GAAI9G,MAAM+G,QAAQL,GAAM,CACtB,MAAM3J,EAAS2J,EAAI3J,OACnB,IAAIoI,EAAQ,IAERpI,EAAS,IACXoI,GAASsB,EAAYC,EAAI,KAG3B,IAAK,IAAIM,EAAI,EAAGA,EAAIjK,EAAQiK,IAC1B7B,GAAS,KAAOsB,EAAYC,EAAIM,IAIlC,OADA7B,GAAS,IAKX,MAAM8B,EAAiB,sBAAsBC,KAAKC,SAAS9B,KAAKqB,IAChE,IAAIU,EAEJ,KAAIH,EAAelK,OAAS,GAI1B,OAAOoK,SAAS9B,KAAKqB,GAGvB,GAAiB,WANfU,EAAYH,EAAe,IAU3B,IACE,MAAO,UAAYpE,KAAKC,UAAU4D,GAAO,IACzC,MAAOW,GACP,MAAO,SAKX,OAAIX,aAAelG,MACV,GAAGoG,OAAOF,EAAII,KAAM,MAAMF,OAAOF,EAAIY,QAAS,MAAMV,OAAOF,EAAIa,OAIjEH,EAkMKX,CAAY1E,EAAUW,KAE5BK,EAAO3G,EACbgC,IAAiBoE,EAAO,EAAI,GAAKI,EACjCxE,IAAiBoE,EAAO,EAAI,GAAKO,GAEtByE,GAAmB,SAAUhF,EAAME,GAC9C,MAAM,IAAIlC,MAAM9B,EAAkB8D,EAAME,KAE7B+E,GAAqB,SAAUjF,GAC1C,MAAMR,EAAWQ,IAENkF,GAAoB,WAE/B,OAAOpG,EADK,O","file":"static/js/3.c0eeec29.chunk.js","sourcesContent":["import * as wasm from './webassembly_benchmarks_rust_bg.wasm';\nlet WASM_VECTOR_LEN = 0;\nlet cachedTextEncoder = new TextEncoder('utf-8');\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nlet cachegetUint8Memory = null;\n\nfunction getUint8Memory() {\n  if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory;\n}\n\nfunction passStringToWasm(arg) {\n  let len = arg.length;\n\n  let ptr = wasm.__wbindgen_malloc(len);\n\n  const mem = getUint8Memory();\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n\n    ptr = wasm.__wbindgen_realloc(ptr, len, len = offset + arg.length * 3);\n    const view = getUint8Memory().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n/**\n* @param {string} a\n* @param {string} b\n* @returns {boolean}\n*/\n\n\nexport function strings_dynamic(a, b) {\n  const ret = wasm.strings_dynamic(passStringToWasm(a), WASM_VECTOR_LEN, passStringToWasm(b), WASM_VECTOR_LEN);\n  return ret !== 0;\n}\n/**\n* @param {number} repeat\n*/\n\nexport function strings_static(repeat) {\n  wasm.strings_static(repeat);\n}\nlet cachegetInt32Memory = null;\n\nfunction getInt32Memory() {\n  if (cachegetInt32Memory === null || cachegetInt32Memory.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32Memory;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\n\nfunction getStringFromWasm(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n* @param {number} n\n* @param {string} from\n* @param {string} to\n* @param {string} via\n* @returns {string}\n*/\n\n\nexport function hanoi(n, from, to, via) {\n  const retptr = 8;\n  const ret = wasm.hanoi(retptr, n, passStringToWasm(from), WASM_VECTOR_LEN, passStringToWasm(to), WASM_VECTOR_LEN, passStringToWasm(via), WASM_VECTOR_LEN);\n  const memi32 = getInt32Memory();\n  const v0 = getStringFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n\n  wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n\n  return v0;\n}\n/**\n*/\n\nexport function sort() {\n  wasm.sort();\n}\nlet cachegetUint32Memory = null;\n\nfunction getUint32Memory() {\n  if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n    cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint32Memory;\n}\n\nfunction getArrayU32FromWasm(ptr, len) {\n  return getUint32Memory().subarray(ptr / 4, ptr / 4 + len);\n}\n/**\n* @param {number} max\n* @returns {Uint32Array}\n*/\n\n\nexport function prime(max) {\n  const retptr = 8;\n  const ret = wasm.prime(retptr, max);\n  const memi32 = getInt32Memory();\n  const v0 = getArrayU32FromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n\n  wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 4);\n\n  return v0;\n}\n/**\n* @returns {string}\n*/\n\nexport function sha256() {\n  const retptr = 8;\n  const ret = wasm.sha256(retptr);\n  const memi32 = getInt32Memory();\n  const v0 = getStringFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n\n  wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n\n  return v0;\n}\n/**\n* @returns {string}\n*/\n\nexport function sha512() {\n  const retptr = 8;\n  const ret = wasm.sha512(retptr);\n  const memi32 = getInt32Memory();\n  const v0 = getStringFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n\n  wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n\n  return v0;\n}\n/**\n*/\n\nexport function aes() {\n  wasm.aes();\n}\n/**\n*/\n\nexport function deflate() {\n  wasm.deflate();\n}\n/**\n* @returns {string}\n*/\n\nexport function exif() {\n  const retptr = 8;\n  const ret = wasm.exif(retptr);\n  const memi32 = getInt32Memory();\n  const v0 = getStringFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n\n  wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n\n  return v0;\n}\nconst heap = new Array(32);\nheap.fill(undefined);\nheap.push(undefined, null, true, false);\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n  if (stack_pointer == 1) throw new Error('out of js stack');\n  heap[--stack_pointer] = obj;\n  return stack_pointer;\n}\n/**\n* @param {any} canvas\n*/\n\n\nexport function convolve(canvas) {\n  try {\n    wasm.convolve(addBorrowedObject(canvas));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\nfunction passArray8ToWasm(arg) {\n  const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n\n  getUint8Memory().set(arg, ptr / 1);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n\nlet cachegetUint8ClampedMemory = null;\n\nfunction getUint8ClampedMemory() {\n  if (cachegetUint8ClampedMemory === null || cachegetUint8ClampedMemory.buffer !== wasm.memory.buffer) {\n    cachegetUint8ClampedMemory = new Uint8ClampedArray(wasm.memory.buffer);\n  }\n\n  return cachegetUint8ClampedMemory;\n}\n\nfunction getClampedArrayU8FromWasm(ptr, len) {\n  return getUint8ClampedMemory().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {Uint8ClampedArray} data\n* @param {number} width\n* @param {number} height\n* @param {number} factor\n* @param {number} count\n* @returns {Uint8ClampedArray}\n*/\n\n\nexport function convolve_video(data, width, height, factor, count) {\n  const retptr = 8;\n  const ret = wasm.convolve_video(retptr, passArray8ToWasm(data), WASM_VECTOR_LEN, width, height, factor, count);\n  const memi32 = getInt32Memory();\n  const v0 = getClampedArrayU8FromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n\n  wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n\n  return v0;\n}\n/**\n* @param {number} n\n*/\n\nexport function dom(n) {\n  wasm.dom(n);\n}\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n/**\n* @param {string} test\n* @param {any} data\n*/\n\n\nexport function prepare_test_data(test, data) {\n  wasm.prepare_test_data(passStringToWasm(test), WASM_VECTOR_LEN, addHeapObject(data));\n}\n/**\n* @param {string} test\n*/\n\nexport function reset_test_data(test) {\n  wasm.reset_test_data(passStringToWasm(test), WASM_VECTOR_LEN);\n}\n/**\n* @param {string} test\n*/\n\nexport function clear_test_data(test) {\n  wasm.clear_test_data(passStringToWasm(test), WASM_VECTOR_LEN);\n}\n/**\n* @param {number} max\n* @returns {number}\n*/\n\nexport function iterate(max) {\n  const ret = wasm.iterate(max);\n  return ret;\n}\n/**\n* @param {number} n\n* @returns {number}\n*/\n\nexport function fibonacci(n) {\n  const ret = wasm.fibonacci(n);\n  return ret;\n}\n/**\n* @param {number} repeat\n*/\n\nexport function sum(repeat) {\n  wasm.sum(repeat);\n}\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nfunction handleError(e) {\n  wasm.__wbindgen_exn_store(addHeapObject(e));\n}\n\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n  // primitive types\n  const type = typeof val;\n\n  if (type == 'number' || type == 'boolean' || val == null) {\n    return \"\".concat(val);\n  }\n\n  if (type == 'string') {\n    return \"\\\"\".concat(val, \"\\\"\");\n  }\n\n  if (type == 'symbol') {\n    const description = val.description;\n\n    if (description == null) {\n      return 'Symbol';\n    } else {\n      return \"Symbol(\".concat(description, \")\");\n    }\n  }\n\n  if (type == 'function') {\n    const name = val.name;\n\n    if (typeof name == 'string' && name.length > 0) {\n      return \"Function(\".concat(name, \")\");\n    } else {\n      return 'Function';\n    }\n  } // objects\n\n\n  if (Array.isArray(val)) {\n    const length = val.length;\n    let debug = '[';\n\n    if (length > 0) {\n      debug += debugString(val[0]);\n    }\n\n    for (let i = 1; i < length; i++) {\n      debug += ', ' + debugString(val[i]);\n    }\n\n    debug += ']';\n    return debug;\n  } // Test for built-in\n\n\n  const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n  let className;\n\n  if (builtInMatches.length > 1) {\n    className = builtInMatches[1];\n  } else {\n    // Failed to match the standard '[object ClassName]'\n    return toString.call(val);\n  }\n\n  if (className == 'Object') {\n    // we're a user defined class or Object\n    // JSON.stringify avoids problems with cycles, and is generally much\n    // easier than looping through ownProperties of `val`.\n    try {\n      return 'Object(' + JSON.stringify(val) + ')';\n    } catch (_) {\n      return 'Object';\n    }\n  } // errors\n\n\n  if (val instanceof Error) {\n    return \"\".concat(val.name, \": \").concat(val.message, \"\\n\").concat(val.stack);\n  } // TODO we could test for more things here, like `Set`s and `Map`s.\n\n\n  return className;\n}\n\nexport const __wbindgen_object_drop_ref = function (arg0) {\n  takeObject(arg0);\n};\nexport const __wbindgen_string_new = function (arg0, arg1) {\n  const ret = getStringFromWasm(arg0, arg1);\n  return addHeapObject(ret);\n};\nexport const __wbindgen_json_serialize = function (arg0, arg1) {\n  const obj = getObject(arg1);\n  const ret = JSON.stringify(obj === undefined ? null : obj);\n  const ret0 = passStringToWasm(ret);\n  const ret1 = WASM_VECTOR_LEN;\n  getInt32Memory()[arg0 / 4 + 0] = ret0;\n  getInt32Memory()[arg0 / 4 + 1] = ret1;\n};\nexport const __widl_instanceof_Window = function (arg0) {\n  const ret = getObject(arg0) instanceof Window;\n  return ret;\n};\nexport const __widl_instanceof_CanvasRenderingContext2D = function (arg0) {\n  const ret = getObject(arg0) instanceof CanvasRenderingContext2D;\n  return ret;\n};\nexport const __widl_f_get_image_data_CanvasRenderingContext2D = function (arg0, arg1, arg2, arg3, arg4) {\n  try {\n    const ret = getObject(arg0).getImageData(arg1, arg2, arg3, arg4);\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __widl_f_put_image_data_CanvasRenderingContext2D = function (arg0, arg1, arg2, arg3) {\n  try {\n    getObject(arg0).putImageData(getObject(arg1), arg2, arg3);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __widl_f_create_element_Document = function (arg0, arg1, arg2) {\n  try {\n    const ret = getObject(arg0).createElement(getStringFromWasm(arg1, arg2));\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __widl_f_body_Document = function (arg0) {\n  const ret = getObject(arg0).body;\n  return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\nexport const __widl_f_get_context_HTMLCanvasElement = function (arg0, arg1, arg2) {\n  try {\n    const ret = getObject(arg0).getContext(getStringFromWasm(arg1, arg2));\n    return isLikeNone(ret) ? 0 : addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __widl_f_width_HTMLCanvasElement = function (arg0) {\n  const ret = getObject(arg0).width;\n  return ret;\n};\nexport const __widl_f_height_HTMLCanvasElement = function (arg0) {\n  const ret = getObject(arg0).height;\n  return ret;\n};\nexport const __widl_f_new_with_u8_clamped_array_and_sh_ImageData = function (arg0, arg1, arg2, arg3) {\n  try {\n    const ret = new ImageData(getClampedArrayU8FromWasm(arg0, arg1), arg2 >>> 0, arg3 >>> 0);\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __widl_f_width_ImageData = function (arg0) {\n  const ret = getObject(arg0).width;\n  return ret;\n};\nexport const __widl_f_height_ImageData = function (arg0) {\n  const ret = getObject(arg0).height;\n  return ret;\n};\nexport const __widl_f_data_ImageData = function (arg0, arg1) {\n  const ret = getObject(arg1).data;\n  const ret0 = passArray8ToWasm(ret);\n  const ret1 = WASM_VECTOR_LEN;\n  getInt32Memory()[arg0 / 4 + 0] = ret0;\n  getInt32Memory()[arg0 / 4 + 1] = ret1;\n};\nexport const __widl_f_append_child_Node = function (arg0, arg1) {\n  try {\n    const ret = getObject(arg0).appendChild(getObject(arg1));\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __widl_f_remove_child_Node = function (arg0, arg1) {\n  try {\n    const ret = getObject(arg0).removeChild(getObject(arg1));\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __widl_f_set_text_content_Node = function (arg0, arg1, arg2) {\n  getObject(arg0).textContent = arg1 === 0 ? undefined : getStringFromWasm(arg1, arg2);\n};\nexport const __widl_f_document_Window = function (arg0) {\n  const ret = getObject(arg0).document;\n  return isLikeNone(ret) ? 0 : addHeapObject(ret);\n};\nexport const __wbindgen_object_clone_ref = function (arg0) {\n  const ret = getObject(arg0);\n  return addHeapObject(ret);\n};\nexport const __widl_f_debug_1_ = function (arg0) {\n  console.debug(getObject(arg0));\n};\nexport const __wbg_call_11f5c018dea16986 = function (arg0, arg1) {\n  try {\n    const ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __wbg_newnoargs_8effd2c0e33a9e83 = function (arg0, arg1) {\n  const ret = new Function(getStringFromWasm(arg0, arg1));\n  return addHeapObject(ret);\n};\nexport const __wbg_globalThis_b8da724777cacbb6 = function () {\n  try {\n    const ret = globalThis.globalThis;\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __wbg_self_78670bf6333531d2 = function () {\n  try {\n    const ret = self.self;\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __wbg_window_b19864ecbde8d123 = function () {\n  try {\n    const ret = window.window;\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __wbg_global_c6db5ff079ba98ed = function () {\n  try {\n    const ret = global.global;\n    return addHeapObject(ret);\n  } catch (e) {\n    handleError(e);\n  }\n};\nexport const __wbindgen_is_undefined = function (arg0) {\n  const ret = getObject(arg0) === undefined;\n  return ret;\n};\nexport const __wbg_buffer_cdcb54e9871fd20a = function (arg0) {\n  const ret = getObject(arg0).buffer;\n  return addHeapObject(ret);\n};\nexport const __wbg_length_deb426bb35063224 = function (arg0) {\n  const ret = getObject(arg0).length;\n  return ret;\n};\nexport const __wbg_new_8f74bcd603e235c0 = function (arg0) {\n  const ret = new Uint8Array(getObject(arg0));\n  return addHeapObject(ret);\n};\nexport const __wbg_set_662b22f1b4008ab7 = function (arg0, arg1, arg2) {\n  getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\nexport const __wbg_instanceof_Uint8Array_7d7ec1a262a2de7d = function (arg0) {\n  const ret = getObject(arg0) instanceof Uint8Array;\n  return ret;\n};\nexport const __wbg_byteLength_66504bf17d7a1c5a = function (arg0) {\n  const ret = getObject(arg0).byteLength;\n  return ret;\n};\nexport const __wbindgen_debug_string = function (arg0, arg1) {\n  const ret = debugString(getObject(arg1));\n  const ret0 = passStringToWasm(ret);\n  const ret1 = WASM_VECTOR_LEN;\n  getInt32Memory()[arg0 / 4 + 0] = ret0;\n  getInt32Memory()[arg0 / 4 + 1] = ret1;\n};\nexport const __wbindgen_throw = function (arg0, arg1) {\n  throw new Error(getStringFromWasm(arg0, arg1));\n};\nexport const __wbindgen_rethrow = function (arg0) {\n  throw takeObject(arg0);\n};\nexport const __wbindgen_memory = function () {\n  const ret = wasm.memory;\n  return addHeapObject(ret);\n};"],"sourceRoot":""}